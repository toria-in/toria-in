{"dependencies":[{"name":"@react-navigation/native","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":17,"index":190},"end":{"line":5,"column":52,"index":225}}],"key":"uE+cRVNnMKkS9OYKR5fpRqPul5s=","exportNames":["*"],"imports":1}},{"name":"expo-modules-core","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":28,"index":255},"end":{"line":6,"column":56,"index":283}}],"key":"lFSV8MloDpR3EnWyvloF9Uq7qFY=","exportNames":["*"],"imports":1}},{"name":"./constants","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":20,"index":305},"end":{"line":7,"column":42,"index":327}}],"key":"3z43bJyk/UB4EKjDCOXTFak09do=","exportNames":["*"],"imports":1}},{"name":"./getReactNavigationConfig","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":35,"index":364},"end":{"line":8,"column":72,"index":401}}],"key":"vHLl09Fo1cot8Q7f7epxLLVamLs=","exportNames":["*"],"imports":1}},{"name":"./getRoutesRedirects","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":29,"index":432},"end":{"line":9,"column":60,"index":463}}],"key":"E6xJvmMQ8Tg9oU66GfkFALUrP4w=","exportNames":["*"],"imports":1}},{"name":"./link/linking","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":18,"index":483},"end":{"line":10,"column":43,"index":508}}],"key":"I1McWHLUyOzTMAaygW/PL/mjMmY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getNavigationConfig = getNavigationConfig;\n  exports.getLinkingConfig = getLinkingConfig;\n  const native_1 = require(_dependencyMap[0], \"@react-navigation/native\");\n  const expo_modules_core_1 = require(_dependencyMap[1], \"expo-modules-core\");\n  const constants_1 = require(_dependencyMap[2], \"./constants\");\n  const getReactNavigationConfig_1 = require(_dependencyMap[3], \"./getReactNavigationConfig\");\n  const getRoutesRedirects_1 = require(_dependencyMap[4], \"./getRoutesRedirects\");\n  const linking_1 = require(_dependencyMap[5], \"./link/linking\");\n  function getNavigationConfig(routes, metaOnly, {\n    sitemap,\n    notFound\n  }) {\n    const config = (0, getReactNavigationConfig_1.getReactNavigationConfig)(routes, metaOnly);\n    const sitemapRoute = (() => {\n      const path = '_sitemap';\n      if (sitemap === false || isPathInRootConfig(config, path)) {\n        return {};\n      }\n      return generateLinkingPathInRoot(constants_1.SITEMAP_ROUTE_NAME, path, metaOnly);\n    })();\n    const notFoundRoute = (() => {\n      const path = '*not-found';\n      if (notFound === false || isPathInRootConfig(config, path)) {\n        return {};\n      }\n      return generateLinkingPathInRoot(constants_1.NOT_FOUND_ROUTE_NAME, path, metaOnly);\n    })();\n    return {\n      screens: {\n        [constants_1.INTERNAL_SLOT_NAME]: {\n          path: '',\n          ...config\n        },\n        ...sitemapRoute,\n        ...notFoundRoute\n      }\n    };\n  }\n  function getLinkingConfig(routes, context, getRouteInfo, {\n    metaOnly = true,\n    serverUrl,\n    redirects,\n    skipGenerated,\n    sitemap,\n    notFound\n  }) {\n    // Returning `undefined` / `null from `getInitialURL` are valid values, so we need to track if it's been called.\n    let hasCachedInitialUrl = false;\n    let initialUrl;\n    const nativeLinkingKey = context.keys().find(key => key.match(/^\\.\\/\\+native-intent\\.[tj]sx?$/));\n    const nativeLinking = nativeLinkingKey ? context(nativeLinkingKey) : undefined;\n    const config = getNavigationConfig(routes, metaOnly, {\n      sitemap: skipGenerated ? false : sitemap,\n      notFound: skipGenerated ? false : notFound\n    });\n    return {\n      prefixes: [],\n      config,\n      // A custom getInitialURL is used on native to ensure the app always starts at\n      // the root path if it's launched from something other than a deep link.\n      // This helps keep the native functionality working like the web functionality.\n      // For example, if you had a root navigator where the first screen was `/settings` and the second was `/index`\n      // then `/index` would be used on web and `/settings` would be used on native.\n      getInitialURL() {\n        // Expo Router calls `getInitialURL` twice, which may confuse the user if they provide a custom `getInitialURL`.\n        // Therefor we memoize the result.\n        if (!hasCachedInitialUrl) {\n          if (expo_modules_core_1.Platform.OS === 'web') {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n          } else {\n            initialUrl = serverUrl ?? (0, linking_1.getInitialURL)();\n            if (typeof initialUrl === 'string') {\n              initialUrl = (0, getRoutesRedirects_1.applyRedirects)(initialUrl, redirects);\n              if (initialUrl && typeof nativeLinking?.redirectSystemPath === 'function') {\n                initialUrl = nativeLinking.redirectSystemPath({\n                  path: initialUrl,\n                  initial: true\n                });\n              }\n            } else if (initialUrl) {\n              initialUrl = initialUrl.then(url => {\n                url = (0, getRoutesRedirects_1.applyRedirects)(url, redirects);\n                if (url && typeof nativeLinking?.redirectSystemPath === 'function') {\n                  return nativeLinking.redirectSystemPath({\n                    path: url,\n                    initial: true\n                  });\n                }\n                return url;\n              });\n            }\n          }\n          hasCachedInitialUrl = true;\n        }\n        return initialUrl;\n      },\n      subscribe: (0, linking_1.subscribe)(nativeLinking, redirects),\n      getStateFromPath: (path, options) => {\n        return (0, linking_1.getStateFromPath)(path, options, getRouteInfo().segments);\n      },\n      getPathFromState(state, options) {\n        return (0, linking_1.getPathFromState)(state, {\n          ...config,\n          ...options,\n          screens: config.screens ?? options?.screens ?? {}\n        }) ?? '/';\n      },\n      // Add all functions to ensure the types never need to fallback.\n      // This is a convenience for usage in the package.\n      getActionFromState: native_1.getActionFromState\n    };\n  }\n  function isPathInRootConfig(config, path) {\n    return Object.values(config.screens).some(screenConfig => typeof screenConfig === 'string' ? screenConfig === path : screenConfig.path === path);\n  }\n  function generateLinkingPathInRoot(name, path, metaOnly) {\n    if (metaOnly) {\n      return {\n        [name]: path\n      };\n    }\n    return {\n      [name]: {\n        path\n      }\n    };\n  }\n});","lineCount":134,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getNavigationConfig"],[7,29,3,27],[7,32,3,30,"getNavigationConfig"],[7,51,3,49],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getLinkingConfig"],[8,26,4,24],[8,29,4,27,"getLinkingConfig"],[8,45,4,43],[9,2,5,0],[9,8,5,6,"native_1"],[9,16,5,14],[9,19,5,17,"require"],[9,26,5,24],[9,27,5,24,"_dependencyMap"],[9,41,5,24],[9,72,5,51],[9,73,5,52],[10,2,6,0],[10,8,6,6,"expo_modules_core_1"],[10,27,6,25],[10,30,6,28,"require"],[10,37,6,35],[10,38,6,35,"_dependencyMap"],[10,52,6,35],[10,76,6,55],[10,77,6,56],[11,2,7,0],[11,8,7,6,"constants_1"],[11,19,7,17],[11,22,7,20,"require"],[11,29,7,27],[11,30,7,27,"_dependencyMap"],[11,44,7,27],[11,62,7,41],[11,63,7,42],[12,2,8,0],[12,8,8,6,"getReactNavigationConfig_1"],[12,34,8,32],[12,37,8,35,"require"],[12,44,8,42],[12,45,8,42,"_dependencyMap"],[12,59,8,42],[12,92,8,71],[12,93,8,72],[13,2,9,0],[13,8,9,6,"getRoutesRedirects_1"],[13,28,9,26],[13,31,9,29,"require"],[13,38,9,36],[13,39,9,36,"_dependencyMap"],[13,53,9,36],[13,80,9,59],[13,81,9,60],[14,2,10,0],[14,8,10,6,"linking_1"],[14,17,10,15],[14,20,10,18,"require"],[14,27,10,25],[14,28,10,25,"_dependencyMap"],[14,42,10,25],[14,63,10,42],[14,64,10,43],[15,2,11,0],[15,11,11,9,"getNavigationConfig"],[15,30,11,28,"getNavigationConfig"],[15,31,11,29,"routes"],[15,37,11,35],[15,39,11,37,"metaOnly"],[15,47,11,45],[15,49,11,47],[16,4,11,49,"sitemap"],[16,11,11,56],[17,4,11,58,"notFound"],[18,2,11,67],[18,3,11,68],[18,5,11,70],[19,4,12,4],[19,10,12,10,"config"],[19,16,12,16],[19,19,12,19],[19,20,12,20],[19,21,12,21],[19,23,12,23,"getReactNavigationConfig_1"],[19,49,12,49],[19,50,12,50,"getReactNavigationConfig"],[19,74,12,74],[19,76,12,76,"routes"],[19,82,12,82],[19,84,12,84,"metaOnly"],[19,92,12,92],[19,93,12,93],[20,4,13,4],[20,10,13,10,"sitemapRoute"],[20,22,13,22],[20,25,13,25],[20,26,13,26],[20,32,13,32],[21,6,14,8],[21,12,14,14,"path"],[21,16,14,18],[21,19,14,21],[21,29,14,31],[22,6,15,8],[22,10,15,12,"sitemap"],[22,17,15,19],[22,22,15,24],[22,27,15,29],[22,31,15,33,"isPathInRootConfig"],[22,49,15,51],[22,50,15,52,"config"],[22,56,15,58],[22,58,15,60,"path"],[22,62,15,64],[22,63,15,65],[22,65,15,67],[23,8,16,12],[23,15,16,19],[23,16,16,20],[23,17,16,21],[24,6,17,8],[25,6,18,8],[25,13,18,15,"generateLinkingPathInRoot"],[25,38,18,40],[25,39,18,41,"constants_1"],[25,50,18,52],[25,51,18,53,"SITEMAP_ROUTE_NAME"],[25,69,18,71],[25,71,18,73,"path"],[25,75,18,77],[25,77,18,79,"metaOnly"],[25,85,18,87],[25,86,18,88],[26,4,19,4],[26,5,19,5],[26,7,19,7],[26,8,19,8],[27,4,20,4],[27,10,20,10,"notFoundRoute"],[27,23,20,23],[27,26,20,26],[27,27,20,27],[27,33,20,33],[28,6,21,8],[28,12,21,14,"path"],[28,16,21,18],[28,19,21,21],[28,31,21,33],[29,6,22,8],[29,10,22,12,"notFound"],[29,18,22,20],[29,23,22,25],[29,28,22,30],[29,32,22,34,"isPathInRootConfig"],[29,50,22,52],[29,51,22,53,"config"],[29,57,22,59],[29,59,22,61,"path"],[29,63,22,65],[29,64,22,66],[29,66,22,68],[30,8,23,12],[30,15,23,19],[30,16,23,20],[30,17,23,21],[31,6,24,8],[32,6,25,8],[32,13,25,15,"generateLinkingPathInRoot"],[32,38,25,40],[32,39,25,41,"constants_1"],[32,50,25,52],[32,51,25,53,"NOT_FOUND_ROUTE_NAME"],[32,71,25,73],[32,73,25,75,"path"],[32,77,25,79],[32,79,25,81,"metaOnly"],[32,87,25,89],[32,88,25,90],[33,4,26,4],[33,5,26,5],[33,7,26,7],[33,8,26,8],[34,4,27,4],[34,11,27,11],[35,6,28,8,"screens"],[35,13,28,15],[35,15,28,17],[36,8,29,12],[36,9,29,13,"constants_1"],[36,20,29,24],[36,21,29,25,"INTERNAL_SLOT_NAME"],[36,39,29,43],[36,42,29,46],[37,10,30,16,"path"],[37,14,30,20],[37,16,30,22],[37,18,30,24],[38,10,31,16],[38,13,31,19,"config"],[39,8,32,12],[39,9,32,13],[40,8,33,12],[40,11,33,15,"sitemapRoute"],[40,23,33,27],[41,8,34,12],[41,11,34,15,"notFoundRoute"],[42,6,35,8],[43,4,36,4],[43,5,36,5],[44,2,37,0],[45,2,38,0],[45,11,38,9,"getLinkingConfig"],[45,27,38,25,"getLinkingConfig"],[45,28,38,26,"routes"],[45,34,38,32],[45,36,38,34,"context"],[45,43,38,41],[45,45,38,43,"getRouteInfo"],[45,57,38,55],[45,59,38,57],[46,4,38,59,"metaOnly"],[46,12,38,67],[46,15,38,70],[46,19,38,74],[47,4,38,76,"serverUrl"],[47,13,38,85],[48,4,38,87,"redirects"],[48,13,38,96],[49,4,38,98,"skipGenerated"],[49,17,38,111],[50,4,38,113,"sitemap"],[50,11,38,120],[51,4,38,122,"notFound"],[52,2,38,132],[52,3,38,133],[52,5,38,135],[53,4,39,4],[54,4,40,4],[54,8,40,8,"hasCachedInitialUrl"],[54,27,40,27],[54,30,40,30],[54,35,40,35],[55,4,41,4],[55,8,41,8,"initialUrl"],[55,18,41,18],[56,4,42,4],[56,10,42,10,"nativeLinkingKey"],[56,26,42,26],[56,29,42,29,"context"],[56,36,42,36],[56,37,43,9,"keys"],[56,41,43,13],[56,42,43,14],[56,43,43,15],[56,44,44,9,"find"],[56,48,44,13],[56,49,44,15,"key"],[56,52,44,18],[56,56,44,23,"key"],[56,59,44,26],[56,60,44,27,"match"],[56,65,44,32],[56,66,44,33],[56,98,44,65],[56,99,44,66],[56,100,44,67],[57,4,45,4],[57,10,45,10,"nativeLinking"],[57,23,45,23],[57,26,45,26,"nativeLinkingKey"],[57,42,45,42],[57,45,46,10,"context"],[57,52,46,17],[57,53,46,18,"nativeLinkingKey"],[57,69,46,34],[57,70,46,35],[57,73,47,10,"undefined"],[57,82,47,19],[58,4,48,4],[58,10,48,10,"config"],[58,16,48,16],[58,19,48,19,"getNavigationConfig"],[58,38,48,38],[58,39,48,39,"routes"],[58,45,48,45],[58,47,48,47,"metaOnly"],[58,55,48,55],[58,57,48,57],[59,6,49,8,"sitemap"],[59,13,49,15],[59,15,49,17,"skipGenerated"],[59,28,49,30],[59,31,49,33],[59,36,49,38],[59,39,49,41,"sitemap"],[59,46,49,48],[60,6,50,8,"notFound"],[60,14,50,16],[60,16,50,18,"skipGenerated"],[60,29,50,31],[60,32,50,34],[60,37,50,39],[60,40,50,42,"notFound"],[61,4,51,4],[61,5,51,5],[61,6,51,6],[62,4,52,4],[62,11,52,11],[63,6,53,8,"prefixes"],[63,14,53,16],[63,16,53,18],[63,18,53,20],[64,6,54,8,"config"],[64,12,54,14],[65,6,55,8],[66,6,56,8],[67,6,57,8],[68,6,58,8],[69,6,59,8],[70,6,60,8,"getInitialURL"],[70,19,60,21,"getInitialURL"],[70,20,60,21],[70,22,60,24],[71,8,61,12],[72,8,62,12],[73,8,63,12],[73,12,63,16],[73,13,63,17,"hasCachedInitialUrl"],[73,32,63,36],[73,34,63,38],[74,10,64,16],[74,14,64,20,"expo_modules_core_1"],[74,33,64,39],[74,34,64,40,"Platform"],[74,42,64,48],[74,43,64,49,"OS"],[74,45,64,51],[74,50,64,56],[74,55,64,61],[74,57,64,63],[75,12,65,20,"initialUrl"],[75,22,65,30],[75,25,65,33,"serverUrl"],[75,34,65,42],[75,38,65,46],[75,39,65,47],[75,40,65,48],[75,42,65,50,"linking_1"],[75,51,65,59],[75,52,65,60,"getInitialURL"],[75,65,65,73],[75,67,65,75],[75,68,65,76],[76,10,66,16],[76,11,66,17],[76,17,67,21],[77,12,68,20,"initialUrl"],[77,22,68,30],[77,25,68,33,"serverUrl"],[77,34,68,42],[77,38,68,46],[77,39,68,47],[77,40,68,48],[77,42,68,50,"linking_1"],[77,51,68,59],[77,52,68,60,"getInitialURL"],[77,65,68,73],[77,67,68,75],[77,68,68,76],[78,12,69,20],[78,16,69,24],[78,23,69,31,"initialUrl"],[78,33,69,41],[78,38,69,46],[78,46,69,54],[78,48,69,56],[79,14,70,24,"initialUrl"],[79,24,70,34],[79,27,70,37],[79,28,70,38],[79,29,70,39],[79,31,70,41,"getRoutesRedirects_1"],[79,51,70,61],[79,52,70,62,"applyRedirects"],[79,66,70,76],[79,68,70,78,"initialUrl"],[79,78,70,88],[79,80,70,90,"redirects"],[79,89,70,99],[79,90,70,100],[80,14,71,24],[80,18,71,28,"initialUrl"],[80,28,71,38],[80,32,71,42],[80,39,71,49,"nativeLinking"],[80,52,71,62],[80,54,71,64,"redirectSystemPath"],[80,72,71,82],[80,77,71,87],[80,87,71,97],[80,89,71,99],[81,16,72,28,"initialUrl"],[81,26,72,38],[81,29,72,41,"nativeLinking"],[81,42,72,54],[81,43,72,55,"redirectSystemPath"],[81,61,72,73],[81,62,72,74],[82,18,72,76,"path"],[82,22,72,80],[82,24,72,82,"initialUrl"],[82,34,72,92],[83,18,72,94,"initial"],[83,25,72,101],[83,27,72,103],[84,16,72,108],[84,17,72,109],[84,18,72,110],[85,14,73,24],[86,12,74,20],[86,13,74,21],[86,19,75,25],[86,23,75,29,"initialUrl"],[86,33,75,39],[86,35,75,41],[87,14,76,24,"initialUrl"],[87,24,76,34],[87,27,76,37,"initialUrl"],[87,37,76,47],[87,38,76,48,"then"],[87,42,76,52],[87,43,76,54,"url"],[87,46,76,57],[87,50,76,62],[88,16,77,28,"url"],[88,19,77,31],[88,22,77,34],[88,23,77,35],[88,24,77,36],[88,26,77,38,"getRoutesRedirects_1"],[88,46,77,58],[88,47,77,59,"applyRedirects"],[88,61,77,73],[88,63,77,75,"url"],[88,66,77,78],[88,68,77,80,"redirects"],[88,77,77,89],[88,78,77,90],[89,16,78,28],[89,20,78,32,"url"],[89,23,78,35],[89,27,78,39],[89,34,78,46,"nativeLinking"],[89,47,78,59],[89,49,78,61,"redirectSystemPath"],[89,67,78,79],[89,72,78,84],[89,82,78,94],[89,84,78,96],[90,18,79,32],[90,25,79,39,"nativeLinking"],[90,38,79,52],[90,39,79,53,"redirectSystemPath"],[90,57,79,71],[90,58,79,72],[91,20,79,74,"path"],[91,24,79,78],[91,26,79,80,"url"],[91,29,79,83],[92,20,79,85,"initial"],[92,27,79,92],[92,29,79,94],[93,18,79,99],[93,19,79,100],[93,20,79,101],[94,16,80,28],[95,16,81,28],[95,23,81,35,"url"],[95,26,81,38],[96,14,82,24],[96,15,82,25],[96,16,82,26],[97,12,83,20],[98,10,84,16],[99,10,85,16,"hasCachedInitialUrl"],[99,29,85,35],[99,32,85,38],[99,36,85,42],[100,8,86,12],[101,8,87,12],[101,15,87,19,"initialUrl"],[101,25,87,29],[102,6,88,8],[102,7,88,9],[103,6,89,8,"subscribe"],[103,15,89,17],[103,17,89,19],[103,18,89,20],[103,19,89,21],[103,21,89,23,"linking_1"],[103,30,89,32],[103,31,89,33,"subscribe"],[103,40,89,42],[103,42,89,44,"nativeLinking"],[103,55,89,57],[103,57,89,59,"redirects"],[103,66,89,68],[103,67,89,69],[104,6,90,8,"getStateFromPath"],[104,22,90,24],[104,24,90,26,"getStateFromPath"],[104,25,90,27,"path"],[104,29,90,31],[104,31,90,33,"options"],[104,38,90,40],[104,43,90,45],[105,8,91,12],[105,15,91,19],[105,16,91,20],[105,17,91,21],[105,19,91,23,"linking_1"],[105,28,91,32],[105,29,91,33,"getStateFromPath"],[105,45,91,49],[105,47,91,51,"path"],[105,51,91,55],[105,53,91,57,"options"],[105,60,91,64],[105,62,91,66,"getRouteInfo"],[105,74,91,78],[105,75,91,79],[105,76,91,80],[105,77,91,81,"segments"],[105,85,91,89],[105,86,91,90],[106,6,92,8],[106,7,92,9],[107,6,93,8,"getPathFromState"],[107,22,93,24,"getPathFromState"],[107,23,93,25,"state"],[107,28,93,30],[107,30,93,32,"options"],[107,37,93,39],[107,39,93,41],[108,8,94,12],[108,15,94,20],[108,16,94,21],[108,17,94,22],[108,19,94,24,"linking_1"],[108,28,94,33],[108,29,94,34,"getPathFromState"],[108,45,94,50],[108,47,94,52,"state"],[108,52,94,57],[108,54,94,59],[109,10,95,16],[109,13,95,19,"config"],[109,19,95,25],[110,10,96,16],[110,13,96,19,"options"],[110,20,96,26],[111,10,97,16,"screens"],[111,17,97,23],[111,19,97,25,"config"],[111,25,97,31],[111,26,97,32,"screens"],[111,33,97,39],[111,37,97,43,"options"],[111,44,97,50],[111,46,97,52,"screens"],[111,53,97,59],[111,57,97,63],[111,58,97,64],[112,8,98,12],[112,9,98,13],[112,10,98,14],[112,14,98,18],[112,17,98,21],[113,6,99,8],[113,7,99,9],[114,6,100,8],[115,6,101,8],[116,6,102,8,"getActionFromState"],[116,24,102,26],[116,26,102,28,"native_1"],[116,34,102,36],[116,35,102,37,"getActionFromState"],[117,4,103,4],[117,5,103,5],[118,2,104,0],[119,2,105,0],[119,11,105,9,"isPathInRootConfig"],[119,29,105,27,"isPathInRootConfig"],[119,30,105,28,"config"],[119,36,105,34],[119,38,105,36,"path"],[119,42,105,40],[119,44,105,42],[120,4,106,4],[120,11,106,11,"Object"],[120,17,106,17],[120,18,106,18,"values"],[120,24,106,24],[120,25,106,25,"config"],[120,31,106,31],[120,32,106,32,"screens"],[120,39,106,39],[120,40,106,40],[120,41,106,41,"some"],[120,45,106,45],[120,46,106,47,"screenConfig"],[120,58,106,59],[120,62,106,64],[120,69,106,71,"screenConfig"],[120,81,106,83],[120,86,106,88],[120,94,106,96],[120,97,106,99,"screenConfig"],[120,109,106,111],[120,114,106,116,"path"],[120,118,106,120],[120,121,106,123,"screenConfig"],[120,133,106,135],[120,134,106,136,"path"],[120,138,106,140],[120,143,106,145,"path"],[120,147,106,149],[120,148,106,150],[121,2,107,0],[122,2,108,0],[122,11,108,9,"generateLinkingPathInRoot"],[122,36,108,34,"generateLinkingPathInRoot"],[122,37,108,35,"name"],[122,41,108,39],[122,43,108,41,"path"],[122,47,108,45],[122,49,108,47,"metaOnly"],[122,57,108,55],[122,59,108,57],[123,4,109,4],[123,8,109,8,"metaOnly"],[123,16,109,16],[123,18,109,18],[124,6,110,8],[124,13,110,15],[125,8,110,17],[125,9,110,18,"name"],[125,13,110,22],[125,16,110,25,"path"],[126,6,110,30],[126,7,110,31],[127,4,111,4],[128,4,112,4],[128,11,112,11],[129,6,113,8],[129,7,113,9,"name"],[129,11,113,13],[129,14,113,16],[130,8,113,18,"path"],[131,6,113,23],[132,4,114,4],[132,5,114,5],[133,2,115,0],[134,0,115,1],[134,3]],"functionMap":{"names":["<global>","getNavigationConfig","<anonymous>","getLinkingConfig","context.keys.find$argument_0","getInitialURL","initialUrl.then$argument_0","getStateFromPath","getPathFromState","isPathInRootConfig","Object.values.some$argument_0","generateLinkingPathInRoot"],"mappings":"AAA;ACU;0BCE;KDM;2BCC;KDM;CDW;AGC;cCM,oDD;QEgB;qDCgB;yBDM;SFM;0BIE;SJE;QKC;SLM;CHK;ASC;8CCC,uGD;CTC;AWC;CXO"},"hasCjsExports":true},"type":"js/module"}]}