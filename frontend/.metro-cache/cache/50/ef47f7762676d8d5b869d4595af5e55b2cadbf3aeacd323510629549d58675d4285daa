{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":29,"index":254},"end":{"line":13,"column":84,"index":309}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"./AnimatedInterpolation","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":52,"index":424},"end":{"line":16,"column":86,"index":458}}],"key":"N0ad7mzKnDluoAty58gWb+5bieM=","exportNames":["*"],"imports":1}},{"name":"./AnimatedWithChildren","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":51,"index":512},"end":{"line":17,"column":84,"index":545}}],"key":"2qJZQWLljPtVE81NAqxY2Zul78I=","exportNames":["*"],"imports":1}},{"name":"../../../../exports/InteractionManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":49,"index":597},"end":{"line":18,"column":98,"index":646}}],"key":"SFEDGjk1VHMF33IQqihEVlV05X0=","exportNames":["*"],"imports":1}},{"name":"../NativeAnimatedHelper","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":51,"index":700},"end":{"line":19,"column":85,"index":734}}],"key":"TIc/8c1x92db2QGHqQA7Nto+igI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.default = void 0;\n  var _AnimatedInterpolation = _interopRequireDefault(require(_dependencyMap[1], \"./AnimatedInterpolation\"));\n  var _AnimatedWithChildren = _interopRequireDefault(require(_dependencyMap[2], \"./AnimatedWithChildren\"));\n  var _InteractionManager = _interopRequireDefault(require(_dependencyMap[3], \"../../../../exports/InteractionManager\"));\n  var _NativeAnimatedHelper = _interopRequireDefault(require(_dependencyMap[4], \"../NativeAnimatedHelper\"));\n  var NativeAnimatedAPI = _NativeAnimatedHelper.default.API;\n\n  /**\n   * Animated works by building a directed acyclic graph of dependencies\n   * transparently when you render your Animated components.\n   *\n   *               new Animated.Value(0)\n   *     .interpolate()        .interpolate()    new Animated.Value(1)\n   *         opacity               translateY      scale\n   *          style                         transform\n   *         View#234                         style\n   *                                         View#123\n   *\n   * A) Top Down phase\n   * When an Animated.Value is updated, we recursively go down through this\n   * graph in order to find leaf nodes: the views that we flag as needing\n   * an update.\n   *\n   * B) Bottom Up phase\n   * When a view is flagged as needing an update, we recursively go back up\n   * in order to build the new value that it needs. The reason why we need\n   * this two-phases process is to deal with composite props such as\n   * transform which can receive values from multiple parents.\n   */\n  function _flush(rootNode) {\n    var animatedStyles = new Set();\n    function findAnimatedStyles(node) {\n      /* $FlowFixMe[prop-missing] (>=0.68.0 site=react_native_fb) This comment\n       * suppresses an error found when Flow v0.68 was deployed. To see the error\n       * delete this comment and run Flow. */\n      if (typeof node.update === 'function') {\n        animatedStyles.add(node);\n      } else {\n        node.__getChildren().forEach(findAnimatedStyles);\n      }\n    }\n    findAnimatedStyles(rootNode);\n    // $FlowFixMe[prop-missing]\n    animatedStyles.forEach(animatedStyle => animatedStyle.update());\n  }\n\n  /**\n   * Some operations are executed only on batch end, which is _mostly_ scheduled when\n   * Animated component props change. For some of the changes which require immediate execution\n   * (e.g. setValue), we create a separate batch in case none is scheduled.\n   */\n  function _executeAsAnimatedBatch(id, operation) {\n    NativeAnimatedAPI.setWaitingForIdentifier(id);\n    operation();\n    NativeAnimatedAPI.unsetWaitingForIdentifier(id);\n  }\n\n  /**\n   * Standard value for driving animations.  One `Animated.Value` can drive\n   * multiple properties in a synchronized fashion, but can only be driven by one\n   * mechanism at a time.  Using a new mechanism (e.g. starting a new animation,\n   * or calling `setValue`) will stop any previous ones.\n   *\n   * See https://reactnative.dev/docs/animatedvalue\n   */\n  class AnimatedValue extends _AnimatedWithChildren.default {\n    constructor(value, config) {\n      super();\n      if (typeof value !== 'number') {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n      this._startingValue = this._value = value;\n      this._offset = 0;\n      this._animation = null;\n      if (config && config.useNativeDriver) {\n        this.__makeNative();\n      }\n    }\n    __detach() {\n      if (this.__isNative) {\n        NativeAnimatedAPI.getValue(this.__getNativeTag(), value => {\n          this._value = value - this._offset;\n        });\n      }\n      this.stopAnimation();\n      super.__detach();\n    }\n    __getValue() {\n      return this._value + this._offset;\n    }\n\n    /**\n     * Directly set the value.  This will stop any animations running on the value\n     * and update all the bound properties.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#setvalue\n     */\n    setValue(value) {\n      if (this._animation) {\n        this._animation.stop();\n        this._animation = null;\n      }\n      this._updateValue(value, !this.__isNative /* don't perform a flush for natively driven values */);\n      if (this.__isNative) {\n        _executeAsAnimatedBatch(this.__getNativeTag().toString(), () => NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), value));\n      }\n    }\n\n    /**\n     * Sets an offset that is applied on top of whatever value is set, whether via\n     * `setValue`, an animation, or `Animated.event`.  Useful for compensating\n     * things like the start of a pan gesture.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#setoffset\n     */\n    setOffset(offset) {\n      this._offset = offset;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeOffset(this.__getNativeTag(), offset);\n      }\n    }\n\n    /**\n     * Merges the offset value into the base value and resets the offset to zero.\n     * The final output of the value is unchanged.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#flattenoffset\n     */\n    flattenOffset() {\n      this._value += this._offset;\n      this._offset = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.flattenAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n\n    /**\n     * Sets the offset value to the base value, and resets the base value to zero.\n     * The final output of the value is unchanged.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#extractoffset\n     */\n    extractOffset() {\n      this._offset += this._value;\n      this._value = 0;\n      if (this.__isNative) {\n        NativeAnimatedAPI.extractAnimatedNodeOffset(this.__getNativeTag());\n      }\n    }\n\n    /**\n     * Stops any running animation or tracking. `callback` is invoked with the\n     * final value after stopping the animation, which is useful for updating\n     * state to match the animation position with layout.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#stopanimation\n     */\n    stopAnimation(callback) {\n      this.stopTracking();\n      this._animation && this._animation.stop();\n      this._animation = null;\n      if (callback) {\n        if (this.__isNative) {\n          NativeAnimatedAPI.getValue(this.__getNativeTag(), callback);\n        } else {\n          callback(this.__getValue());\n        }\n      }\n    }\n\n    /**\n     * Stops any animation and resets the value to its original.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#resetanimation\n     */\n    resetAnimation(callback) {\n      this.stopAnimation(callback);\n      this._value = this._startingValue;\n      if (this.__isNative) {\n        NativeAnimatedAPI.setAnimatedNodeValue(this.__getNativeTag(), this._startingValue);\n      }\n    }\n    __onAnimatedValueUpdateReceived(value) {\n      this._updateValue(value, false /*flush*/);\n    }\n\n    /**\n     * Interpolates the value before updating the property, e.g. mapping 0-1 to\n     * 0-10.\n     */\n    interpolate(config) {\n      return new _AnimatedInterpolation.default(this, config);\n    }\n\n    /**\n     * Typically only used internally, but could be used by a custom Animation\n     * class.\n     *\n     * See https://reactnative.dev/docs/animatedvalue#animate\n     */\n    animate(animation, callback) {\n      var handle = null;\n      if (animation.__isInteraction) {\n        handle = _InteractionManager.default.createInteractionHandle();\n      }\n      var previousAnimation = this._animation;\n      this._animation && this._animation.stop();\n      this._animation = animation;\n      animation.start(this._value, value => {\n        // Natively driven animations will never call into that callback\n        this._updateValue(value, true /* flush */);\n      }, result => {\n        this._animation = null;\n        if (handle !== null) {\n          _InteractionManager.default.clearInteractionHandle(handle);\n        }\n        callback && callback(result);\n      }, previousAnimation, this);\n    }\n\n    /**\n     * Typically only used internally.\n     */\n    stopTracking() {\n      this._tracking && this._tracking.__detach();\n      this._tracking = null;\n    }\n\n    /**\n     * Typically only used internally.\n     */\n    track(tracking) {\n      this.stopTracking();\n      this._tracking = tracking;\n      // Make sure that the tracking animation starts executing\n      this._tracking && this._tracking.update();\n    }\n    _updateValue(value, flush) {\n      if (value === undefined) {\n        throw new Error('AnimatedValue: Attempting to set value to undefined');\n      }\n      this._value = value;\n      if (flush) {\n        _flush(this);\n      }\n      super.__callListeners(this.__getValue());\n    }\n    __getNativeConfig() {\n      return {\n        type: 'value',\n        value: this._value,\n        offset: this._offset\n      };\n    }\n  }\n  var _default = exports.default = AnimatedValue;\n  module.exports = exports.default;\n});","lineCount":273,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[14,6,13,4,"_interopRequireDefault"],[14,28,13,26],[14,31,13,29,"require"],[14,38,13,36],[14,39,13,36,"_dependencyMap"],[14,53,13,36],[14,104,13,83],[14,105,13,84],[14,106,13,85,"default"],[14,113,13,92],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"__esModule"],[15,20,14,18],[15,23,14,21],[15,27,14,25],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"default"],[16,17,15,15],[16,20,15,18],[16,25,15,23],[16,26,15,24],[17,2,16,0],[17,6,16,4,"_AnimatedInterpolation"],[17,28,16,26],[17,31,16,29,"_interopRequireDefault"],[17,53,16,51],[17,54,16,52,"require"],[17,61,16,59],[17,62,16,59,"_dependencyMap"],[17,76,16,59],[17,106,16,85],[17,107,16,86],[17,108,16,87],[18,2,17,0],[18,6,17,4,"_AnimatedWithChildren"],[18,27,17,25],[18,30,17,28,"_interopRequireDefault"],[18,52,17,50],[18,53,17,51,"require"],[18,60,17,58],[18,61,17,58,"_dependencyMap"],[18,75,17,58],[18,104,17,83],[18,105,17,84],[18,106,17,85],[19,2,18,0],[19,6,18,4,"_InteractionManager"],[19,25,18,23],[19,28,18,26,"_interopRequireDefault"],[19,50,18,48],[19,51,18,49,"require"],[19,58,18,56],[19,59,18,56,"_dependencyMap"],[19,73,18,56],[19,118,18,97],[19,119,18,98],[19,120,18,99],[20,2,19,0],[20,6,19,4,"_NativeAnimatedHelper"],[20,27,19,25],[20,30,19,28,"_interopRequireDefault"],[20,52,19,50],[20,53,19,51,"require"],[20,60,19,58],[20,61,19,58,"_dependencyMap"],[20,75,19,58],[20,105,19,84],[20,106,19,85],[20,107,19,86],[21,2,20,0],[21,6,20,4,"NativeAnimatedAPI"],[21,23,20,21],[21,26,20,24,"_NativeAnimatedHelper"],[21,47,20,45],[21,48,20,46,"default"],[21,55,20,53],[21,56,20,54,"API"],[21,59,20,57],[23,2,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,2,44,0],[45,11,44,9,"_flush"],[45,17,44,15,"_flush"],[45,18,44,16,"rootNode"],[45,26,44,24],[45,28,44,26],[46,4,45,2],[46,8,45,6,"animatedStyles"],[46,22,45,20],[46,25,45,23],[46,29,45,27,"Set"],[46,32,45,30],[46,33,45,31],[46,34,45,32],[47,4,46,2],[47,13,46,11,"findAnimatedStyles"],[47,31,46,29,"findAnimatedStyles"],[47,32,46,30,"node"],[47,36,46,34],[47,38,46,36],[48,6,47,4],[49,0,48,0],[50,0,49,0],[51,6,50,4],[51,10,50,8],[51,17,50,15,"node"],[51,21,50,19],[51,22,50,20,"update"],[51,28,50,26],[51,33,50,31],[51,43,50,41],[51,45,50,43],[52,8,51,6,"animatedStyles"],[52,22,51,20],[52,23,51,21,"add"],[52,26,51,24],[52,27,51,25,"node"],[52,31,51,29],[52,32,51,30],[53,6,52,4],[53,7,52,5],[53,13,52,11],[54,8,53,6,"node"],[54,12,53,10],[54,13,53,11,"__getChildren"],[54,26,53,24],[54,27,53,25],[54,28,53,26],[54,29,53,27,"forEach"],[54,36,53,34],[54,37,53,35,"findAnimatedStyles"],[54,55,53,53],[54,56,53,54],[55,6,54,4],[56,4,55,2],[57,4,56,2,"findAnimatedStyles"],[57,22,56,20],[57,23,56,21,"rootNode"],[57,31,56,29],[57,32,56,30],[58,4,57,2],[59,4,58,2,"animatedStyles"],[59,18,58,16],[59,19,58,17,"forEach"],[59,26,58,24],[59,27,58,25,"animatedStyle"],[59,40,58,38],[59,44,58,42,"animatedStyle"],[59,57,58,55],[59,58,58,56,"update"],[59,64,58,62],[59,65,58,63],[59,66,58,64],[59,67,58,65],[60,2,59,0],[62,2,61,0],[63,0,62,0],[64,0,63,0],[65,0,64,0],[66,0,65,0],[67,2,66,0],[67,11,66,9,"_executeAsAnimatedBatch"],[67,34,66,32,"_executeAsAnimatedBatch"],[67,35,66,33,"id"],[67,37,66,35],[67,39,66,37,"operation"],[67,48,66,46],[67,50,66,48],[68,4,67,2,"NativeAnimatedAPI"],[68,21,67,19],[68,22,67,20,"setWaitingForIdentifier"],[68,45,67,43],[68,46,67,44,"id"],[68,48,67,46],[68,49,67,47],[69,4,68,2,"operation"],[69,13,68,11],[69,14,68,12],[69,15,68,13],[70,4,69,2,"NativeAnimatedAPI"],[70,21,69,19],[70,22,69,20,"unsetWaitingForIdentifier"],[70,47,69,45],[70,48,69,46,"id"],[70,50,69,48],[70,51,69,49],[71,2,70,0],[73,2,72,0],[74,0,73,0],[75,0,74,0],[76,0,75,0],[77,0,76,0],[78,0,77,0],[79,0,78,0],[80,0,79,0],[81,2,80,0],[81,8,80,6,"AnimatedValue"],[81,21,80,19],[81,30,80,28,"_AnimatedWithChildren"],[81,51,80,49],[81,52,80,50,"default"],[81,59,80,57],[81,60,80,58],[82,4,81,2,"constructor"],[82,15,81,13,"constructor"],[82,16,81,14,"value"],[82,21,81,19],[82,23,81,21,"config"],[82,29,81,27],[82,31,81,29],[83,6,82,4],[83,11,82,9],[83,12,82,10],[83,13,82,11],[84,6,83,4],[84,10,83,8],[84,17,83,15,"value"],[84,22,83,20],[84,27,83,25],[84,35,83,33],[84,37,83,35],[85,8,84,6],[85,14,84,12],[85,18,84,16,"Error"],[85,23,84,21],[85,24,84,22],[85,77,84,75],[85,78,84,76],[86,6,85,4],[87,6,86,4],[87,10,86,8],[87,11,86,9,"_startingValue"],[87,25,86,23],[87,28,86,26],[87,32,86,30],[87,33,86,31,"_value"],[87,39,86,37],[87,42,86,40,"value"],[87,47,86,45],[88,6,87,4],[88,10,87,8],[88,11,87,9,"_offset"],[88,18,87,16],[88,21,87,19],[88,22,87,20],[89,6,88,4],[89,10,88,8],[89,11,88,9,"_animation"],[89,21,88,19],[89,24,88,22],[89,28,88,26],[90,6,89,4],[90,10,89,8,"config"],[90,16,89,14],[90,20,89,18,"config"],[90,26,89,24],[90,27,89,25,"useNativeDriver"],[90,42,89,40],[90,44,89,42],[91,8,90,6],[91,12,90,10],[91,13,90,11,"__makeNative"],[91,25,90,23],[91,26,90,24],[91,27,90,25],[92,6,91,4],[93,4,92,2],[94,4,93,2,"__detach"],[94,12,93,10,"__detach"],[94,13,93,10],[94,15,93,13],[95,6,94,4],[95,10,94,8],[95,14,94,12],[95,15,94,13,"__isNative"],[95,25,94,23],[95,27,94,25],[96,8,95,6,"NativeAnimatedAPI"],[96,25,95,23],[96,26,95,24,"getValue"],[96,34,95,32],[96,35,95,33],[96,39,95,37],[96,40,95,38,"__getNativeTag"],[96,54,95,52],[96,55,95,53],[96,56,95,54],[96,58,95,56,"value"],[96,63,95,61],[96,67,95,65],[97,10,96,8],[97,14,96,12],[97,15,96,13,"_value"],[97,21,96,19],[97,24,96,22,"value"],[97,29,96,27],[97,32,96,30],[97,36,96,34],[97,37,96,35,"_offset"],[97,44,96,42],[98,8,97,6],[98,9,97,7],[98,10,97,8],[99,6,98,4],[100,6,99,4],[100,10,99,8],[100,11,99,9,"stopAnimation"],[100,24,99,22],[100,25,99,23],[100,26,99,24],[101,6,100,4],[101,11,100,9],[101,12,100,10,"__detach"],[101,20,100,18],[101,21,100,19],[101,22,100,20],[102,4,101,2],[103,4,102,2,"__getValue"],[103,14,102,12,"__getValue"],[103,15,102,12],[103,17,102,15],[104,6,103,4],[104,13,103,11],[104,17,103,15],[104,18,103,16,"_value"],[104,24,103,22],[104,27,103,25],[104,31,103,29],[104,32,103,30,"_offset"],[104,39,103,37],[105,4,104,2],[107,4,106,2],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,0,111,0],[113,4,112,2,"setValue"],[113,12,112,10,"setValue"],[113,13,112,11,"value"],[113,18,112,16],[113,20,112,18],[114,6,113,4],[114,10,113,8],[114,14,113,12],[114,15,113,13,"_animation"],[114,25,113,23],[114,27,113,25],[115,8,114,6],[115,12,114,10],[115,13,114,11,"_animation"],[115,23,114,21],[115,24,114,22,"stop"],[115,28,114,26],[115,29,114,27],[115,30,114,28],[116,8,115,6],[116,12,115,10],[116,13,115,11,"_animation"],[116,23,115,21],[116,26,115,24],[116,30,115,28],[117,6,116,4],[118,6,117,4],[118,10,117,8],[118,11,117,9,"_updateValue"],[118,23,117,21],[118,24,117,22,"value"],[118,29,117,27],[118,31,117,29],[118,32,117,30],[118,36,117,34],[118,37,117,35,"__isNative"],[118,47,117,45],[118,48,117,46],[118,102,117,100],[118,103,117,101],[119,6,118,4],[119,10,118,8],[119,14,118,12],[119,15,118,13,"__isNative"],[119,25,118,23],[119,27,118,25],[120,8,119,6,"_executeAsAnimatedBatch"],[120,31,119,29],[120,32,119,30],[120,36,119,34],[120,37,119,35,"__getNativeTag"],[120,51,119,49],[120,52,119,50],[120,53,119,51],[120,54,119,52,"toString"],[120,62,119,60],[120,63,119,61],[120,64,119,62],[120,66,119,64],[120,72,119,70,"NativeAnimatedAPI"],[120,89,119,87],[120,90,119,88,"setAnimatedNodeValue"],[120,110,119,108],[120,111,119,109],[120,115,119,113],[120,116,119,114,"__getNativeTag"],[120,130,119,128],[120,131,119,129],[120,132,119,130],[120,134,119,132,"value"],[120,139,119,137],[120,140,119,138],[120,141,119,139],[121,6,120,4],[122,4,121,2],[124,4,123,2],[125,0,124,0],[126,0,125,0],[127,0,126,0],[128,0,127,0],[129,0,128,0],[130,0,129,0],[131,4,130,2,"setOffset"],[131,13,130,11,"setOffset"],[131,14,130,12,"offset"],[131,20,130,18],[131,22,130,20],[132,6,131,4],[132,10,131,8],[132,11,131,9,"_offset"],[132,18,131,16],[132,21,131,19,"offset"],[132,27,131,25],[133,6,132,4],[133,10,132,8],[133,14,132,12],[133,15,132,13,"__isNative"],[133,25,132,23],[133,27,132,25],[134,8,133,6,"NativeAnimatedAPI"],[134,25,133,23],[134,26,133,24,"setAnimatedNodeOffset"],[134,47,133,45],[134,48,133,46],[134,52,133,50],[134,53,133,51,"__getNativeTag"],[134,67,133,65],[134,68,133,66],[134,69,133,67],[134,71,133,69,"offset"],[134,77,133,75],[134,78,133,76],[135,6,134,4],[136,4,135,2],[138,4,137,2],[139,0,138,0],[140,0,139,0],[141,0,140,0],[142,0,141,0],[143,0,142,0],[144,4,143,2,"flattenOffset"],[144,17,143,15,"flattenOffset"],[144,18,143,15],[144,20,143,18],[145,6,144,4],[145,10,144,8],[145,11,144,9,"_value"],[145,17,144,15],[145,21,144,19],[145,25,144,23],[145,26,144,24,"_offset"],[145,33,144,31],[146,6,145,4],[146,10,145,8],[146,11,145,9,"_offset"],[146,18,145,16],[146,21,145,19],[146,22,145,20],[147,6,146,4],[147,10,146,8],[147,14,146,12],[147,15,146,13,"__isNative"],[147,25,146,23],[147,27,146,25],[148,8,147,6,"NativeAnimatedAPI"],[148,25,147,23],[148,26,147,24,"flattenAnimatedNodeOffset"],[148,51,147,49],[148,52,147,50],[148,56,147,54],[148,57,147,55,"__getNativeTag"],[148,71,147,69],[148,72,147,70],[148,73,147,71],[148,74,147,72],[149,6,148,4],[150,4,149,2],[152,4,151,2],[153,0,152,0],[154,0,153,0],[155,0,154,0],[156,0,155,0],[157,0,156,0],[158,4,157,2,"extractOffset"],[158,17,157,15,"extractOffset"],[158,18,157,15],[158,20,157,18],[159,6,158,4],[159,10,158,8],[159,11,158,9,"_offset"],[159,18,158,16],[159,22,158,20],[159,26,158,24],[159,27,158,25,"_value"],[159,33,158,31],[160,6,159,4],[160,10,159,8],[160,11,159,9,"_value"],[160,17,159,15],[160,20,159,18],[160,21,159,19],[161,6,160,4],[161,10,160,8],[161,14,160,12],[161,15,160,13,"__isNative"],[161,25,160,23],[161,27,160,25],[162,8,161,6,"NativeAnimatedAPI"],[162,25,161,23],[162,26,161,24,"extractAnimatedNodeOffset"],[162,51,161,49],[162,52,161,50],[162,56,161,54],[162,57,161,55,"__getNativeTag"],[162,71,161,69],[162,72,161,70],[162,73,161,71],[162,74,161,72],[163,6,162,4],[164,4,163,2],[166,4,165,2],[167,0,166,0],[168,0,167,0],[169,0,168,0],[170,0,169,0],[171,0,170,0],[172,0,171,0],[173,4,172,2,"stopAnimation"],[173,17,172,15,"stopAnimation"],[173,18,172,16,"callback"],[173,26,172,24],[173,28,172,26],[174,6,173,4],[174,10,173,8],[174,11,173,9,"stopTracking"],[174,23,173,21],[174,24,173,22],[174,25,173,23],[175,6,174,4],[175,10,174,8],[175,11,174,9,"_animation"],[175,21,174,19],[175,25,174,23],[175,29,174,27],[175,30,174,28,"_animation"],[175,40,174,38],[175,41,174,39,"stop"],[175,45,174,43],[175,46,174,44],[175,47,174,45],[176,6,175,4],[176,10,175,8],[176,11,175,9,"_animation"],[176,21,175,19],[176,24,175,22],[176,28,175,26],[177,6,176,4],[177,10,176,8,"callback"],[177,18,176,16],[177,20,176,18],[178,8,177,6],[178,12,177,10],[178,16,177,14],[178,17,177,15,"__isNative"],[178,27,177,25],[178,29,177,27],[179,10,178,8,"NativeAnimatedAPI"],[179,27,178,25],[179,28,178,26,"getValue"],[179,36,178,34],[179,37,178,35],[179,41,178,39],[179,42,178,40,"__getNativeTag"],[179,56,178,54],[179,57,178,55],[179,58,178,56],[179,60,178,58,"callback"],[179,68,178,66],[179,69,178,67],[180,8,179,6],[180,9,179,7],[180,15,179,13],[181,10,180,8,"callback"],[181,18,180,16],[181,19,180,17],[181,23,180,21],[181,24,180,22,"__getValue"],[181,34,180,32],[181,35,180,33],[181,36,180,34],[181,37,180,35],[182,8,181,6],[183,6,182,4],[184,4,183,2],[186,4,185,2],[187,0,186,0],[188,0,187,0],[189,0,188,0],[190,0,189,0],[191,4,190,2,"resetAnimation"],[191,18,190,16,"resetAnimation"],[191,19,190,17,"callback"],[191,27,190,25],[191,29,190,27],[192,6,191,4],[192,10,191,8],[192,11,191,9,"stopAnimation"],[192,24,191,22],[192,25,191,23,"callback"],[192,33,191,31],[192,34,191,32],[193,6,192,4],[193,10,192,8],[193,11,192,9,"_value"],[193,17,192,15],[193,20,192,18],[193,24,192,22],[193,25,192,23,"_startingValue"],[193,39,192,37],[194,6,193,4],[194,10,193,8],[194,14,193,12],[194,15,193,13,"__isNative"],[194,25,193,23],[194,27,193,25],[195,8,194,6,"NativeAnimatedAPI"],[195,25,194,23],[195,26,194,24,"setAnimatedNodeValue"],[195,46,194,44],[195,47,194,45],[195,51,194,49],[195,52,194,50,"__getNativeTag"],[195,66,194,64],[195,67,194,65],[195,68,194,66],[195,70,194,68],[195,74,194,72],[195,75,194,73,"_startingValue"],[195,89,194,87],[195,90,194,88],[196,6,195,4],[197,4,196,2],[198,4,197,2,"__onAnimatedValueUpdateReceived"],[198,35,197,33,"__onAnimatedValueUpdateReceived"],[198,36,197,34,"value"],[198,41,197,39],[198,43,197,41],[199,6,198,4],[199,10,198,8],[199,11,198,9,"_updateValue"],[199,23,198,21],[199,24,198,22,"value"],[199,29,198,27],[199,31,198,29],[199,36,198,34],[199,37,198,35],[199,46,198,44],[199,47,198,45],[200,4,199,2],[202,4,201,2],[203,0,202,0],[204,0,203,0],[205,0,204,0],[206,4,205,2,"interpolate"],[206,15,205,13,"interpolate"],[206,16,205,14,"config"],[206,22,205,20],[206,24,205,22],[207,6,206,4],[207,13,206,11],[207,17,206,15,"_AnimatedInterpolation"],[207,39,206,37],[207,40,206,38,"default"],[207,47,206,45],[207,48,206,46],[207,52,206,50],[207,54,206,52,"config"],[207,60,206,58],[207,61,206,59],[208,4,207,2],[210,4,209,2],[211,0,210,0],[212,0,211,0],[213,0,212,0],[214,0,213,0],[215,0,214,0],[216,4,215,2,"animate"],[216,11,215,9,"animate"],[216,12,215,10,"animation"],[216,21,215,19],[216,23,215,21,"callback"],[216,31,215,29],[216,33,215,31],[217,6,216,4],[217,10,216,8,"handle"],[217,16,216,14],[217,19,216,17],[217,23,216,21],[218,6,217,4],[218,10,217,8,"animation"],[218,19,217,17],[218,20,217,18,"__isInteraction"],[218,35,217,33],[218,37,217,35],[219,8,218,6,"handle"],[219,14,218,12],[219,17,218,15,"_InteractionManager"],[219,36,218,34],[219,37,218,35,"default"],[219,44,218,42],[219,45,218,43,"createInteractionHandle"],[219,68,218,66],[219,69,218,67],[219,70,218,68],[220,6,219,4],[221,6,220,4],[221,10,220,8,"previousAnimation"],[221,27,220,25],[221,30,220,28],[221,34,220,32],[221,35,220,33,"_animation"],[221,45,220,43],[222,6,221,4],[222,10,221,8],[222,11,221,9,"_animation"],[222,21,221,19],[222,25,221,23],[222,29,221,27],[222,30,221,28,"_animation"],[222,40,221,38],[222,41,221,39,"stop"],[222,45,221,43],[222,46,221,44],[222,47,221,45],[223,6,222,4],[223,10,222,8],[223,11,222,9,"_animation"],[223,21,222,19],[223,24,222,22,"animation"],[223,33,222,31],[224,6,223,4,"animation"],[224,15,223,13],[224,16,223,14,"start"],[224,21,223,19],[224,22,223,20],[224,26,223,24],[224,27,223,25,"_value"],[224,33,223,31],[224,35,223,33,"value"],[224,40,223,38],[224,44,223,42],[225,8,224,6],[226,8,225,6],[226,12,225,10],[226,13,225,11,"_updateValue"],[226,25,225,23],[226,26,225,24,"value"],[226,31,225,29],[226,33,225,31],[226,37,225,35],[226,38,225,36],[226,49,225,47],[226,50,225,48],[227,6,226,4],[227,7,226,5],[227,9,226,7,"result"],[227,15,226,13],[227,19,226,17],[228,8,227,6],[228,12,227,10],[228,13,227,11,"_animation"],[228,23,227,21],[228,26,227,24],[228,30,227,28],[229,8,228,6],[229,12,228,10,"handle"],[229,18,228,16],[229,23,228,21],[229,27,228,25],[229,29,228,27],[230,10,229,8,"_InteractionManager"],[230,29,229,27],[230,30,229,28,"default"],[230,37,229,35],[230,38,229,36,"clearInteractionHandle"],[230,60,229,58],[230,61,229,59,"handle"],[230,67,229,65],[230,68,229,66],[231,8,230,6],[232,8,231,6,"callback"],[232,16,231,14],[232,20,231,18,"callback"],[232,28,231,26],[232,29,231,27,"result"],[232,35,231,33],[232,36,231,34],[233,6,232,4],[233,7,232,5],[233,9,232,7,"previousAnimation"],[233,26,232,24],[233,28,232,26],[233,32,232,30],[233,33,232,31],[234,4,233,2],[236,4,235,2],[237,0,236,0],[238,0,237,0],[239,4,238,2,"stopTracking"],[239,16,238,14,"stopTracking"],[239,17,238,14],[239,19,238,17],[240,6,239,4],[240,10,239,8],[240,11,239,9,"_tracking"],[240,20,239,18],[240,24,239,22],[240,28,239,26],[240,29,239,27,"_tracking"],[240,38,239,36],[240,39,239,37,"__detach"],[240,47,239,45],[240,48,239,46],[240,49,239,47],[241,6,240,4],[241,10,240,8],[241,11,240,9,"_tracking"],[241,20,240,18],[241,23,240,21],[241,27,240,25],[242,4,241,2],[244,4,243,2],[245,0,244,0],[246,0,245,0],[247,4,246,2,"track"],[247,9,246,7,"track"],[247,10,246,8,"tracking"],[247,18,246,16],[247,20,246,18],[248,6,247,4],[248,10,247,8],[248,11,247,9,"stopTracking"],[248,23,247,21],[248,24,247,22],[248,25,247,23],[249,6,248,4],[249,10,248,8],[249,11,248,9,"_tracking"],[249,20,248,18],[249,23,248,21,"tracking"],[249,31,248,29],[250,6,249,4],[251,6,250,4],[251,10,250,8],[251,11,250,9,"_tracking"],[251,20,250,18],[251,24,250,22],[251,28,250,26],[251,29,250,27,"_tracking"],[251,38,250,36],[251,39,250,37,"update"],[251,45,250,43],[251,46,250,44],[251,47,250,45],[252,4,251,2],[253,4,252,2,"_updateValue"],[253,16,252,14,"_updateValue"],[253,17,252,15,"value"],[253,22,252,20],[253,24,252,22,"flush"],[253,29,252,27],[253,31,252,29],[254,6,253,4],[254,10,253,8,"value"],[254,15,253,13],[254,20,253,18,"undefined"],[254,29,253,27],[254,31,253,29],[255,8,254,6],[255,14,254,12],[255,18,254,16,"Error"],[255,23,254,21],[255,24,254,22],[255,77,254,75],[255,78,254,76],[256,6,255,4],[257,6,256,4],[257,10,256,8],[257,11,256,9,"_value"],[257,17,256,15],[257,20,256,18,"value"],[257,25,256,23],[258,6,257,4],[258,10,257,8,"flush"],[258,15,257,13],[258,17,257,15],[259,8,258,6,"_flush"],[259,14,258,12],[259,15,258,13],[259,19,258,17],[259,20,258,18],[260,6,259,4],[261,6,260,4],[261,11,260,9],[261,12,260,10,"__callListeners"],[261,27,260,25],[261,28,260,26],[261,32,260,30],[261,33,260,31,"__getValue"],[261,43,260,41],[261,44,260,42],[261,45,260,43],[261,46,260,44],[262,4,261,2],[263,4,262,2,"__getNativeConfig"],[263,21,262,19,"__getNativeConfig"],[263,22,262,19],[263,24,262,22],[264,6,263,4],[264,13,263,11],[265,8,264,6,"type"],[265,12,264,10],[265,14,264,12],[265,21,264,19],[266,8,265,6,"value"],[266,13,265,11],[266,15,265,13],[266,19,265,17],[266,20,265,18,"_value"],[266,26,265,24],[267,8,266,6,"offset"],[267,14,266,12],[267,16,266,14],[267,20,266,18],[267,21,266,19,"_offset"],[268,6,267,4],[268,7,267,5],[269,4,268,2],[270,2,269,0],[271,2,270,0],[271,6,270,4,"_default"],[271,14,270,12],[271,17,270,15,"exports"],[271,24,270,22],[271,25,270,23,"default"],[271,32,270,30],[271,35,270,33,"AnimatedValue"],[271,48,270,46],[272,2,271,0,"module"],[272,8,271,6],[272,9,271,7,"exports"],[272,16,271,14],[272,19,271,17,"exports"],[272,26,271,24],[272,27,271,25,"default"],[272,34,271,32],[273,0,271,33],[273,3]],"functionMap":{"names":["<global>","_flush","findAnimatedStyles","animatedStyles.forEach$argument_0","_executeAsAnimatedBatch","AnimatedValue","constructor","__detach","NativeAnimatedAPI.getValue$argument_1","__getValue","setValue","_executeAsAnimatedBatch$argument_1","setOffset","flattenOffset","extractOffset","stopAnimation","resetAnimation","__onAnimatedValueUpdateReceived","interpolate","animate","animation.start$argument_1","animation.start$argument_2","stopTracking","track","_updateValue","__getNativeConfig"],"mappings":"AAA;AC2C;ECE;GDS;yBEG,uCF;CDC;AIO;CJI;AKU;ECC;GDW;EEC;wDCE;ODE;GFI;EIC;GJE;EKQ;gECO,0ED;GLE;EOS;GPK;EQQ;GRM;ESQ;GTM;EUS;GVW;EWO;GXM;EYC;GZE;EaM;GbE;EcQ;iCCQ;KDG,EE;KFM;GdC;EiBK;GjBG;EkBK;GlBK;EmBC;GnBS;EoBC;GpBM;CLC"},"hasCjsExports":true},"type":"js/module"}]}