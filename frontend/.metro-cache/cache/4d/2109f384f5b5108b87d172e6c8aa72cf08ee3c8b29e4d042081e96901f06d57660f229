{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  exports.__esModule = true;\n  exports.default = void 0;\n  var DELAY = 'DELAY';\n  var ERROR = 'ERROR';\n  var LONG_PRESS_DETECTED = 'LONG_PRESS_DETECTED';\n  var NOT_RESPONDER = 'NOT_RESPONDER';\n  var RESPONDER_ACTIVE_LONG_PRESS_START = 'RESPONDER_ACTIVE_LONG_PRESS_START';\n  var RESPONDER_ACTIVE_PRESS_START = 'RESPONDER_ACTIVE_PRESS_START';\n  var RESPONDER_INACTIVE_PRESS_START = 'RESPONDER_INACTIVE_PRESS_START';\n  var RESPONDER_GRANT = 'RESPONDER_GRANT';\n  var RESPONDER_RELEASE = 'RESPONDER_RELEASE';\n  var RESPONDER_TERMINATED = 'RESPONDER_TERMINATED';\n  var Transitions = Object.freeze({\n    NOT_RESPONDER: {\n      DELAY: ERROR,\n      RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n      RESPONDER_RELEASE: ERROR,\n      RESPONDER_TERMINATED: ERROR,\n      LONG_PRESS_DETECTED: ERROR\n    },\n    RESPONDER_INACTIVE_PRESS_START: {\n      DELAY: RESPONDER_ACTIVE_PRESS_START,\n      RESPONDER_GRANT: ERROR,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: ERROR\n    },\n    RESPONDER_ACTIVE_PRESS_START: {\n      DELAY: ERROR,\n      RESPONDER_GRANT: ERROR,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n    },\n    RESPONDER_ACTIVE_LONG_PRESS_START: {\n      DELAY: ERROR,\n      RESPONDER_GRANT: ERROR,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: RESPONDER_ACTIVE_LONG_PRESS_START\n    },\n    ERROR: {\n      DELAY: NOT_RESPONDER,\n      RESPONDER_GRANT: RESPONDER_INACTIVE_PRESS_START,\n      RESPONDER_RELEASE: NOT_RESPONDER,\n      RESPONDER_TERMINATED: NOT_RESPONDER,\n      LONG_PRESS_DETECTED: NOT_RESPONDER\n    }\n  });\n  var getElementRole = element => element.getAttribute('role');\n  var getElementType = element => element.tagName.toLowerCase();\n  var isActiveSignal = signal => signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n  var isButtonRole = element => getElementRole(element) === 'button';\n  var isPressStartSignal = signal => signal === RESPONDER_INACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_PRESS_START || signal === RESPONDER_ACTIVE_LONG_PRESS_START;\n  var isTerminalSignal = signal => signal === RESPONDER_TERMINATED || signal === RESPONDER_RELEASE;\n  var isValidKeyPress = event => {\n    var key = event.key,\n      target = event.target;\n    var isSpacebar = key === ' ' || key === 'Spacebar';\n    var isButtonish = getElementType(target) === 'button' || isButtonRole(target);\n    return key === 'Enter' || isSpacebar && isButtonish;\n  };\n  var DEFAULT_LONG_PRESS_DELAY_MS = 450; // 500 - 50\n  var DEFAULT_PRESS_DELAY_MS = 50;\n\n  /**\n   * =========================== PressResponder Tutorial ===========================\n   *\n   * The `PressResponder` class helps you create press interactions by analyzing the\n   * geometry of elements and observing when another responder (e.g. ScrollView)\n   * has stolen the touch lock. It offers hooks for your component to provide\n   * interaction feedback to the user:\n   *\n   * - When a press has activated (e.g. highlight an element)\n   * - When a press has deactivated (e.g. un-highlight an element)\n   * - When a press sould trigger an action, meaning it activated and deactivated\n   *   while within the geometry of the element without the lock being stolen.\n   *\n   * A high quality interaction isn't as simple as you might think. There should\n   * be a slight delay before activation. Moving your finger beyond an element's\n   * bounds should trigger deactivation, but moving the same finger back within an\n   * element's bounds should trigger reactivation.\n   *\n   * In order to use `PressResponder`, do the following:\n   *\n   *     const pressResponder = new PressResponder(config);\n   *\n   * 2. Choose the rendered component who should collect the press events. On that\n   *    element, spread `pressability.getEventHandlers()` into its props.\n   *\n   *    return (\n   *      <View {...this.state.pressResponder.getEventHandlers()} />\n   *    );\n   *\n   * 3. Reset `PressResponder` when your component unmounts.\n   *\n   *    componentWillUnmount() {\n   *      this.state.pressResponder.reset();\n   *    }\n   *\n   * ==================== Implementation Details ====================\n   *\n   * `PressResponder` only assumes that there exists a `HitRect` node. The `PressRect`\n   * is an abstract box that is extended beyond the `HitRect`.\n   *\n   * # Geometry\n   *\n   *  ┌────────────────────────┐\n   *  │  ┌──────────────────┐  │ - Presses start anywhere within `HitRect`.\n   *  │  │  ┌────────────┐  │  │\n   *  │  │  │ VisualRect │  │  │\n   *  │  │  └────────────┘  │  │ - When pressed down for sufficient amount of time\n   *  │  │    HitRect       │  │   before letting up, `VisualRect` activates.\n   *  │  └──────────────────┘  │\n   *  │       Out Region   o   │\n   *  └────────────────────│───┘\n   *                       └────── When the press is released outside the `HitRect`,\n   *                               the responder is NOT eligible for a \"press\".\n   *\n   * # State Machine\n   *\n   * ┌───────────────┐ ◀──── RESPONDER_RELEASE\n   * │ NOT_RESPONDER │\n   * └───┬───────────┘ ◀──── RESPONDER_TERMINATED\n   *     │\n   *     │ RESPONDER_GRANT (HitRect)\n   *     │\n   *     ▼\n   * ┌─────────────────────┐          ┌───────────────────┐              ┌───────────────────┐\n   * │ RESPONDER_INACTIVE_ │  DELAY   │ RESPONDER_ACTIVE_ │  T + DELAY   │ RESPONDER_ACTIVE_ │\n   * │ PRESS_START         ├────────▶ │ PRESS_START       ├────────────▶ │ LONG_PRESS_START  │\n   * └─────────────────────┘          └───────────────────┘              └───────────────────┘\n   *\n   * T + DELAY => LONG_PRESS_DELAY + DELAY\n   *\n   * Not drawn are the side effects of each transition. The most important side\n   * effect is the invocation of `onLongPress`. Only when the browser produces a\n   * `click` event is `onPress` invoked.\n   */\n  class PressResponder {\n    constructor(config) {\n      this._eventHandlers = null;\n      this._isPointerTouch = false;\n      this._longPressDelayTimeout = null;\n      this._longPressDispatched = false;\n      this._pressDelayTimeout = null;\n      this._pressOutDelayTimeout = null;\n      this._touchState = NOT_RESPONDER;\n      this._responderElement = null;\n      this.configure(config);\n    }\n    configure(config) {\n      this._config = config;\n    }\n\n    /**\n     * Resets any pending timers. This should be called on unmount.\n     */\n    reset() {\n      this._cancelLongPressDelayTimeout();\n      this._cancelPressDelayTimeout();\n      this._cancelPressOutDelayTimeout();\n    }\n\n    /**\n     * Returns a set of props to spread into the interactive element.\n     */\n    getEventHandlers() {\n      if (this._eventHandlers == null) {\n        this._eventHandlers = this._createEventHandlers();\n      }\n      return this._eventHandlers;\n    }\n    _createEventHandlers() {\n      var start = (event, shouldDelay) => {\n        event.persist();\n        this._cancelPressOutDelayTimeout();\n        this._longPressDispatched = false;\n        this._selectionTerminated = false;\n        this._touchState = NOT_RESPONDER;\n        this._isPointerTouch = event.nativeEvent.type === 'touchstart';\n        this._receiveSignal(RESPONDER_GRANT, event);\n        var delayPressStart = normalizeDelay(this._config.delayPressStart, 0, DEFAULT_PRESS_DELAY_MS);\n        if (shouldDelay !== false && delayPressStart > 0) {\n          this._pressDelayTimeout = setTimeout(() => {\n            this._receiveSignal(DELAY, event);\n          }, delayPressStart);\n        } else {\n          this._receiveSignal(DELAY, event);\n        }\n        var delayLongPress = normalizeDelay(this._config.delayLongPress, 10, DEFAULT_LONG_PRESS_DELAY_MS);\n        this._longPressDelayTimeout = setTimeout(() => {\n          this._handleLongPress(event);\n        }, delayLongPress + delayPressStart);\n      };\n      var end = event => {\n        this._receiveSignal(RESPONDER_RELEASE, event);\n      };\n      var keyupHandler = event => {\n        var onPress = this._config.onPress;\n        var target = event.target;\n        if (this._touchState !== NOT_RESPONDER && isValidKeyPress(event)) {\n          end(event);\n          document.removeEventListener('keyup', keyupHandler);\n          var role = target.getAttribute('role');\n          var elementType = getElementType(target);\n          var isNativeInteractiveElement = role === 'link' || elementType === 'a' || elementType === 'button' || elementType === 'input' || elementType === 'select' || elementType === 'textarea';\n          var isActiveElement = this._responderElement === target;\n          if (onPress != null && !isNativeInteractiveElement && isActiveElement) {\n            onPress(event);\n          }\n          this._responderElement = null;\n        }\n      };\n      return {\n        onStartShouldSetResponder: event => {\n          var disabled = this._config.disabled;\n          if (disabled && isButtonRole(event.currentTarget)) {\n            event.stopPropagation();\n          }\n          if (disabled == null) {\n            return true;\n          }\n          return !disabled;\n        },\n        onKeyDown: event => {\n          var disabled = this._config.disabled;\n          var key = event.key,\n            target = event.target;\n          if (!disabled && isValidKeyPress(event)) {\n            if (this._touchState === NOT_RESPONDER) {\n              start(event, false);\n              this._responderElement = target;\n              // Listen to 'keyup' on document to account for situations where\n              // focus is moved to another element during 'keydown'.\n              document.addEventListener('keyup', keyupHandler);\n            }\n            var isSpacebarKey = key === ' ' || key === 'Spacebar';\n            var role = getElementRole(target);\n            var isButtonLikeRole = role === 'button' || role === 'menuitem';\n            if (isSpacebarKey && isButtonLikeRole && getElementType(target) !== 'button') {\n              // Prevent spacebar scrolling the window if using non-native button\n              event.preventDefault();\n            }\n            event.stopPropagation();\n          }\n        },\n        onResponderGrant: event => start(event),\n        onResponderMove: event => {\n          if (this._config.onPressMove != null) {\n            this._config.onPressMove(event);\n          }\n          var touch = getTouchFromResponderEvent(event);\n          if (this._touchActivatePosition != null) {\n            var deltaX = this._touchActivatePosition.pageX - touch.pageX;\n            var deltaY = this._touchActivatePosition.pageY - touch.pageY;\n            if (Math.hypot(deltaX, deltaY) > 10) {\n              this._cancelLongPressDelayTimeout();\n            }\n          }\n        },\n        onResponderRelease: event => end(event),\n        onResponderTerminate: event => {\n          if (event.nativeEvent.type === 'selectionchange') {\n            this._selectionTerminated = true;\n          }\n          this._receiveSignal(RESPONDER_TERMINATED, event);\n        },\n        onResponderTerminationRequest: event => {\n          var _this$_config = this._config,\n            cancelable = _this$_config.cancelable,\n            disabled = _this$_config.disabled,\n            onLongPress = _this$_config.onLongPress;\n          // If `onLongPress` is provided, don't terminate on `contextmenu` as default\n          // behavior will be prevented for non-mouse pointers.\n          if (!disabled && onLongPress != null && this._isPointerTouch && event.nativeEvent.type === 'contextmenu') {\n            return false;\n          }\n          if (cancelable == null) {\n            return true;\n          }\n          return cancelable;\n        },\n        // NOTE: this diverges from react-native in 3 significant ways:\n        // * The `onPress` callback is not connected to the responder system (the native\n        //  `click` event must be used but is dispatched in many scenarios where no pointers\n        //   are on the screen.) Therefore, it's possible for `onPress` to be called without\n        //   `onPress{Start,End}` being called first.\n        // * The `onPress` callback is only be called on the first ancestor of the native\n        //   `click` target that is using the PressResponder.\n        // * The event's `nativeEvent` is a `MouseEvent` not a `TouchEvent`.\n        onClick: event => {\n          var _this$_config2 = this._config,\n            disabled = _this$_config2.disabled,\n            onPress = _this$_config2.onPress;\n          if (!disabled) {\n            // If long press dispatched, cancel default click behavior.\n            // If the responder terminated because text was selected during the gesture,\n            // cancel the default click behavior.\n            event.stopPropagation();\n            if (this._longPressDispatched || this._selectionTerminated) {\n              event.preventDefault();\n            } else if (onPress != null && event.altKey === false) {\n              onPress(event);\n            }\n          } else {\n            if (isButtonRole(event.currentTarget)) {\n              event.stopPropagation();\n            }\n          }\n        },\n        // If `onLongPress` is provided and a touch pointer is being used, prevent the\n        // default context menu from opening.\n        onContextMenu: event => {\n          var _this$_config3 = this._config,\n            disabled = _this$_config3.disabled,\n            onLongPress = _this$_config3.onLongPress;\n          if (!disabled) {\n            if (onLongPress != null && this._isPointerTouch && !event.defaultPrevented) {\n              event.preventDefault();\n              event.stopPropagation();\n            }\n          } else {\n            if (isButtonRole(event.currentTarget)) {\n              event.stopPropagation();\n            }\n          }\n        }\n      };\n    }\n\n    /**\n     * Receives a state machine signal, performs side effects of the transition\n     * and stores the new state. Validates the transition as well.\n     */\n    _receiveSignal(signal, event) {\n      var prevState = this._touchState;\n      var nextState = null;\n      if (Transitions[prevState] != null) {\n        nextState = Transitions[prevState][signal];\n      }\n      if (this._touchState === NOT_RESPONDER && signal === RESPONDER_RELEASE) {\n        return;\n      }\n      if (nextState == null || nextState === ERROR) {\n        console.error(\"PressResponder: Invalid signal \" + signal + \" for state \" + prevState + \" on responder\");\n      } else if (prevState !== nextState) {\n        this._performTransitionSideEffects(prevState, nextState, signal, event);\n        this._touchState = nextState;\n      }\n    }\n\n    /**\n     * Performs a transition between touchable states and identify any activations\n     * or deactivations (and callback invocations).\n     */\n    _performTransitionSideEffects(prevState, nextState, signal, event) {\n      if (isTerminalSignal(signal)) {\n        // Pressable suppression of contextmenu on windows.\n        // On Windows, the contextmenu is displayed after pointerup.\n        // https://github.com/necolas/react-native-web/issues/2296\n        setTimeout(() => {\n          this._isPointerTouch = false;\n        }, 0);\n        this._touchActivatePosition = null;\n        this._cancelLongPressDelayTimeout();\n      }\n      if (isPressStartSignal(prevState) && signal === LONG_PRESS_DETECTED) {\n        var onLongPress = this._config.onLongPress;\n        // Long press is not supported for keyboards because 'click' can be dispatched\n        // immediately (and multiple times) after 'keydown'.\n        if (onLongPress != null && event.nativeEvent.key == null) {\n          onLongPress(event);\n          this._longPressDispatched = true;\n        }\n      }\n      var isPrevActive = isActiveSignal(prevState);\n      var isNextActive = isActiveSignal(nextState);\n      if (!isPrevActive && isNextActive) {\n        this._activate(event);\n      } else if (isPrevActive && !isNextActive) {\n        this._deactivate(event);\n      }\n      if (isPressStartSignal(prevState) && signal === RESPONDER_RELEASE) {\n        var _this$_config4 = this._config,\n          _onLongPress = _this$_config4.onLongPress,\n          onPress = _this$_config4.onPress;\n        if (onPress != null) {\n          var isPressCanceledByLongPress = _onLongPress != null && prevState === RESPONDER_ACTIVE_LONG_PRESS_START;\n          if (!isPressCanceledByLongPress) {\n            // If we never activated (due to delays), activate and deactivate now.\n            if (!isNextActive && !isPrevActive) {\n              this._activate(event);\n              this._deactivate(event);\n            }\n          }\n        }\n      }\n      this._cancelPressDelayTimeout();\n    }\n    _activate(event) {\n      var _this$_config5 = this._config,\n        onPressChange = _this$_config5.onPressChange,\n        onPressStart = _this$_config5.onPressStart;\n      var touch = getTouchFromResponderEvent(event);\n      this._touchActivatePosition = {\n        pageX: touch.pageX,\n        pageY: touch.pageY\n      };\n      if (onPressStart != null) {\n        onPressStart(event);\n      }\n      if (onPressChange != null) {\n        onPressChange(true);\n      }\n    }\n    _deactivate(event) {\n      var _this$_config6 = this._config,\n        onPressChange = _this$_config6.onPressChange,\n        onPressEnd = _this$_config6.onPressEnd;\n      function end() {\n        if (onPressEnd != null) {\n          onPressEnd(event);\n        }\n        if (onPressChange != null) {\n          onPressChange(false);\n        }\n      }\n      var delayPressEnd = normalizeDelay(this._config.delayPressEnd);\n      if (delayPressEnd > 0) {\n        this._pressOutDelayTimeout = setTimeout(() => {\n          end();\n        }, delayPressEnd);\n      } else {\n        end();\n      }\n    }\n    _handleLongPress(event) {\n      if (this._touchState === RESPONDER_ACTIVE_PRESS_START || this._touchState === RESPONDER_ACTIVE_LONG_PRESS_START) {\n        this._receiveSignal(LONG_PRESS_DETECTED, event);\n      }\n    }\n    _cancelLongPressDelayTimeout() {\n      if (this._longPressDelayTimeout != null) {\n        clearTimeout(this._longPressDelayTimeout);\n        this._longPressDelayTimeout = null;\n      }\n    }\n    _cancelPressDelayTimeout() {\n      if (this._pressDelayTimeout != null) {\n        clearTimeout(this._pressDelayTimeout);\n        this._pressDelayTimeout = null;\n      }\n    }\n    _cancelPressOutDelayTimeout() {\n      if (this._pressOutDelayTimeout != null) {\n        clearTimeout(this._pressOutDelayTimeout);\n        this._pressOutDelayTimeout = null;\n      }\n    }\n  }\n  exports.default = PressResponder;\n  function normalizeDelay(delay, min, fallback) {\n    if (min === void 0) {\n      min = 0;\n    }\n    if (fallback === void 0) {\n      fallback = 0;\n    }\n    return Math.max(min, delay !== null && delay !== void 0 ? delay : fallback);\n  }\n  function getTouchFromResponderEvent(event) {\n    var _event$nativeEvent = event.nativeEvent,\n      changedTouches = _event$nativeEvent.changedTouches,\n      touches = _event$nativeEvent.touches;\n    if (touches != null && touches.length > 0) {\n      return touches[0];\n    }\n    if (changedTouches != null && changedTouches.length > 0) {\n      return changedTouches[0];\n    }\n    return event.nativeEvent;\n  }\n  module.exports = exports.default;\n});","lineCount":498,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0,"exports"],[14,9,13,7],[14,10,13,8,"__esModule"],[14,20,13,18],[14,23,13,21],[14,27,13,25],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"default"],[15,17,14,15],[15,20,14,18],[15,25,14,23],[15,26,14,24],[16,2,15,0],[16,6,15,4,"DELAY"],[16,11,15,9],[16,14,15,12],[16,21,15,19],[17,2,16,0],[17,6,16,4,"ERROR"],[17,11,16,9],[17,14,16,12],[17,21,16,19],[18,2,17,0],[18,6,17,4,"LONG_PRESS_DETECTED"],[18,25,17,23],[18,28,17,26],[18,49,17,47],[19,2,18,0],[19,6,18,4,"NOT_RESPONDER"],[19,19,18,17],[19,22,18,20],[19,37,18,35],[20,2,19,0],[20,6,19,4,"RESPONDER_ACTIVE_LONG_PRESS_START"],[20,39,19,37],[20,42,19,40],[20,77,19,75],[21,2,20,0],[21,6,20,4,"RESPONDER_ACTIVE_PRESS_START"],[21,34,20,32],[21,37,20,35],[21,67,20,65],[22,2,21,0],[22,6,21,4,"RESPONDER_INACTIVE_PRESS_START"],[22,36,21,34],[22,39,21,37],[22,71,21,69],[23,2,22,0],[23,6,22,4,"RESPONDER_GRANT"],[23,21,22,19],[23,24,22,22],[23,41,22,39],[24,2,23,0],[24,6,23,4,"RESPONDER_RELEASE"],[24,23,23,21],[24,26,23,24],[24,45,23,43],[25,2,24,0],[25,6,24,4,"RESPONDER_TERMINATED"],[25,26,24,24],[25,29,24,27],[25,51,24,49],[26,2,25,0],[26,6,25,4,"Transitions"],[26,17,25,15],[26,20,25,18,"Object"],[26,26,25,24],[26,27,25,25,"freeze"],[26,33,25,31],[26,34,25,32],[27,4,26,2,"NOT_RESPONDER"],[27,17,26,15],[27,19,26,17],[28,6,27,4,"DELAY"],[28,11,27,9],[28,13,27,11,"ERROR"],[28,18,27,16],[29,6,28,4,"RESPONDER_GRANT"],[29,21,28,19],[29,23,28,21,"RESPONDER_INACTIVE_PRESS_START"],[29,53,28,51],[30,6,29,4,"RESPONDER_RELEASE"],[30,23,29,21],[30,25,29,23,"ERROR"],[30,30,29,28],[31,6,30,4,"RESPONDER_TERMINATED"],[31,26,30,24],[31,28,30,26,"ERROR"],[31,33,30,31],[32,6,31,4,"LONG_PRESS_DETECTED"],[32,25,31,23],[32,27,31,25,"ERROR"],[33,4,32,2],[33,5,32,3],[34,4,33,2,"RESPONDER_INACTIVE_PRESS_START"],[34,34,33,32],[34,36,33,34],[35,6,34,4,"DELAY"],[35,11,34,9],[35,13,34,11,"RESPONDER_ACTIVE_PRESS_START"],[35,41,34,39],[36,6,35,4,"RESPONDER_GRANT"],[36,21,35,19],[36,23,35,21,"ERROR"],[36,28,35,26],[37,6,36,4,"RESPONDER_RELEASE"],[37,23,36,21],[37,25,36,23,"NOT_RESPONDER"],[37,38,36,36],[38,6,37,4,"RESPONDER_TERMINATED"],[38,26,37,24],[38,28,37,26,"NOT_RESPONDER"],[38,41,37,39],[39,6,38,4,"LONG_PRESS_DETECTED"],[39,25,38,23],[39,27,38,25,"ERROR"],[40,4,39,2],[40,5,39,3],[41,4,40,2,"RESPONDER_ACTIVE_PRESS_START"],[41,32,40,30],[41,34,40,32],[42,6,41,4,"DELAY"],[42,11,41,9],[42,13,41,11,"ERROR"],[42,18,41,16],[43,6,42,4,"RESPONDER_GRANT"],[43,21,42,19],[43,23,42,21,"ERROR"],[43,28,42,26],[44,6,43,4,"RESPONDER_RELEASE"],[44,23,43,21],[44,25,43,23,"NOT_RESPONDER"],[44,38,43,36],[45,6,44,4,"RESPONDER_TERMINATED"],[45,26,44,24],[45,28,44,26,"NOT_RESPONDER"],[45,41,44,39],[46,6,45,4,"LONG_PRESS_DETECTED"],[46,25,45,23],[46,27,45,25,"RESPONDER_ACTIVE_LONG_PRESS_START"],[47,4,46,2],[47,5,46,3],[48,4,47,2,"RESPONDER_ACTIVE_LONG_PRESS_START"],[48,37,47,35],[48,39,47,37],[49,6,48,4,"DELAY"],[49,11,48,9],[49,13,48,11,"ERROR"],[49,18,48,16],[50,6,49,4,"RESPONDER_GRANT"],[50,21,49,19],[50,23,49,21,"ERROR"],[50,28,49,26],[51,6,50,4,"RESPONDER_RELEASE"],[51,23,50,21],[51,25,50,23,"NOT_RESPONDER"],[51,38,50,36],[52,6,51,4,"RESPONDER_TERMINATED"],[52,26,51,24],[52,28,51,26,"NOT_RESPONDER"],[52,41,51,39],[53,6,52,4,"LONG_PRESS_DETECTED"],[53,25,52,23],[53,27,52,25,"RESPONDER_ACTIVE_LONG_PRESS_START"],[54,4,53,2],[54,5,53,3],[55,4,54,2,"ERROR"],[55,9,54,7],[55,11,54,9],[56,6,55,4,"DELAY"],[56,11,55,9],[56,13,55,11,"NOT_RESPONDER"],[56,26,55,24],[57,6,56,4,"RESPONDER_GRANT"],[57,21,56,19],[57,23,56,21,"RESPONDER_INACTIVE_PRESS_START"],[57,53,56,51],[58,6,57,4,"RESPONDER_RELEASE"],[58,23,57,21],[58,25,57,23,"NOT_RESPONDER"],[58,38,57,36],[59,6,58,4,"RESPONDER_TERMINATED"],[59,26,58,24],[59,28,58,26,"NOT_RESPONDER"],[59,41,58,39],[60,6,59,4,"LONG_PRESS_DETECTED"],[60,25,59,23],[60,27,59,25,"NOT_RESPONDER"],[61,4,60,2],[62,2,61,0],[62,3,61,1],[62,4,61,2],[63,2,62,0],[63,6,62,4,"getElementRole"],[63,20,62,18],[63,23,62,21,"element"],[63,30,62,28],[63,34,62,32,"element"],[63,41,62,39],[63,42,62,40,"getAttribute"],[63,54,62,52],[63,55,62,53],[63,61,62,59],[63,62,62,60],[64,2,63,0],[64,6,63,4,"getElementType"],[64,20,63,18],[64,23,63,21,"element"],[64,30,63,28],[64,34,63,32,"element"],[64,41,63,39],[64,42,63,40,"tagName"],[64,49,63,47],[64,50,63,48,"toLowerCase"],[64,61,63,59],[64,62,63,60],[64,63,63,61],[65,2,64,0],[65,6,64,4,"isActiveSignal"],[65,20,64,18],[65,23,64,21,"signal"],[65,29,64,27],[65,33,64,31,"signal"],[65,39,64,37],[65,44,64,42,"RESPONDER_ACTIVE_PRESS_START"],[65,72,64,70],[65,76,64,74,"signal"],[65,82,64,80],[65,87,64,85,"RESPONDER_ACTIVE_LONG_PRESS_START"],[65,120,64,118],[66,2,65,0],[66,6,65,4,"isButtonRole"],[66,18,65,16],[66,21,65,19,"element"],[66,28,65,26],[66,32,65,30,"getElementRole"],[66,46,65,44],[66,47,65,45,"element"],[66,54,65,52],[66,55,65,53],[66,60,65,58],[66,68,65,66],[67,2,66,0],[67,6,66,4,"isPressStartSignal"],[67,24,66,22],[67,27,66,25,"signal"],[67,33,66,31],[67,37,66,35,"signal"],[67,43,66,41],[67,48,66,46,"RESPONDER_INACTIVE_PRESS_START"],[67,78,66,76],[67,82,66,80,"signal"],[67,88,66,86],[67,93,66,91,"RESPONDER_ACTIVE_PRESS_START"],[67,121,66,119],[67,125,66,123,"signal"],[67,131,66,129],[67,136,66,134,"RESPONDER_ACTIVE_LONG_PRESS_START"],[67,169,66,167],[68,2,67,0],[68,6,67,4,"isTerminalSignal"],[68,22,67,20],[68,25,67,23,"signal"],[68,31,67,29],[68,35,67,33,"signal"],[68,41,67,39],[68,46,67,44,"RESPONDER_TERMINATED"],[68,66,67,64],[68,70,67,68,"signal"],[68,76,67,74],[68,81,67,79,"RESPONDER_RELEASE"],[68,98,67,96],[69,2,68,0],[69,6,68,4,"isValidKeyPress"],[69,21,68,19],[69,24,68,22,"event"],[69,29,68,27],[69,33,68,31],[70,4,69,2],[70,8,69,6,"key"],[70,11,69,9],[70,14,69,12,"event"],[70,19,69,17],[70,20,69,18,"key"],[70,23,69,21],[71,6,70,4,"target"],[71,12,70,10],[71,15,70,13,"event"],[71,20,70,18],[71,21,70,19,"target"],[71,27,70,25],[72,4,71,2],[72,8,71,6,"isSpacebar"],[72,18,71,16],[72,21,71,19,"key"],[72,24,71,22],[72,29,71,27],[72,32,71,30],[72,36,71,34,"key"],[72,39,71,37],[72,44,71,42],[72,54,71,52],[73,4,72,2],[73,8,72,6,"isButtonish"],[73,19,72,17],[73,22,72,20,"getElementType"],[73,36,72,34],[73,37,72,35,"target"],[73,43,72,41],[73,44,72,42],[73,49,72,47],[73,57,72,55],[73,61,72,59,"isButtonRole"],[73,73,72,71],[73,74,72,72,"target"],[73,80,72,78],[73,81,72,79],[74,4,73,2],[74,11,73,9,"key"],[74,14,73,12],[74,19,73,17],[74,26,73,24],[74,30,73,28,"isSpacebar"],[74,40,73,38],[74,44,73,42,"isButtonish"],[74,55,73,53],[75,2,74,0],[75,3,74,1],[76,2,75,0],[76,6,75,4,"DEFAULT_LONG_PRESS_DELAY_MS"],[76,33,75,31],[76,36,75,34],[76,39,75,37],[76,40,75,38],[76,41,75,39],[77,2,76,0],[77,6,76,4,"DEFAULT_PRESS_DELAY_MS"],[77,28,76,26],[77,31,76,29],[77,33,76,31],[79,2,78,0],[80,0,79,0],[81,0,80,0],[82,0,81,0],[83,0,82,0],[84,0,83,0],[85,0,84,0],[86,0,85,0],[87,0,86,0],[88,0,87,0],[89,0,88,0],[90,0,89,0],[91,0,90,0],[92,0,91,0],[93,0,92,0],[94,0,93,0],[95,0,94,0],[96,0,95,0],[97,0,96,0],[98,0,97,0],[99,0,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,0,102,0],[104,0,103,0],[105,0,104,0],[106,0,105,0],[107,0,106,0],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,0,111,0],[113,0,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,0,116,0],[118,0,117,0],[119,0,118,0],[120,0,119,0],[121,0,120,0],[122,0,121,0],[123,0,122,0],[124,0,123,0],[125,0,124,0],[126,0,125,0],[127,0,126,0],[128,0,127,0],[129,0,128,0],[130,0,129,0],[131,0,130,0],[132,0,131,0],[133,0,132,0],[134,0,133,0],[135,0,134,0],[136,0,135,0],[137,0,136,0],[138,0,137,0],[139,0,138,0],[140,0,139,0],[141,0,140,0],[142,0,141,0],[143,0,142,0],[144,0,143,0],[145,0,144,0],[146,0,145,0],[147,0,146,0],[148,0,147,0],[149,0,148,0],[150,0,149,0],[151,0,150,0],[152,0,151,0],[153,2,152,0],[153,8,152,6,"PressResponder"],[153,22,152,20],[153,23,152,21],[154,4,153,2,"constructor"],[154,15,153,13,"constructor"],[154,16,153,14,"config"],[154,22,153,20],[154,24,153,22],[155,6,154,4],[155,10,154,8],[155,11,154,9,"_eventHandlers"],[155,25,154,23],[155,28,154,26],[155,32,154,30],[156,6,155,4],[156,10,155,8],[156,11,155,9,"_isPointerTouch"],[156,26,155,24],[156,29,155,27],[156,34,155,32],[157,6,156,4],[157,10,156,8],[157,11,156,9,"_longPressDelayTimeout"],[157,33,156,31],[157,36,156,34],[157,40,156,38],[158,6,157,4],[158,10,157,8],[158,11,157,9,"_longPressDispatched"],[158,31,157,29],[158,34,157,32],[158,39,157,37],[159,6,158,4],[159,10,158,8],[159,11,158,9,"_pressDelayTimeout"],[159,29,158,27],[159,32,158,30],[159,36,158,34],[160,6,159,4],[160,10,159,8],[160,11,159,9,"_pressOutDelayTimeout"],[160,32,159,30],[160,35,159,33],[160,39,159,37],[161,6,160,4],[161,10,160,8],[161,11,160,9,"_touchState"],[161,22,160,20],[161,25,160,23,"NOT_RESPONDER"],[161,38,160,36],[162,6,161,4],[162,10,161,8],[162,11,161,9,"_responderElement"],[162,28,161,26],[162,31,161,29],[162,35,161,33],[163,6,162,4],[163,10,162,8],[163,11,162,9,"configure"],[163,20,162,18],[163,21,162,19,"config"],[163,27,162,25],[163,28,162,26],[164,4,163,2],[165,4,164,2,"configure"],[165,13,164,11,"configure"],[165,14,164,12,"config"],[165,20,164,18],[165,22,164,20],[166,6,165,4],[166,10,165,8],[166,11,165,9,"_config"],[166,18,165,16],[166,21,165,19,"config"],[166,27,165,25],[167,4,166,2],[169,4,168,2],[170,0,169,0],[171,0,170,0],[172,4,171,2,"reset"],[172,9,171,7,"reset"],[172,10,171,7],[172,12,171,10],[173,6,172,4],[173,10,172,8],[173,11,172,9,"_cancelLongPressDelayTimeout"],[173,39,172,37],[173,40,172,38],[173,41,172,39],[174,6,173,4],[174,10,173,8],[174,11,173,9,"_cancelPressDelayTimeout"],[174,35,173,33],[174,36,173,34],[174,37,173,35],[175,6,174,4],[175,10,174,8],[175,11,174,9,"_cancelPressOutDelayTimeout"],[175,38,174,36],[175,39,174,37],[175,40,174,38],[176,4,175,2],[178,4,177,2],[179,0,178,0],[180,0,179,0],[181,4,180,2,"getEventHandlers"],[181,20,180,18,"getEventHandlers"],[181,21,180,18],[181,23,180,21],[182,6,181,4],[182,10,181,8],[182,14,181,12],[182,15,181,13,"_eventHandlers"],[182,29,181,27],[182,33,181,31],[182,37,181,35],[182,39,181,37],[183,8,182,6],[183,12,182,10],[183,13,182,11,"_eventHandlers"],[183,27,182,25],[183,30,182,28],[183,34,182,32],[183,35,182,33,"_createEventHandlers"],[183,55,182,53],[183,56,182,54],[183,57,182,55],[184,6,183,4],[185,6,184,4],[185,13,184,11],[185,17,184,15],[185,18,184,16,"_eventHandlers"],[185,32,184,30],[186,4,185,2],[187,4,186,2,"_createEventHandlers"],[187,24,186,22,"_createEventHandlers"],[187,25,186,22],[187,27,186,25],[188,6,187,4],[188,10,187,8,"start"],[188,15,187,13],[188,18,187,16,"start"],[188,19,187,17,"event"],[188,24,187,22],[188,26,187,24,"shouldDelay"],[188,37,187,35],[188,42,187,40],[189,8,188,6,"event"],[189,13,188,11],[189,14,188,12,"persist"],[189,21,188,19],[189,22,188,20],[189,23,188,21],[190,8,189,6],[190,12,189,10],[190,13,189,11,"_cancelPressOutDelayTimeout"],[190,40,189,38],[190,41,189,39],[190,42,189,40],[191,8,190,6],[191,12,190,10],[191,13,190,11,"_longPressDispatched"],[191,33,190,31],[191,36,190,34],[191,41,190,39],[192,8,191,6],[192,12,191,10],[192,13,191,11,"_selectionTerminated"],[192,33,191,31],[192,36,191,34],[192,41,191,39],[193,8,192,6],[193,12,192,10],[193,13,192,11,"_touchState"],[193,24,192,22],[193,27,192,25,"NOT_RESPONDER"],[193,40,192,38],[194,8,193,6],[194,12,193,10],[194,13,193,11,"_isPointerTouch"],[194,28,193,26],[194,31,193,29,"event"],[194,36,193,34],[194,37,193,35,"nativeEvent"],[194,48,193,46],[194,49,193,47,"type"],[194,53,193,51],[194,58,193,56],[194,70,193,68],[195,8,194,6],[195,12,194,10],[195,13,194,11,"_receiveSignal"],[195,27,194,25],[195,28,194,26,"RESPONDER_GRANT"],[195,43,194,41],[195,45,194,43,"event"],[195,50,194,48],[195,51,194,49],[196,8,195,6],[196,12,195,10,"delayPressStart"],[196,27,195,25],[196,30,195,28,"normalizeDelay"],[196,44,195,42],[196,45,195,43],[196,49,195,47],[196,50,195,48,"_config"],[196,57,195,55],[196,58,195,56,"delayPressStart"],[196,73,195,71],[196,75,195,73],[196,76,195,74],[196,78,195,76,"DEFAULT_PRESS_DELAY_MS"],[196,100,195,98],[196,101,195,99],[197,8,196,6],[197,12,196,10,"shouldDelay"],[197,23,196,21],[197,28,196,26],[197,33,196,31],[197,37,196,35,"delayPressStart"],[197,52,196,50],[197,55,196,53],[197,56,196,54],[197,58,196,56],[198,10,197,8],[198,14,197,12],[198,15,197,13,"_pressDelayTimeout"],[198,33,197,31],[198,36,197,34,"setTimeout"],[198,46,197,44],[198,47,197,45],[198,53,197,51],[199,12,198,10],[199,16,198,14],[199,17,198,15,"_receiveSignal"],[199,31,198,29],[199,32,198,30,"DELAY"],[199,37,198,35],[199,39,198,37,"event"],[199,44,198,42],[199,45,198,43],[200,10,199,8],[200,11,199,9],[200,13,199,11,"delayPressStart"],[200,28,199,26],[200,29,199,27],[201,8,200,6],[201,9,200,7],[201,15,200,13],[202,10,201,8],[202,14,201,12],[202,15,201,13,"_receiveSignal"],[202,29,201,27],[202,30,201,28,"DELAY"],[202,35,201,33],[202,37,201,35,"event"],[202,42,201,40],[202,43,201,41],[203,8,202,6],[204,8,203,6],[204,12,203,10,"delayLongPress"],[204,26,203,24],[204,29,203,27,"normalizeDelay"],[204,43,203,41],[204,44,203,42],[204,48,203,46],[204,49,203,47,"_config"],[204,56,203,54],[204,57,203,55,"delayLongPress"],[204,71,203,69],[204,73,203,71],[204,75,203,73],[204,77,203,75,"DEFAULT_LONG_PRESS_DELAY_MS"],[204,104,203,102],[204,105,203,103],[205,8,204,6],[205,12,204,10],[205,13,204,11,"_longPressDelayTimeout"],[205,35,204,33],[205,38,204,36,"setTimeout"],[205,48,204,46],[205,49,204,47],[205,55,204,53],[206,10,205,8],[206,14,205,12],[206,15,205,13,"_handleLongPress"],[206,31,205,29],[206,32,205,30,"event"],[206,37,205,35],[206,38,205,36],[207,8,206,6],[207,9,206,7],[207,11,206,9,"delayLongPress"],[207,25,206,23],[207,28,206,26,"delayPressStart"],[207,43,206,41],[207,44,206,42],[208,6,207,4],[208,7,207,5],[209,6,208,4],[209,10,208,8,"end"],[209,13,208,11],[209,16,208,14,"event"],[209,21,208,19],[209,25,208,23],[210,8,209,6],[210,12,209,10],[210,13,209,11,"_receiveSignal"],[210,27,209,25],[210,28,209,26,"RESPONDER_RELEASE"],[210,45,209,43],[210,47,209,45,"event"],[210,52,209,50],[210,53,209,51],[211,6,210,4],[211,7,210,5],[212,6,211,4],[212,10,211,8,"keyupHandler"],[212,22,211,20],[212,25,211,23,"event"],[212,30,211,28],[212,34,211,32],[213,8,212,6],[213,12,212,10,"onPress"],[213,19,212,17],[213,22,212,20],[213,26,212,24],[213,27,212,25,"_config"],[213,34,212,32],[213,35,212,33,"onPress"],[213,42,212,40],[214,8,213,6],[214,12,213,10,"target"],[214,18,213,16],[214,21,213,19,"event"],[214,26,213,24],[214,27,213,25,"target"],[214,33,213,31],[215,8,214,6],[215,12,214,10],[215,16,214,14],[215,17,214,15,"_touchState"],[215,28,214,26],[215,33,214,31,"NOT_RESPONDER"],[215,46,214,44],[215,50,214,48,"isValidKeyPress"],[215,65,214,63],[215,66,214,64,"event"],[215,71,214,69],[215,72,214,70],[215,74,214,72],[216,10,215,8,"end"],[216,13,215,11],[216,14,215,12,"event"],[216,19,215,17],[216,20,215,18],[217,10,216,8,"document"],[217,18,216,16],[217,19,216,17,"removeEventListener"],[217,38,216,36],[217,39,216,37],[217,46,216,44],[217,48,216,46,"keyupHandler"],[217,60,216,58],[217,61,216,59],[218,10,217,8],[218,14,217,12,"role"],[218,18,217,16],[218,21,217,19,"target"],[218,27,217,25],[218,28,217,26,"getAttribute"],[218,40,217,38],[218,41,217,39],[218,47,217,45],[218,48,217,46],[219,10,218,8],[219,14,218,12,"elementType"],[219,25,218,23],[219,28,218,26,"getElementType"],[219,42,218,40],[219,43,218,41,"target"],[219,49,218,47],[219,50,218,48],[220,10,219,8],[220,14,219,12,"isNativeInteractiveElement"],[220,40,219,38],[220,43,219,41,"role"],[220,47,219,45],[220,52,219,50],[220,58,219,56],[220,62,219,60,"elementType"],[220,73,219,71],[220,78,219,76],[220,81,219,79],[220,85,219,83,"elementType"],[220,96,219,94],[220,101,219,99],[220,109,219,107],[220,113,219,111,"elementType"],[220,124,219,122],[220,129,219,127],[220,136,219,134],[220,140,219,138,"elementType"],[220,151,219,149],[220,156,219,154],[220,164,219,162],[220,168,219,166,"elementType"],[220,179,219,177],[220,184,219,182],[220,194,219,192],[221,10,220,8],[221,14,220,12,"isActiveElement"],[221,29,220,27],[221,32,220,30],[221,36,220,34],[221,37,220,35,"_responderElement"],[221,54,220,52],[221,59,220,57,"target"],[221,65,220,63],[222,10,221,8],[222,14,221,12,"onPress"],[222,21,221,19],[222,25,221,23],[222,29,221,27],[222,33,221,31],[222,34,221,32,"isNativeInteractiveElement"],[222,60,221,58],[222,64,221,62,"isActiveElement"],[222,79,221,77],[222,81,221,79],[223,12,222,10,"onPress"],[223,19,222,17],[223,20,222,18,"event"],[223,25,222,23],[223,26,222,24],[224,10,223,8],[225,10,224,8],[225,14,224,12],[225,15,224,13,"_responderElement"],[225,32,224,30],[225,35,224,33],[225,39,224,37],[226,8,225,6],[227,6,226,4],[227,7,226,5],[228,6,227,4],[228,13,227,11],[229,8,228,6,"onStartShouldSetResponder"],[229,33,228,31],[229,35,228,33,"event"],[229,40,228,38],[229,44,228,42],[230,10,229,8],[230,14,229,12,"disabled"],[230,22,229,20],[230,25,229,23],[230,29,229,27],[230,30,229,28,"_config"],[230,37,229,35],[230,38,229,36,"disabled"],[230,46,229,44],[231,10,230,8],[231,14,230,12,"disabled"],[231,22,230,20],[231,26,230,24,"isButtonRole"],[231,38,230,36],[231,39,230,37,"event"],[231,44,230,42],[231,45,230,43,"currentTarget"],[231,58,230,56],[231,59,230,57],[231,61,230,59],[232,12,231,10,"event"],[232,17,231,15],[232,18,231,16,"stopPropagation"],[232,33,231,31],[232,34,231,32],[232,35,231,33],[233,10,232,8],[234,10,233,8],[234,14,233,12,"disabled"],[234,22,233,20],[234,26,233,24],[234,30,233,28],[234,32,233,30],[235,12,234,10],[235,19,234,17],[235,23,234,21],[236,10,235,8],[237,10,236,8],[237,17,236,15],[237,18,236,16,"disabled"],[237,26,236,24],[238,8,237,6],[238,9,237,7],[239,8,238,6,"onKeyDown"],[239,17,238,15],[239,19,238,17,"event"],[239,24,238,22],[239,28,238,26],[240,10,239,8],[240,14,239,12,"disabled"],[240,22,239,20],[240,25,239,23],[240,29,239,27],[240,30,239,28,"_config"],[240,37,239,35],[240,38,239,36,"disabled"],[240,46,239,44],[241,10,240,8],[241,14,240,12,"key"],[241,17,240,15],[241,20,240,18,"event"],[241,25,240,23],[241,26,240,24,"key"],[241,29,240,27],[242,12,241,10,"target"],[242,18,241,16],[242,21,241,19,"event"],[242,26,241,24],[242,27,241,25,"target"],[242,33,241,31],[243,10,242,8],[243,14,242,12],[243,15,242,13,"disabled"],[243,23,242,21],[243,27,242,25,"isValidKeyPress"],[243,42,242,40],[243,43,242,41,"event"],[243,48,242,46],[243,49,242,47],[243,51,242,49],[244,12,243,10],[244,16,243,14],[244,20,243,18],[244,21,243,19,"_touchState"],[244,32,243,30],[244,37,243,35,"NOT_RESPONDER"],[244,50,243,48],[244,52,243,50],[245,14,244,12,"start"],[245,19,244,17],[245,20,244,18,"event"],[245,25,244,23],[245,27,244,25],[245,32,244,30],[245,33,244,31],[246,14,245,12],[246,18,245,16],[246,19,245,17,"_responderElement"],[246,36,245,34],[246,39,245,37,"target"],[246,45,245,43],[247,14,246,12],[248,14,247,12],[249,14,248,12,"document"],[249,22,248,20],[249,23,248,21,"addEventListener"],[249,39,248,37],[249,40,248,38],[249,47,248,45],[249,49,248,47,"keyupHandler"],[249,61,248,59],[249,62,248,60],[250,12,249,10],[251,12,250,10],[251,16,250,14,"isSpacebarKey"],[251,29,250,27],[251,32,250,30,"key"],[251,35,250,33],[251,40,250,38],[251,43,250,41],[251,47,250,45,"key"],[251,50,250,48],[251,55,250,53],[251,65,250,63],[252,12,251,10],[252,16,251,14,"role"],[252,20,251,18],[252,23,251,21,"getElementRole"],[252,37,251,35],[252,38,251,36,"target"],[252,44,251,42],[252,45,251,43],[253,12,252,10],[253,16,252,14,"isButtonLikeRole"],[253,32,252,30],[253,35,252,33,"role"],[253,39,252,37],[253,44,252,42],[253,52,252,50],[253,56,252,54,"role"],[253,60,252,58],[253,65,252,63],[253,75,252,73],[254,12,253,10],[254,16,253,14,"isSpacebarKey"],[254,29,253,27],[254,33,253,31,"isButtonLikeRole"],[254,49,253,47],[254,53,253,51,"getElementType"],[254,67,253,65],[254,68,253,66,"target"],[254,74,253,72],[254,75,253,73],[254,80,253,78],[254,88,253,86],[254,90,253,88],[255,14,254,12],[256,14,255,12,"event"],[256,19,255,17],[256,20,255,18,"preventDefault"],[256,34,255,32],[256,35,255,33],[256,36,255,34],[257,12,256,10],[258,12,257,10,"event"],[258,17,257,15],[258,18,257,16,"stopPropagation"],[258,33,257,31],[258,34,257,32],[258,35,257,33],[259,10,258,8],[260,8,259,6],[260,9,259,7],[261,8,260,6,"onResponderGrant"],[261,24,260,22],[261,26,260,24,"event"],[261,31,260,29],[261,35,260,33,"start"],[261,40,260,38],[261,41,260,39,"event"],[261,46,260,44],[261,47,260,45],[262,8,261,6,"onResponderMove"],[262,23,261,21],[262,25,261,23,"event"],[262,30,261,28],[262,34,261,32],[263,10,262,8],[263,14,262,12],[263,18,262,16],[263,19,262,17,"_config"],[263,26,262,24],[263,27,262,25,"onPressMove"],[263,38,262,36],[263,42,262,40],[263,46,262,44],[263,48,262,46],[264,12,263,10],[264,16,263,14],[264,17,263,15,"_config"],[264,24,263,22],[264,25,263,23,"onPressMove"],[264,36,263,34],[264,37,263,35,"event"],[264,42,263,40],[264,43,263,41],[265,10,264,8],[266,10,265,8],[266,14,265,12,"touch"],[266,19,265,17],[266,22,265,20,"getTouchFromResponderEvent"],[266,48,265,46],[266,49,265,47,"event"],[266,54,265,52],[266,55,265,53],[267,10,266,8],[267,14,266,12],[267,18,266,16],[267,19,266,17,"_touchActivatePosition"],[267,41,266,39],[267,45,266,43],[267,49,266,47],[267,51,266,49],[268,12,267,10],[268,16,267,14,"deltaX"],[268,22,267,20],[268,25,267,23],[268,29,267,27],[268,30,267,28,"_touchActivatePosition"],[268,52,267,50],[268,53,267,51,"pageX"],[268,58,267,56],[268,61,267,59,"touch"],[268,66,267,64],[268,67,267,65,"pageX"],[268,72,267,70],[269,12,268,10],[269,16,268,14,"deltaY"],[269,22,268,20],[269,25,268,23],[269,29,268,27],[269,30,268,28,"_touchActivatePosition"],[269,52,268,50],[269,53,268,51,"pageY"],[269,58,268,56],[269,61,268,59,"touch"],[269,66,268,64],[269,67,268,65,"pageY"],[269,72,268,70],[270,12,269,10],[270,16,269,14,"Math"],[270,20,269,18],[270,21,269,19,"hypot"],[270,26,269,24],[270,27,269,25,"deltaX"],[270,33,269,31],[270,35,269,33,"deltaY"],[270,41,269,39],[270,42,269,40],[270,45,269,43],[270,47,269,45],[270,49,269,47],[271,14,270,12],[271,18,270,16],[271,19,270,17,"_cancelLongPressDelayTimeout"],[271,47,270,45],[271,48,270,46],[271,49,270,47],[272,12,271,10],[273,10,272,8],[274,8,273,6],[274,9,273,7],[275,8,274,6,"onResponderRelease"],[275,26,274,24],[275,28,274,26,"event"],[275,33,274,31],[275,37,274,35,"end"],[275,40,274,38],[275,41,274,39,"event"],[275,46,274,44],[275,47,274,45],[276,8,275,6,"onResponderTerminate"],[276,28,275,26],[276,30,275,28,"event"],[276,35,275,33],[276,39,275,37],[277,10,276,8],[277,14,276,12,"event"],[277,19,276,17],[277,20,276,18,"nativeEvent"],[277,31,276,29],[277,32,276,30,"type"],[277,36,276,34],[277,41,276,39],[277,58,276,56],[277,60,276,58],[278,12,277,10],[278,16,277,14],[278,17,277,15,"_selectionTerminated"],[278,37,277,35],[278,40,277,38],[278,44,277,42],[279,10,278,8],[280,10,279,8],[280,14,279,12],[280,15,279,13,"_receiveSignal"],[280,29,279,27],[280,30,279,28,"RESPONDER_TERMINATED"],[280,50,279,48],[280,52,279,50,"event"],[280,57,279,55],[280,58,279,56],[281,8,280,6],[281,9,280,7],[282,8,281,6,"onResponderTerminationRequest"],[282,37,281,35],[282,39,281,37,"event"],[282,44,281,42],[282,48,281,46],[283,10,282,8],[283,14,282,12,"_this$_config"],[283,27,282,25],[283,30,282,28],[283,34,282,32],[283,35,282,33,"_config"],[283,42,282,40],[284,12,283,10,"cancelable"],[284,22,283,20],[284,25,283,23,"_this$_config"],[284,38,283,36],[284,39,283,37,"cancelable"],[284,49,283,47],[285,12,284,10,"disabled"],[285,20,284,18],[285,23,284,21,"_this$_config"],[285,36,284,34],[285,37,284,35,"disabled"],[285,45,284,43],[286,12,285,10,"onLongPress"],[286,23,285,21],[286,26,285,24,"_this$_config"],[286,39,285,37],[286,40,285,38,"onLongPress"],[286,51,285,49],[287,10,286,8],[288,10,287,8],[289,10,288,8],[289,14,288,12],[289,15,288,13,"disabled"],[289,23,288,21],[289,27,288,25,"onLongPress"],[289,38,288,36],[289,42,288,40],[289,46,288,44],[289,50,288,48],[289,54,288,52],[289,55,288,53,"_isPointerTouch"],[289,70,288,68],[289,74,288,72,"event"],[289,79,288,77],[289,80,288,78,"nativeEvent"],[289,91,288,89],[289,92,288,90,"type"],[289,96,288,94],[289,101,288,99],[289,114,288,112],[289,116,288,114],[290,12,289,10],[290,19,289,17],[290,24,289,22],[291,10,290,8],[292,10,291,8],[292,14,291,12,"cancelable"],[292,24,291,22],[292,28,291,26],[292,32,291,30],[292,34,291,32],[293,12,292,10],[293,19,292,17],[293,23,292,21],[294,10,293,8],[295,10,294,8],[295,17,294,15,"cancelable"],[295,27,294,25],[296,8,295,6],[296,9,295,7],[297,8,296,6],[298,8,297,6],[299,8,298,6],[300,8,299,6],[301,8,300,6],[302,8,301,6],[303,8,302,6],[304,8,303,6],[305,8,304,6,"onClick"],[305,15,304,13],[305,17,304,15,"event"],[305,22,304,20],[305,26,304,24],[306,10,305,8],[306,14,305,12,"_this$_config2"],[306,28,305,26],[306,31,305,29],[306,35,305,33],[306,36,305,34,"_config"],[306,43,305,41],[307,12,306,10,"disabled"],[307,20,306,18],[307,23,306,21,"_this$_config2"],[307,37,306,35],[307,38,306,36,"disabled"],[307,46,306,44],[308,12,307,10,"onPress"],[308,19,307,17],[308,22,307,20,"_this$_config2"],[308,36,307,34],[308,37,307,35,"onPress"],[308,44,307,42],[309,10,308,8],[309,14,308,12],[309,15,308,13,"disabled"],[309,23,308,21],[309,25,308,23],[310,12,309,10],[311,12,310,10],[312,12,311,10],[313,12,312,10,"event"],[313,17,312,15],[313,18,312,16,"stopPropagation"],[313,33,312,31],[313,34,312,32],[313,35,312,33],[314,12,313,10],[314,16,313,14],[314,20,313,18],[314,21,313,19,"_longPressDispatched"],[314,41,313,39],[314,45,313,43],[314,49,313,47],[314,50,313,48,"_selectionTerminated"],[314,70,313,68],[314,72,313,70],[315,14,314,12,"event"],[315,19,314,17],[315,20,314,18,"preventDefault"],[315,34,314,32],[315,35,314,33],[315,36,314,34],[316,12,315,10],[316,13,315,11],[316,19,315,17],[316,23,315,21,"onPress"],[316,30,315,28],[316,34,315,32],[316,38,315,36],[316,42,315,40,"event"],[316,47,315,45],[316,48,315,46,"altKey"],[316,54,315,52],[316,59,315,57],[316,64,315,62],[316,66,315,64],[317,14,316,12,"onPress"],[317,21,316,19],[317,22,316,20,"event"],[317,27,316,25],[317,28,316,26],[318,12,317,10],[319,10,318,8],[319,11,318,9],[319,17,318,15],[320,12,319,10],[320,16,319,14,"isButtonRole"],[320,28,319,26],[320,29,319,27,"event"],[320,34,319,32],[320,35,319,33,"currentTarget"],[320,48,319,46],[320,49,319,47],[320,51,319,49],[321,14,320,12,"event"],[321,19,320,17],[321,20,320,18,"stopPropagation"],[321,35,320,33],[321,36,320,34],[321,37,320,35],[322,12,321,10],[323,10,322,8],[324,8,323,6],[324,9,323,7],[325,8,324,6],[326,8,325,6],[327,8,326,6,"onContextMenu"],[327,21,326,19],[327,23,326,21,"event"],[327,28,326,26],[327,32,326,30],[328,10,327,8],[328,14,327,12,"_this$_config3"],[328,28,327,26],[328,31,327,29],[328,35,327,33],[328,36,327,34,"_config"],[328,43,327,41],[329,12,328,10,"disabled"],[329,20,328,18],[329,23,328,21,"_this$_config3"],[329,37,328,35],[329,38,328,36,"disabled"],[329,46,328,44],[330,12,329,10,"onLongPress"],[330,23,329,21],[330,26,329,24,"_this$_config3"],[330,40,329,38],[330,41,329,39,"onLongPress"],[330,52,329,50],[331,10,330,8],[331,14,330,12],[331,15,330,13,"disabled"],[331,23,330,21],[331,25,330,23],[332,12,331,10],[332,16,331,14,"onLongPress"],[332,27,331,25],[332,31,331,29],[332,35,331,33],[332,39,331,37],[332,43,331,41],[332,44,331,42,"_isPointerTouch"],[332,59,331,57],[332,63,331,61],[332,64,331,62,"event"],[332,69,331,67],[332,70,331,68,"defaultPrevented"],[332,86,331,84],[332,88,331,86],[333,14,332,12,"event"],[333,19,332,17],[333,20,332,18,"preventDefault"],[333,34,332,32],[333,35,332,33],[333,36,332,34],[334,14,333,12,"event"],[334,19,333,17],[334,20,333,18,"stopPropagation"],[334,35,333,33],[334,36,333,34],[334,37,333,35],[335,12,334,10],[336,10,335,8],[336,11,335,9],[336,17,335,15],[337,12,336,10],[337,16,336,14,"isButtonRole"],[337,28,336,26],[337,29,336,27,"event"],[337,34,336,32],[337,35,336,33,"currentTarget"],[337,48,336,46],[337,49,336,47],[337,51,336,49],[338,14,337,12,"event"],[338,19,337,17],[338,20,337,18,"stopPropagation"],[338,35,337,33],[338,36,337,34],[338,37,337,35],[339,12,338,10],[340,10,339,8],[341,8,340,6],[342,6,341,4],[342,7,341,5],[343,4,342,2],[345,4,344,2],[346,0,345,0],[347,0,346,0],[348,0,347,0],[349,4,348,2,"_receiveSignal"],[349,18,348,16,"_receiveSignal"],[349,19,348,17,"signal"],[349,25,348,23],[349,27,348,25,"event"],[349,32,348,30],[349,34,348,32],[350,6,349,4],[350,10,349,8,"prevState"],[350,19,349,17],[350,22,349,20],[350,26,349,24],[350,27,349,25,"_touchState"],[350,38,349,36],[351,6,350,4],[351,10,350,8,"nextState"],[351,19,350,17],[351,22,350,20],[351,26,350,24],[352,6,351,4],[352,10,351,8,"Transitions"],[352,21,351,19],[352,22,351,20,"prevState"],[352,31,351,29],[352,32,351,30],[352,36,351,34],[352,40,351,38],[352,42,351,40],[353,8,352,6,"nextState"],[353,17,352,15],[353,20,352,18,"Transitions"],[353,31,352,29],[353,32,352,30,"prevState"],[353,41,352,39],[353,42,352,40],[353,43,352,41,"signal"],[353,49,352,47],[353,50,352,48],[354,6,353,4],[355,6,354,4],[355,10,354,8],[355,14,354,12],[355,15,354,13,"_touchState"],[355,26,354,24],[355,31,354,29,"NOT_RESPONDER"],[355,44,354,42],[355,48,354,46,"signal"],[355,54,354,52],[355,59,354,57,"RESPONDER_RELEASE"],[355,76,354,74],[355,78,354,76],[356,8,355,6],[357,6,356,4],[358,6,357,4],[358,10,357,8,"nextState"],[358,19,357,17],[358,23,357,21],[358,27,357,25],[358,31,357,29,"nextState"],[358,40,357,38],[358,45,357,43,"ERROR"],[358,50,357,48],[358,52,357,50],[359,8,358,6,"console"],[359,15,358,13],[359,16,358,14,"error"],[359,21,358,19],[359,22,358,20],[359,55,358,53],[359,58,358,56,"signal"],[359,64,358,62],[359,67,358,65],[359,80,358,78],[359,83,358,81,"prevState"],[359,92,358,90],[359,95,358,93],[359,110,358,108],[359,111,358,109],[360,6,359,4],[360,7,359,5],[360,13,359,11],[360,17,359,15,"prevState"],[360,26,359,24],[360,31,359,29,"nextState"],[360,40,359,38],[360,42,359,40],[361,8,360,6],[361,12,360,10],[361,13,360,11,"_performTransitionSideEffects"],[361,42,360,40],[361,43,360,41,"prevState"],[361,52,360,50],[361,54,360,52,"nextState"],[361,63,360,61],[361,65,360,63,"signal"],[361,71,360,69],[361,73,360,71,"event"],[361,78,360,76],[361,79,360,77],[362,8,361,6],[362,12,361,10],[362,13,361,11,"_touchState"],[362,24,361,22],[362,27,361,25,"nextState"],[362,36,361,34],[363,6,362,4],[364,4,363,2],[366,4,365,2],[367,0,366,0],[368,0,367,0],[369,0,368,0],[370,4,369,2,"_performTransitionSideEffects"],[370,33,369,31,"_performTransitionSideEffects"],[370,34,369,32,"prevState"],[370,43,369,41],[370,45,369,43,"nextState"],[370,54,369,52],[370,56,369,54,"signal"],[370,62,369,60],[370,64,369,62,"event"],[370,69,369,67],[370,71,369,69],[371,6,370,4],[371,10,370,8,"isTerminalSignal"],[371,26,370,24],[371,27,370,25,"signal"],[371,33,370,31],[371,34,370,32],[371,36,370,34],[372,8,371,6],[373,8,372,6],[374,8,373,6],[375,8,374,6,"setTimeout"],[375,18,374,16],[375,19,374,17],[375,25,374,23],[376,10,375,8],[376,14,375,12],[376,15,375,13,"_isPointerTouch"],[376,30,375,28],[376,33,375,31],[376,38,375,36],[377,8,376,6],[377,9,376,7],[377,11,376,9],[377,12,376,10],[377,13,376,11],[378,8,377,6],[378,12,377,10],[378,13,377,11,"_touchActivatePosition"],[378,35,377,33],[378,38,377,36],[378,42,377,40],[379,8,378,6],[379,12,378,10],[379,13,378,11,"_cancelLongPressDelayTimeout"],[379,41,378,39],[379,42,378,40],[379,43,378,41],[380,6,379,4],[381,6,380,4],[381,10,380,8,"isPressStartSignal"],[381,28,380,26],[381,29,380,27,"prevState"],[381,38,380,36],[381,39,380,37],[381,43,380,41,"signal"],[381,49,380,47],[381,54,380,52,"LONG_PRESS_DETECTED"],[381,73,380,71],[381,75,380,73],[382,8,381,6],[382,12,381,10,"onLongPress"],[382,23,381,21],[382,26,381,24],[382,30,381,28],[382,31,381,29,"_config"],[382,38,381,36],[382,39,381,37,"onLongPress"],[382,50,381,48],[383,8,382,6],[384,8,383,6],[385,8,384,6],[385,12,384,10,"onLongPress"],[385,23,384,21],[385,27,384,25],[385,31,384,29],[385,35,384,33,"event"],[385,40,384,38],[385,41,384,39,"nativeEvent"],[385,52,384,50],[385,53,384,51,"key"],[385,56,384,54],[385,60,384,58],[385,64,384,62],[385,66,384,64],[386,10,385,8,"onLongPress"],[386,21,385,19],[386,22,385,20,"event"],[386,27,385,25],[386,28,385,26],[387,10,386,8],[387,14,386,12],[387,15,386,13,"_longPressDispatched"],[387,35,386,33],[387,38,386,36],[387,42,386,40],[388,8,387,6],[389,6,388,4],[390,6,389,4],[390,10,389,8,"isPrevActive"],[390,22,389,20],[390,25,389,23,"isActiveSignal"],[390,39,389,37],[390,40,389,38,"prevState"],[390,49,389,47],[390,50,389,48],[391,6,390,4],[391,10,390,8,"isNextActive"],[391,22,390,20],[391,25,390,23,"isActiveSignal"],[391,39,390,37],[391,40,390,38,"nextState"],[391,49,390,47],[391,50,390,48],[392,6,391,4],[392,10,391,8],[392,11,391,9,"isPrevActive"],[392,23,391,21],[392,27,391,25,"isNextActive"],[392,39,391,37],[392,41,391,39],[393,8,392,6],[393,12,392,10],[393,13,392,11,"_activate"],[393,22,392,20],[393,23,392,21,"event"],[393,28,392,26],[393,29,392,27],[394,6,393,4],[394,7,393,5],[394,13,393,11],[394,17,393,15,"isPrevActive"],[394,29,393,27],[394,33,393,31],[394,34,393,32,"isNextActive"],[394,46,393,44],[394,48,393,46],[395,8,394,6],[395,12,394,10],[395,13,394,11,"_deactivate"],[395,24,394,22],[395,25,394,23,"event"],[395,30,394,28],[395,31,394,29],[396,6,395,4],[397,6,396,4],[397,10,396,8,"isPressStartSignal"],[397,28,396,26],[397,29,396,27,"prevState"],[397,38,396,36],[397,39,396,37],[397,43,396,41,"signal"],[397,49,396,47],[397,54,396,52,"RESPONDER_RELEASE"],[397,71,396,69],[397,73,396,71],[398,8,397,6],[398,12,397,10,"_this$_config4"],[398,26,397,24],[398,29,397,27],[398,33,397,31],[398,34,397,32,"_config"],[398,41,397,39],[399,10,398,8,"_onLongPress"],[399,22,398,20],[399,25,398,23,"_this$_config4"],[399,39,398,37],[399,40,398,38,"onLongPress"],[399,51,398,49],[400,10,399,8,"onPress"],[400,17,399,15],[400,20,399,18,"_this$_config4"],[400,34,399,32],[400,35,399,33,"onPress"],[400,42,399,40],[401,8,400,6],[401,12,400,10,"onPress"],[401,19,400,17],[401,23,400,21],[401,27,400,25],[401,29,400,27],[402,10,401,8],[402,14,401,12,"isPressCanceledByLongPress"],[402,40,401,38],[402,43,401,41,"_onLongPress"],[402,55,401,53],[402,59,401,57],[402,63,401,61],[402,67,401,65,"prevState"],[402,76,401,74],[402,81,401,79,"RESPONDER_ACTIVE_LONG_PRESS_START"],[402,114,401,112],[403,10,402,8],[403,14,402,12],[403,15,402,13,"isPressCanceledByLongPress"],[403,41,402,39],[403,43,402,41],[404,12,403,10],[405,12,404,10],[405,16,404,14],[405,17,404,15,"isNextActive"],[405,29,404,27],[405,33,404,31],[405,34,404,32,"isPrevActive"],[405,46,404,44],[405,48,404,46],[406,14,405,12],[406,18,405,16],[406,19,405,17,"_activate"],[406,28,405,26],[406,29,405,27,"event"],[406,34,405,32],[406,35,405,33],[407,14,406,12],[407,18,406,16],[407,19,406,17,"_deactivate"],[407,30,406,28],[407,31,406,29,"event"],[407,36,406,34],[407,37,406,35],[408,12,407,10],[409,10,408,8],[410,8,409,6],[411,6,410,4],[412,6,411,4],[412,10,411,8],[412,11,411,9,"_cancelPressDelayTimeout"],[412,35,411,33],[412,36,411,34],[412,37,411,35],[413,4,412,2],[414,4,413,2,"_activate"],[414,13,413,11,"_activate"],[414,14,413,12,"event"],[414,19,413,17],[414,21,413,19],[415,6,414,4],[415,10,414,8,"_this$_config5"],[415,24,414,22],[415,27,414,25],[415,31,414,29],[415,32,414,30,"_config"],[415,39,414,37],[416,8,415,6,"onPressChange"],[416,21,415,19],[416,24,415,22,"_this$_config5"],[416,38,415,36],[416,39,415,37,"onPressChange"],[416,52,415,50],[417,8,416,6,"onPressStart"],[417,20,416,18],[417,23,416,21,"_this$_config5"],[417,37,416,35],[417,38,416,36,"onPressStart"],[417,50,416,48],[418,6,417,4],[418,10,417,8,"touch"],[418,15,417,13],[418,18,417,16,"getTouchFromResponderEvent"],[418,44,417,42],[418,45,417,43,"event"],[418,50,417,48],[418,51,417,49],[419,6,418,4],[419,10,418,8],[419,11,418,9,"_touchActivatePosition"],[419,33,418,31],[419,36,418,34],[420,8,419,6,"pageX"],[420,13,419,11],[420,15,419,13,"touch"],[420,20,419,18],[420,21,419,19,"pageX"],[420,26,419,24],[421,8,420,6,"pageY"],[421,13,420,11],[421,15,420,13,"touch"],[421,20,420,18],[421,21,420,19,"pageY"],[422,6,421,4],[422,7,421,5],[423,6,422,4],[423,10,422,8,"onPressStart"],[423,22,422,20],[423,26,422,24],[423,30,422,28],[423,32,422,30],[424,8,423,6,"onPressStart"],[424,20,423,18],[424,21,423,19,"event"],[424,26,423,24],[424,27,423,25],[425,6,424,4],[426,6,425,4],[426,10,425,8,"onPressChange"],[426,23,425,21],[426,27,425,25],[426,31,425,29],[426,33,425,31],[427,8,426,6,"onPressChange"],[427,21,426,19],[427,22,426,20],[427,26,426,24],[427,27,426,25],[428,6,427,4],[429,4,428,2],[430,4,429,2,"_deactivate"],[430,15,429,13,"_deactivate"],[430,16,429,14,"event"],[430,21,429,19],[430,23,429,21],[431,6,430,4],[431,10,430,8,"_this$_config6"],[431,24,430,22],[431,27,430,25],[431,31,430,29],[431,32,430,30,"_config"],[431,39,430,37],[432,8,431,6,"onPressChange"],[432,21,431,19],[432,24,431,22,"_this$_config6"],[432,38,431,36],[432,39,431,37,"onPressChange"],[432,52,431,50],[433,8,432,6,"onPressEnd"],[433,18,432,16],[433,21,432,19,"_this$_config6"],[433,35,432,33],[433,36,432,34,"onPressEnd"],[433,46,432,44],[434,6,433,4],[434,15,433,13,"end"],[434,18,433,16,"end"],[434,19,433,16],[434,21,433,19],[435,8,434,6],[435,12,434,10,"onPressEnd"],[435,22,434,20],[435,26,434,24],[435,30,434,28],[435,32,434,30],[436,10,435,8,"onPressEnd"],[436,20,435,18],[436,21,435,19,"event"],[436,26,435,24],[436,27,435,25],[437,8,436,6],[438,8,437,6],[438,12,437,10,"onPressChange"],[438,25,437,23],[438,29,437,27],[438,33,437,31],[438,35,437,33],[439,10,438,8,"onPressChange"],[439,23,438,21],[439,24,438,22],[439,29,438,27],[439,30,438,28],[440,8,439,6],[441,6,440,4],[442,6,441,4],[442,10,441,8,"delayPressEnd"],[442,23,441,21],[442,26,441,24,"normalizeDelay"],[442,40,441,38],[442,41,441,39],[442,45,441,43],[442,46,441,44,"_config"],[442,53,441,51],[442,54,441,52,"delayPressEnd"],[442,67,441,65],[442,68,441,66],[443,6,442,4],[443,10,442,8,"delayPressEnd"],[443,23,442,21],[443,26,442,24],[443,27,442,25],[443,29,442,27],[444,8,443,6],[444,12,443,10],[444,13,443,11,"_pressOutDelayTimeout"],[444,34,443,32],[444,37,443,35,"setTimeout"],[444,47,443,45],[444,48,443,46],[444,54,443,52],[445,10,444,8,"end"],[445,13,444,11],[445,14,444,12],[445,15,444,13],[446,8,445,6],[446,9,445,7],[446,11,445,9,"delayPressEnd"],[446,24,445,22],[446,25,445,23],[447,6,446,4],[447,7,446,5],[447,13,446,11],[448,8,447,6,"end"],[448,11,447,9],[448,12,447,10],[448,13,447,11],[449,6,448,4],[450,4,449,2],[451,4,450,2,"_handleLongPress"],[451,20,450,18,"_handleLongPress"],[451,21,450,19,"event"],[451,26,450,24],[451,28,450,26],[452,6,451,4],[452,10,451,8],[452,14,451,12],[452,15,451,13,"_touchState"],[452,26,451,24],[452,31,451,29,"RESPONDER_ACTIVE_PRESS_START"],[452,59,451,57],[452,63,451,61],[452,67,451,65],[452,68,451,66,"_touchState"],[452,79,451,77],[452,84,451,82,"RESPONDER_ACTIVE_LONG_PRESS_START"],[452,117,451,115],[452,119,451,117],[453,8,452,6],[453,12,452,10],[453,13,452,11,"_receiveSignal"],[453,27,452,25],[453,28,452,26,"LONG_PRESS_DETECTED"],[453,47,452,45],[453,49,452,47,"event"],[453,54,452,52],[453,55,452,53],[454,6,453,4],[455,4,454,2],[456,4,455,2,"_cancelLongPressDelayTimeout"],[456,32,455,30,"_cancelLongPressDelayTimeout"],[456,33,455,30],[456,35,455,33],[457,6,456,4],[457,10,456,8],[457,14,456,12],[457,15,456,13,"_longPressDelayTimeout"],[457,37,456,35],[457,41,456,39],[457,45,456,43],[457,47,456,45],[458,8,457,6,"clearTimeout"],[458,20,457,18],[458,21,457,19],[458,25,457,23],[458,26,457,24,"_longPressDelayTimeout"],[458,48,457,46],[458,49,457,47],[459,8,458,6],[459,12,458,10],[459,13,458,11,"_longPressDelayTimeout"],[459,35,458,33],[459,38,458,36],[459,42,458,40],[460,6,459,4],[461,4,460,2],[462,4,461,2,"_cancelPressDelayTimeout"],[462,28,461,26,"_cancelPressDelayTimeout"],[462,29,461,26],[462,31,461,29],[463,6,462,4],[463,10,462,8],[463,14,462,12],[463,15,462,13,"_pressDelayTimeout"],[463,33,462,31],[463,37,462,35],[463,41,462,39],[463,43,462,41],[464,8,463,6,"clearTimeout"],[464,20,463,18],[464,21,463,19],[464,25,463,23],[464,26,463,24,"_pressDelayTimeout"],[464,44,463,42],[464,45,463,43],[465,8,464,6],[465,12,464,10],[465,13,464,11,"_pressDelayTimeout"],[465,31,464,29],[465,34,464,32],[465,38,464,36],[466,6,465,4],[467,4,466,2],[468,4,467,2,"_cancelPressOutDelayTimeout"],[468,31,467,29,"_cancelPressOutDelayTimeout"],[468,32,467,29],[468,34,467,32],[469,6,468,4],[469,10,468,8],[469,14,468,12],[469,15,468,13,"_pressOutDelayTimeout"],[469,36,468,34],[469,40,468,38],[469,44,468,42],[469,46,468,44],[470,8,469,6,"clearTimeout"],[470,20,469,18],[470,21,469,19],[470,25,469,23],[470,26,469,24,"_pressOutDelayTimeout"],[470,47,469,45],[470,48,469,46],[471,8,470,6],[471,12,470,10],[471,13,470,11,"_pressOutDelayTimeout"],[471,34,470,32],[471,37,470,35],[471,41,470,39],[472,6,471,4],[473,4,472,2],[474,2,473,0],[475,2,474,0,"exports"],[475,9,474,7],[475,10,474,8,"default"],[475,17,474,15],[475,20,474,18,"PressResponder"],[475,34,474,32],[476,2,475,0],[476,11,475,9,"normalizeDelay"],[476,25,475,23,"normalizeDelay"],[476,26,475,24,"delay"],[476,31,475,29],[476,33,475,31,"min"],[476,36,475,34],[476,38,475,36,"fallback"],[476,46,475,44],[476,48,475,46],[477,4,476,2],[477,8,476,6,"min"],[477,11,476,9],[477,16,476,14],[477,21,476,19],[477,22,476,20],[477,24,476,22],[478,6,477,4,"min"],[478,9,477,7],[478,12,477,10],[478,13,477,11],[479,4,478,2],[480,4,479,2],[480,8,479,6,"fallback"],[480,16,479,14],[480,21,479,19],[480,26,479,24],[480,27,479,25],[480,29,479,27],[481,6,480,4,"fallback"],[481,14,480,12],[481,17,480,15],[481,18,480,16],[482,4,481,2],[483,4,482,2],[483,11,482,9,"Math"],[483,15,482,13],[483,16,482,14,"max"],[483,19,482,17],[483,20,482,18,"min"],[483,23,482,21],[483,25,482,23,"delay"],[483,30,482,28],[483,35,482,33],[483,39,482,37],[483,43,482,41,"delay"],[483,48,482,46],[483,53,482,51],[483,58,482,56],[483,59,482,57],[483,62,482,60,"delay"],[483,67,482,65],[483,70,482,68,"fallback"],[483,78,482,76],[483,79,482,77],[484,2,483,0],[485,2,484,0],[485,11,484,9,"getTouchFromResponderEvent"],[485,37,484,35,"getTouchFromResponderEvent"],[485,38,484,36,"event"],[485,43,484,41],[485,45,484,43],[486,4,485,2],[486,8,485,6,"_event$nativeEvent"],[486,26,485,24],[486,29,485,27,"event"],[486,34,485,32],[486,35,485,33,"nativeEvent"],[486,46,485,44],[487,6,486,4,"changedTouches"],[487,20,486,18],[487,23,486,21,"_event$nativeEvent"],[487,41,486,39],[487,42,486,40,"changedTouches"],[487,56,486,54],[488,6,487,4,"touches"],[488,13,487,11],[488,16,487,14,"_event$nativeEvent"],[488,34,487,32],[488,35,487,33,"touches"],[488,42,487,40],[489,4,488,2],[489,8,488,6,"touches"],[489,15,488,13],[489,19,488,17],[489,23,488,21],[489,27,488,25,"touches"],[489,34,488,32],[489,35,488,33,"length"],[489,41,488,39],[489,44,488,42],[489,45,488,43],[489,47,488,45],[490,6,489,4],[490,13,489,11,"touches"],[490,20,489,18],[490,21,489,19],[490,22,489,20],[490,23,489,21],[491,4,490,2],[492,4,491,2],[492,8,491,6,"changedTouches"],[492,22,491,20],[492,26,491,24],[492,30,491,28],[492,34,491,32,"changedTouches"],[492,48,491,46],[492,49,491,47,"length"],[492,55,491,53],[492,58,491,56],[492,59,491,57],[492,61,491,59],[493,6,492,4],[493,13,492,11,"changedTouches"],[493,27,492,25],[493,28,492,26],[493,29,492,27],[493,30,492,28],[494,4,493,2],[495,4,494,2],[495,11,494,9,"event"],[495,16,494,14],[495,17,494,15,"nativeEvent"],[495,28,494,26],[496,2,495,0],[497,2,496,0,"module"],[497,8,496,6],[497,9,496,7,"exports"],[497,16,496,14],[497,19,496,17,"exports"],[497,26,496,24],[497,27,496,25,"default"],[497,34,496,32],[498,0,496,33],[498,3]],"functionMap":{"names":["<global>","getElementRole","getElementType","isActiveSignal","isButtonRole","isPressStartSignal","isTerminalSignal","isValidKeyPress","PressResponder","constructor","configure","reset","getEventHandlers","_createEventHandlers","start","setTimeout$argument_0","end","keyupHandler","onStartShouldSetResponder","onKeyDown","onResponderGrant","onResponderMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onClick","onContextMenu","_receiveSignal","_performTransitionSideEffects","_activate","_deactivate","_handleLongPress","_cancelLongPressDelayTimeout","_cancelPressDelayTimeout","_cancelPressOutDelayTimeout","normalizeDelay","getTouchFromResponderEvent"],"mappings":"AAA;qBC6D,uCD;qBEC,wCF;qBGC,iGH;mBIC,+CJ;yBKC,8IL;uBMC,yEN;sBOC;CPM;AQ8E;ECC;GDU;EEC;GFE;EGK;GHI;EIK;GJK;EKC;gBCC;6CCU;SDE;+CCK;ODE;KDC;cGC;KHE;uBIC;KJe;iCKE;OLS;iBMC;ONqB;wBOC,qBP;uBQC;ORY;0BSC,mBT;4BUC;OVK;qCWC;OXc;eYS;OZmB;qBaG;Obc;GLE;EmBM;GnBe;EoBM;iBbK;OaE;GpBoC;EqBC;GrBe;EsBC;IdI;KcO;8CfG;OeE;GtBI;EuBC;GvBI;EwBC;GxBK;EyBC;GzBK;E0BC;G1BK;CRC;AmCE;CnCQ;AoCC;CpCW"},"hasCjsExports":true},"type":"js/module"}]}