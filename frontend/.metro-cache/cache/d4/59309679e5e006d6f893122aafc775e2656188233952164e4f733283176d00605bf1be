{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":29,"index":254},"end":{"line":13,"column":84,"index":309}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"../../../exports/InteractionManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":49,"index":421},"end":{"line":16,"column":95,"index":467}}],"key":"YEq8oxgDO+OiwzomPPrXw2nm8a0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.default = void 0;\n  var _InteractionManager = _interopRequireDefault(require(_dependencyMap[1], \"../../../exports/InteractionManager\"));\n  /**\n   * A simple class for batching up invocations of a low-pri callback. A timeout is set to run the\n   * callback once after a delay, no matter how many times it's scheduled. Once the delay is reached,\n   * InteractionManager.runAfterInteractions is used to invoke the callback after any hi-pri\n   * interactions are done running.\n   *\n   * Make sure to cleanup with dispose().  Example:\n   *\n   *   class Widget extends React.Component {\n   *     _batchedSave: new Batchinator(() => this._saveState, 1000);\n   *     _saveSate() {\n   *       // save this.state to disk\n   *     }\n   *     componentDidUpdate() {\n   *       this._batchedSave.schedule();\n   *     }\n   *     componentWillUnmount() {\n   *       this._batchedSave.dispose();\n   *     }\n   *     ...\n   *   }\n   */\n  class Batchinator {\n    constructor(callback, delayMS) {\n      this._delay = delayMS;\n      this._callback = callback;\n    }\n    /*\n     * Cleanup any pending tasks.\n     *\n     * By default, if there is a pending task the callback is run immediately. Set the option abort to\n     * true to not call the callback if it was pending.\n     */\n    dispose(options) {\n      if (options === void 0) {\n        options = {\n          abort: false\n        };\n      }\n      if (this._taskHandle) {\n        this._taskHandle.cancel();\n        if (!options.abort) {\n          this._callback();\n        }\n        this._taskHandle = null;\n      }\n    }\n    schedule() {\n      if (this._taskHandle) {\n        return;\n      }\n      var timeoutHandle = setTimeout(() => {\n        this._taskHandle = _InteractionManager.default.runAfterInteractions(() => {\n          // Note that we clear the handle before invoking the callback so that if the callback calls\n          // schedule again, it will actually schedule another task.\n          this._taskHandle = null;\n          this._callback();\n        });\n      }, this._delay);\n      this._taskHandle = {\n        cancel: () => clearTimeout(timeoutHandle)\n      };\n    }\n  }\n  var _default = exports.default = Batchinator;\n  module.exports = exports.default;\n});","lineCount":84,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[14,6,13,4,"_interopRequireDefault"],[14,28,13,26],[14,31,13,29,"require"],[14,38,13,36],[14,39,13,36,"_dependencyMap"],[14,53,13,36],[14,104,13,83],[14,105,13,84],[14,106,13,85,"default"],[14,113,13,92],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"__esModule"],[15,20,14,18],[15,23,14,21],[15,27,14,25],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"default"],[16,17,15,15],[16,20,15,18],[16,25,15,23],[16,26,15,24],[17,2,16,0],[17,6,16,4,"_InteractionManager"],[17,25,16,23],[17,28,16,26,"_interopRequireDefault"],[17,50,16,48],[17,51,16,49,"require"],[17,58,16,56],[17,59,16,56,"_dependencyMap"],[17,73,16,56],[17,115,16,94],[17,116,16,95],[17,117,16,96],[18,2,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,2,39,0],[40,8,39,6,"Batchinator"],[40,19,39,17],[40,20,39,18],[41,4,40,2,"constructor"],[41,15,40,13,"constructor"],[41,16,40,14,"callback"],[41,24,40,22],[41,26,40,24,"delayMS"],[41,33,40,31],[41,35,40,33],[42,6,41,4],[42,10,41,8],[42,11,41,9,"_delay"],[42,17,41,15],[42,20,41,18,"delayMS"],[42,27,41,25],[43,6,42,4],[43,10,42,8],[43,11,42,9,"_callback"],[43,20,42,18],[43,23,42,21,"callback"],[43,31,42,29],[44,4,43,2],[45,4,44,2],[46,0,45,0],[47,0,46,0],[48,0,47,0],[49,0,48,0],[50,0,49,0],[51,4,50,2,"dispose"],[51,11,50,9,"dispose"],[51,12,50,10,"options"],[51,19,50,17],[51,21,50,19],[52,6,51,4],[52,10,51,8,"options"],[52,17,51,15],[52,22,51,20],[52,27,51,25],[52,28,51,26],[52,30,51,28],[53,8,52,6,"options"],[53,15,52,13],[53,18,52,16],[54,10,53,8,"abort"],[54,15,53,13],[54,17,53,15],[55,8,54,6],[55,9,54,7],[56,6,55,4],[57,6,56,4],[57,10,56,8],[57,14,56,12],[57,15,56,13,"_taskHandle"],[57,26,56,24],[57,28,56,26],[58,8,57,6],[58,12,57,10],[58,13,57,11,"_taskHandle"],[58,24,57,22],[58,25,57,23,"cancel"],[58,31,57,29],[58,32,57,30],[58,33,57,31],[59,8,58,6],[59,12,58,10],[59,13,58,11,"options"],[59,20,58,18],[59,21,58,19,"abort"],[59,26,58,24],[59,28,58,26],[60,10,59,8],[60,14,59,12],[60,15,59,13,"_callback"],[60,24,59,22],[60,25,59,23],[60,26,59,24],[61,8,60,6],[62,8,61,6],[62,12,61,10],[62,13,61,11,"_taskHandle"],[62,24,61,22],[62,27,61,25],[62,31,61,29],[63,6,62,4],[64,4,63,2],[65,4,64,2,"schedule"],[65,12,64,10,"schedule"],[65,13,64,10],[65,15,64,13],[66,6,65,4],[66,10,65,8],[66,14,65,12],[66,15,65,13,"_taskHandle"],[66,26,65,24],[66,28,65,26],[67,8,66,6],[68,6,67,4],[69,6,68,4],[69,10,68,8,"timeoutHandle"],[69,23,68,21],[69,26,68,24,"setTimeout"],[69,36,68,34],[69,37,68,35],[69,43,68,41],[70,8,69,6],[70,12,69,10],[70,13,69,11,"_taskHandle"],[70,24,69,22],[70,27,69,25,"_InteractionManager"],[70,46,69,44],[70,47,69,45,"default"],[70,54,69,52],[70,55,69,53,"runAfterInteractions"],[70,75,69,73],[70,76,69,74],[70,82,69,80],[71,10,70,8],[72,10,71,8],[73,10,72,8],[73,14,72,12],[73,15,72,13,"_taskHandle"],[73,26,72,24],[73,29,72,27],[73,33,72,31],[74,10,73,8],[74,14,73,12],[74,15,73,13,"_callback"],[74,24,73,22],[74,25,73,23],[74,26,73,24],[75,8,74,6],[75,9,74,7],[75,10,74,8],[76,6,75,4],[76,7,75,5],[76,9,75,7],[76,13,75,11],[76,14,75,12,"_delay"],[76,20,75,18],[76,21,75,19],[77,6,76,4],[77,10,76,8],[77,11,76,9,"_taskHandle"],[77,22,76,20],[77,25,76,23],[78,8,77,6,"cancel"],[78,14,77,12],[78,16,77,14,"cancel"],[78,17,77,14],[78,22,77,20,"clearTimeout"],[78,34,77,32],[78,35,77,33,"timeoutHandle"],[78,48,77,46],[79,6,78,4],[79,7,78,5],[80,4,79,2],[81,2,80,0],[82,2,81,0],[82,6,81,4,"_default"],[82,14,81,12],[82,17,81,15,"exports"],[82,24,81,22],[82,25,81,23,"default"],[82,32,81,30],[82,35,81,33,"Batchinator"],[82,46,81,44],[83,2,82,0,"module"],[83,8,82,6],[83,9,82,7,"exports"],[83,16,82,14],[83,19,82,17,"exports"],[83,26,82,24],[83,27,82,25,"default"],[83,34,82,32],[84,0,82,33],[84,3]],"functionMap":{"names":["<global>","Batchinator","Batchinator#constructor","Batchinator#dispose","Batchinator#schedule","setTimeout$argument_0","_InteractionManager._default.runAfterInteractions$argument_0","_taskHandle.cancel"],"mappings":"AAA;ACsC;ECC;GDG;EEO;GFa;EGC;mCCI;0ECC;ODK;KDC;cGE,iCH;GHE;CDC"},"hasCjsExports":true},"type":"js/module"}]}