{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useViewDimensions = useViewDimensions;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  const getLayoutValue = key => event => event?.nativeEvent?.layout?.[key] ?? 0;\n  /**\n   * Retrieves View dimensions (height, width) from a LayoutChangeEvent and sets them on state\n   */\n  function useViewDimensions({\n    heightOffset = 0,\n    widthOffset = 0\n  } = {}) {\n    const [height, setHeight] = React.default.useState(0);\n    const [width, setWidth] = React.default.useState(0);\n    const computeViewDimensions = React.default.useCallback(event => {\n      const h = getLayoutValue('height')(event);\n      const w = getLayoutValue('width')(event);\n      setHeight(h + heightOffset);\n      setWidth(w + widthOffset);\n    }, [heightOffset, widthOffset]);\n    return {\n      computeViewDimensions,\n      height,\n      width\n    };\n  }\n});","lineCount":37,"map":[[12,2,6,0,"exports"],[12,9,6,0],[12,10,6,0,"useViewDimensions"],[12,27,6,0],[12,30,6,0,"useViewDimensions"],[12,47,6,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,1,0],[14,6,1,0,"React"],[14,11,1,0],[14,14,1,0,"_interopDefault"],[14,29,1,0],[14,30,1,0,"_react"],[14,36,1,0],[15,2,2,0],[15,8,2,6,"getLayoutValue"],[15,22,2,20],[15,25,2,24,"key"],[15,28,2,27],[15,32,2,33,"event"],[15,37,2,38],[15,41,2,43,"event"],[15,46,2,48],[15,48,2,50,"nativeEvent"],[15,59,2,61],[15,61,2,63,"layout"],[15,67,2,69],[15,70,2,72,"key"],[15,73,2,75],[15,74,2,76],[15,78,2,80],[15,79,2,81],[16,2,3,0],[17,0,4,0],[18,0,5,0],[19,2,6,7],[19,11,6,16,"useViewDimensions"],[19,28,6,33,"useViewDimensions"],[19,29,6,34],[20,4,6,36,"heightOffset"],[20,16,6,48],[20,19,6,51],[20,20,6,52],[21,4,6,54,"widthOffset"],[21,15,6,65],[21,18,6,68],[22,2,6,70],[22,3,6,71],[22,6,6,74],[22,7,6,75],[22,8,6,76],[22,10,6,78],[23,4,7,4],[23,10,7,10],[23,11,7,11,"height"],[23,17,7,17],[23,19,7,19,"setHeight"],[23,28,7,28],[23,29,7,29],[23,32,7,32,"React"],[23,37,7,37],[23,38,7,37,"default"],[23,45,7,37],[23,46,7,38,"useState"],[23,54,7,46],[23,55,7,47],[23,56,7,48],[23,57,7,49],[24,4,8,4],[24,10,8,10],[24,11,8,11,"width"],[24,16,8,16],[24,18,8,18,"setWidth"],[24,26,8,26],[24,27,8,27],[24,30,8,30,"React"],[24,35,8,35],[24,36,8,35,"default"],[24,43,8,35],[24,44,8,36,"useState"],[24,52,8,44],[24,53,8,45],[24,54,8,46],[24,55,8,47],[25,4,9,4],[25,10,9,10,"computeViewDimensions"],[25,31,9,31],[25,34,9,34,"React"],[25,39,9,39],[25,40,9,39,"default"],[25,47,9,39],[25,48,9,40,"useCallback"],[25,59,9,51],[25,60,9,53,"event"],[25,65,9,58],[25,69,9,63],[26,6,10,8],[26,12,10,14,"h"],[26,13,10,15],[26,16,10,18,"getLayoutValue"],[26,30,10,32],[26,31,10,33],[26,39,10,41],[26,40,10,42],[26,41,10,43,"event"],[26,46,10,48],[26,47,10,49],[27,6,11,8],[27,12,11,14,"w"],[27,13,11,15],[27,16,11,18,"getLayoutValue"],[27,30,11,32],[27,31,11,33],[27,38,11,40],[27,39,11,41],[27,40,11,42,"event"],[27,45,11,47],[27,46,11,48],[28,6,12,8,"setHeight"],[28,15,12,17],[28,16,12,18,"h"],[28,17,12,19],[28,20,12,22,"heightOffset"],[28,32,12,34],[28,33,12,35],[29,6,13,8,"setWidth"],[29,14,13,16],[29,15,13,17,"w"],[29,16,13,18],[29,19,13,21,"widthOffset"],[29,30,13,32],[29,31,13,33],[30,4,14,4],[30,5,14,5],[30,7,14,7],[30,8,14,8,"heightOffset"],[30,20,14,20],[30,22,14,22,"widthOffset"],[30,33,14,33],[30,34,14,34],[30,35,14,35],[31,4,15,4],[31,11,15,11],[32,6,16,8,"computeViewDimensions"],[32,27,16,29],[33,6,17,8,"height"],[33,12,17,14],[34,6,18,8,"width"],[35,4,19,4],[35,5,19,5],[36,2,20,0],[37,0,20,1],[37,3]],"functionMap":{"names":["<global>","getLayoutValue","<anonymous>","useViewDimensions","computeViewDimensions"],"mappings":"AAA;uBCC,SC,iDF;OGI;oDCG;KDK;CHM"},"hasCjsExports":false},"type":"js/module"}]}