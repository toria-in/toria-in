{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":26,"index":26}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/exports/PanResponder","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"NacIK8K4Ix298JTjZY1MHzOjiV0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.startShouldSetPanResponder = startShouldSetPanResponder;\n  exports.moveShouldSetPanResponder = moveShouldSetPanResponder;\n  exports.shouldDismissView = shouldDismissView;\n  exports.usePanResponder = usePanResponder;\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopDefault(_react);\n  var _reactNativeWebDistExportsPanResponder = require(_dependencyMap[1], \"react-native-web/dist/exports/PanResponder\");\n  var PanResponder = _interopDefault(_reactNativeWebDistExportsPanResponder);\n  function startShouldSetPanResponder() {\n    return true;\n  }\n  function moveShouldSetPanResponder(_event, gesture) {\n    const {\n      dx,\n      dy\n    } = gesture;\n    // Fixes onPress handler\n    // https://github.com/calintamas/react-native-toast-message/issues/113\n    const offset = 2;\n    return Math.abs(dx) > offset || Math.abs(dy) > offset;\n  }\n  function shouldDismissView(newAnimatedValue, gesture) {\n    const dismissThreshold = 0.65;\n    const {\n      vy,\n      dy\n    } = gesture;\n    return newAnimatedValue <= dismissThreshold || Math.abs(vy) >= dismissThreshold && dy < 0;\n  }\n  function usePanResponder({\n    animatedValue,\n    computeNewAnimatedValueForGesture,\n    onDismiss,\n    onRestore,\n    onStart,\n    onEnd,\n    disable\n  }) {\n    const onGrant = React.default.useCallback(() => {\n      if (disable) return;\n      onStart();\n    }, [onStart, disable]);\n    const onMove = React.default.useCallback((_event, gesture) => {\n      if (disable) return;\n      const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n      animatedValue.current?.setValue(newAnimatedValue);\n    }, [animatedValue, computeNewAnimatedValueForGesture, disable]);\n    const onRelease = React.default.useCallback((_event, gesture) => {\n      if (disable) return;\n      const newAnimatedValue = computeNewAnimatedValueForGesture(gesture);\n      onEnd();\n      if (shouldDismissView(newAnimatedValue, gesture)) {\n        onDismiss();\n      } else {\n        onRestore();\n      }\n    }, [computeNewAnimatedValueForGesture, onEnd, onDismiss, onRestore, disable]);\n    const panResponder = React.default.useMemo(() => PanResponder.default.create({\n      onStartShouldSetPanResponder: startShouldSetPanResponder,\n      onPanResponderGrant: onGrant,\n      onMoveShouldSetPanResponder: moveShouldSetPanResponder,\n      onMoveShouldSetPanResponderCapture: moveShouldSetPanResponder,\n      onPanResponderMove: onMove,\n      onPanResponderRelease: onRelease\n    }), [onMove, onRelease, onGrant]);\n    return {\n      panResponder,\n      onGrant,\n      onMove,\n      onRelease\n    };\n  }\n});","lineCount":84,"map":[[12,2,3,0,"exports"],[12,9,3,0],[12,10,3,0,"startShouldSetPanResponder"],[12,36,3,0],[12,39,3,0,"startShouldSetPanResponder"],[12,65,3,0],[13,2,6,0,"exports"],[13,9,6,0],[13,10,6,0,"moveShouldSetPanResponder"],[13,35,6,0],[13,38,6,0,"moveShouldSetPanResponder"],[13,63,6,0],[14,2,13,0,"exports"],[14,9,13,0],[14,10,13,0,"shouldDismissView"],[14,27,13,0],[14,30,13,0,"shouldDismissView"],[14,47,13,0],[15,2,19,0,"exports"],[15,9,19,0],[15,10,19,0,"usePanResponder"],[15,25,19,0],[15,28,19,0,"usePanResponder"],[15,43,19,0],[16,2,1,0],[16,6,1,0,"_react"],[16,12,1,0],[16,15,1,0,"require"],[16,22,1,0],[16,23,1,0,"_dependencyMap"],[16,37,1,0],[17,2,1,0],[17,6,1,0,"React"],[17,11,1,0],[17,14,1,0,"_interopDefault"],[17,29,1,0],[17,30,1,0,"_react"],[17,36,1,0],[18,2,1,26],[18,6,1,26,"_reactNativeWebDistExportsPanResponder"],[18,44,1,26],[18,47,1,26,"require"],[18,54,1,26],[18,55,1,26,"_dependencyMap"],[18,69,1,26],[19,2,1,26],[19,6,1,26,"PanResponder"],[19,18,1,26],[19,21,1,26,"_interopDefault"],[19,36,1,26],[19,37,1,26,"_reactNativeWebDistExportsPanResponder"],[19,75,1,26],[20,2,3,7],[20,11,3,16,"startShouldSetPanResponder"],[20,37,3,42,"startShouldSetPanResponder"],[20,38,3,42],[20,40,3,45],[21,4,4,4],[21,11,4,11],[21,15,4,15],[22,2,5,0],[23,2,6,7],[23,11,6,16,"moveShouldSetPanResponder"],[23,36,6,41,"moveShouldSetPanResponder"],[23,37,6,42,"_event"],[23,43,6,48],[23,45,6,50,"gesture"],[23,52,6,57],[23,54,6,59],[24,4,7,4],[24,10,7,10],[25,6,7,12,"dx"],[25,8,7,14],[26,6,7,16,"dy"],[27,4,7,19],[27,5,7,20],[27,8,7,23,"gesture"],[27,15,7,30],[28,4,8,4],[29,4,9,4],[30,4,10,4],[30,10,10,10,"offset"],[30,16,10,16],[30,19,10,19],[30,20,10,20],[31,4,11,4],[31,11,11,11,"Math"],[31,15,11,15],[31,16,11,16,"abs"],[31,19,11,19],[31,20,11,20,"dx"],[31,22,11,22],[31,23,11,23],[31,26,11,26,"offset"],[31,32,11,32],[31,36,11,36,"Math"],[31,40,11,40],[31,41,11,41,"abs"],[31,44,11,44],[31,45,11,45,"dy"],[31,47,11,47],[31,48,11,48],[31,51,11,51,"offset"],[31,57,11,57],[32,2,12,0],[33,2,13,7],[33,11,13,16,"shouldDismissView"],[33,28,13,33,"shouldDismissView"],[33,29,13,34,"newAnimatedValue"],[33,45,13,50],[33,47,13,52,"gesture"],[33,54,13,59],[33,56,13,61],[34,4,14,4],[34,10,14,10,"dismissThreshold"],[34,26,14,26],[34,29,14,29],[34,33,14,33],[35,4,15,4],[35,10,15,10],[36,6,15,12,"vy"],[36,8,15,14],[37,6,15,16,"dy"],[38,4,15,19],[38,5,15,20],[38,8,15,23,"gesture"],[38,15,15,30],[39,4,16,4],[39,11,16,12,"newAnimatedValue"],[39,27,16,28],[39,31,16,32,"dismissThreshold"],[39,47,16,48],[39,51,17,9,"Math"],[39,55,17,13],[39,56,17,14,"abs"],[39,59,17,17],[39,60,17,18,"vy"],[39,62,17,20],[39,63,17,21],[39,67,17,25,"dismissThreshold"],[39,83,17,41],[39,87,17,45,"dy"],[39,89,17,47],[39,92,17,50],[39,93,17,52],[40,2,18,0],[41,2,19,7],[41,11,19,16,"usePanResponder"],[41,26,19,31,"usePanResponder"],[41,27,19,32],[42,4,19,34,"animatedValue"],[42,17,19,47],[43,4,19,49,"computeNewAnimatedValueForGesture"],[43,37,19,82],[44,4,19,84,"onDismiss"],[44,13,19,93],[45,4,19,95,"onRestore"],[45,13,19,104],[46,4,19,106,"onStart"],[46,11,19,113],[47,4,19,115,"onEnd"],[47,9,19,120],[48,4,19,122,"disable"],[49,2,19,130],[49,3,19,131],[49,5,19,133],[50,4,20,4],[50,10,20,10,"onGrant"],[50,17,20,17],[50,20,20,20,"React"],[50,25,20,25],[50,26,20,25,"default"],[50,33,20,25],[50,34,20,26,"useCallback"],[50,45,20,37],[50,46,20,38],[50,52,20,44],[51,6,21,8],[51,10,21,12,"disable"],[51,17,21,19],[51,19,22,12],[52,6,23,8,"onStart"],[52,13,23,15],[52,14,23,16],[52,15,23,17],[53,4,24,4],[53,5,24,5],[53,7,24,7],[53,8,24,8,"onStart"],[53,15,24,15],[53,17,24,17,"disable"],[53,24,24,24],[53,25,24,25],[53,26,24,26],[54,4,25,4],[54,10,25,10,"onMove"],[54,16,25,16],[54,19,25,19,"React"],[54,24,25,24],[54,25,25,24,"default"],[54,32,25,24],[54,33,25,25,"useCallback"],[54,44,25,36],[54,45,25,37],[54,46,25,38,"_event"],[54,52,25,44],[54,54,25,46,"gesture"],[54,61,25,53],[54,66,25,58],[55,6,26,8],[55,10,26,12,"disable"],[55,17,26,19],[55,19,27,12],[56,6,28,8],[56,12,28,14,"newAnimatedValue"],[56,28,28,30],[56,31,28,33,"computeNewAnimatedValueForGesture"],[56,64,28,66],[56,65,28,67,"gesture"],[56,72,28,74],[56,73,28,75],[57,6,29,8,"animatedValue"],[57,19,29,21],[57,20,29,22,"current"],[57,27,29,29],[57,29,29,31,"setValue"],[57,37,29,39],[57,38,29,40,"newAnimatedValue"],[57,54,29,56],[57,55,29,57],[58,4,30,4],[58,5,30,5],[58,7,30,7],[58,8,30,8,"animatedValue"],[58,21,30,21],[58,23,30,23,"computeNewAnimatedValueForGesture"],[58,56,30,56],[58,58,30,58,"disable"],[58,65,30,65],[58,66,30,66],[58,67,30,67],[59,4,31,4],[59,10,31,10,"onRelease"],[59,19,31,19],[59,22,31,22,"React"],[59,27,31,27],[59,28,31,27,"default"],[59,35,31,27],[59,36,31,28,"useCallback"],[59,47,31,39],[59,48,31,40],[59,49,31,41,"_event"],[59,55,31,47],[59,57,31,49,"gesture"],[59,64,31,56],[59,69,31,61],[60,6,32,8],[60,10,32,12,"disable"],[60,17,32,19],[60,19,33,12],[61,6,34,8],[61,12,34,14,"newAnimatedValue"],[61,28,34,30],[61,31,34,33,"computeNewAnimatedValueForGesture"],[61,64,34,66],[61,65,34,67,"gesture"],[61,72,34,74],[61,73,34,75],[62,6,35,8,"onEnd"],[62,11,35,13],[62,12,35,14],[62,13,35,15],[63,6,36,8],[63,10,36,12,"shouldDismissView"],[63,27,36,29],[63,28,36,30,"newAnimatedValue"],[63,44,36,46],[63,46,36,48,"gesture"],[63,53,36,55],[63,54,36,56],[63,56,36,58],[64,8,37,12,"onDismiss"],[64,17,37,21],[64,18,37,22],[64,19,37,23],[65,6,38,8],[65,7,38,9],[65,13,39,13],[66,8,40,12,"onRestore"],[66,17,40,21],[66,18,40,22],[66,19,40,23],[67,6,41,8],[68,4,42,4],[68,5,42,5],[68,7,42,7],[68,8,42,8,"computeNewAnimatedValueForGesture"],[68,41,42,41],[68,43,42,43,"onEnd"],[68,48,42,48],[68,50,42,50,"onDismiss"],[68,59,42,59],[68,61,42,61,"onRestore"],[68,70,42,70],[68,72,42,72,"disable"],[68,79,42,79],[68,80,42,80],[68,81,42,81],[69,4,43,4],[69,10,43,10,"panResponder"],[69,22,43,22],[69,25,43,25,"React"],[69,30,43,30],[69,31,43,30,"default"],[69,38,43,30],[69,39,43,31,"useMemo"],[69,46,43,38],[69,47,43,39],[69,53,43,45,"PanResponder"],[69,65,43,57],[69,66,43,57,"default"],[69,73,43,57],[69,74,43,58,"create"],[69,80,43,64],[69,81,43,65],[70,6,44,8,"onStartShouldSetPanResponder"],[70,34,44,36],[70,36,44,38,"startShouldSetPanResponder"],[70,62,44,64],[71,6,45,8,"onPanResponderGrant"],[71,25,45,27],[71,27,45,29,"onGrant"],[71,34,45,36],[72,6,46,8,"onMoveShouldSetPanResponder"],[72,33,46,35],[72,35,46,37,"moveShouldSetPanResponder"],[72,60,46,62],[73,6,47,8,"onMoveShouldSetPanResponderCapture"],[73,40,47,42],[73,42,47,44,"moveShouldSetPanResponder"],[73,67,47,69],[74,6,48,8,"onPanResponderMove"],[74,24,48,26],[74,26,48,28,"onMove"],[74,32,48,34],[75,6,49,8,"onPanResponderRelease"],[75,27,49,29],[75,29,49,31,"onRelease"],[76,4,50,4],[76,5,50,5],[76,6,50,6],[76,8,50,8],[76,9,50,9,"onMove"],[76,15,50,15],[76,17,50,17,"onRelease"],[76,26,50,26],[76,28,50,28,"onGrant"],[76,35,50,35],[76,36,50,36],[76,37,50,37],[77,4,51,4],[77,11,51,11],[78,6,52,8,"panResponder"],[78,18,52,20],[79,6,53,8,"onGrant"],[79,13,53,15],[80,6,54,8,"onMove"],[80,12,54,14],[81,6,55,8,"onRelease"],[82,4,56,4],[82,5,56,5],[83,2,57,0],[84,0,57,1],[84,3]],"functionMap":{"names":["<global>","startShouldSetPanResponder","moveShouldSetPanResponder","shouldDismissView","usePanResponder","onGrant","onMove","onRelease","React.useMemo$argument_0"],"mappings":"AAA;OCE;CDE;OEC;CFM;OGC;CHK;OIC;sCCC;KDI;qCEC;KFK;wCGC;KHW;uCIC;MJO;CJO"},"hasCjsExports":false},"type":"js/module"}]}