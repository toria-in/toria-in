{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":32,"index":555},"end":{"line":12,"column":48,"index":571}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n  'use client';\n\n  var __importDefault = this && this.__importDefault || function (mod) {\n    return mod && mod.__esModule ? mod : {\n      \"default\": mod\n    };\n  };\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isModalPresentation = isModalPresentation;\n  exports.isTransparentModalPresentation = isTransparentModalPresentation;\n  exports.useIsDesktop = useIsDesktop;\n  exports.convertStackStateToNonModalState = convertStackStateToNonModalState;\n  exports.findLastNonModalIndex = findLastNonModalIndex;\n  const react_1 = __importDefault(require(_dependencyMap[0], \"react\"));\n  /**\n   * Helper to determine if a given screen should be treated as a modal-type presentation\n   *\n   * @param options - The navigation options.\n   * @returns Whether the screen should be treated as a modal-type presentation.\n   *\n   * @internal\n   */\n  function isModalPresentation(options) {\n    const presentation = options?.presentation;\n    return presentation === 'modal' || presentation === 'formSheet' || presentation === 'fullScreenModal' || presentation === 'containedModal' || presentation === 'transparentModal' || presentation === 'containedTransparentModal';\n  }\n  /**\n   * Helper to determine if a given screen should be treated as a transparent modal-type presentation\n   *\n   * @param options - The navigation options.\n   * @returns Whether the screen should be treated as a transparent modal-type presentation.\n   *\n   * @internal\n   */\n  function isTransparentModalPresentation(options) {\n    const presentation = options?.presentation;\n    return presentation === 'transparentModal' || presentation === 'containedTransparentModal';\n  }\n  /**\n   * SSR-safe viewport detection: initial render always returns `false` so that\n   * server and client markup match. The actual media query evaluation happens\n   * after mount.\n   *\n   * @internal\n   */\n  function useIsDesktop(breakpoint = 768) {\n    const isWeb = true;\n    // Ensure server-side and initial client render agree (mobile first).\n    const [isDesktop, setIsDesktop] = react_1.default.useState(false);\n    react_1.default.useEffect(() => {\n      if (!isWeb || true) return;\n      const mql = window.matchMedia(`(min-width: ${breakpoint}px)`);\n      const listener = e => setIsDesktop(e.matches);\n      // Update immediately after mount\n      setIsDesktop(mql.matches);\n      mql.addEventListener('change', listener);\n      return () => mql.removeEventListener('change', listener);\n    }, [breakpoint, isWeb]);\n    return isDesktop;\n  }\n  /**\n   * Returns a copy of the given Stack navigation state with any modal-type routes removed\n   * (only when running on the web) and a recalculated `index` that still points at the\n   * currently active non-modal route. If the active route *is* a modal that gets\n   * filtered out, we fall back to the last remaining route – this matches the logic\n   * used inside `ModalStackView` so that the underlying `NativeStackView` never tries\n   * to render a modal screen that is simultaneously being shown in the overlay.\n   *\n   * This helper is exported primarily for unit-testing; it should be considered\n   * internal to `ModalStack.web` and not a public API.\n   *\n   * @param state - The navigation state.\n   * @param descriptors - The navigation descriptors.\n   * @param isWeb - Whether the current platform is web.\n   * @returns The navigation state with any modal-type routes removed.\n   *\n   * @internal\n   */\n  function convertStackStateToNonModalState(state, descriptors, isWeb) {\n    if (!isWeb) {\n      return {\n        routes: state.routes,\n        index: state.index\n      };\n    }\n    // Remove every modal-type route from the stack on web.\n    const routes = state.routes.filter(route => {\n      return !isModalPresentation(descriptors[route.key].options);\n    });\n    // Recalculate the active index so it still points at the same non-modal route, or –\n    // if that route was filtered out – at the last remaining route.\n    let index = routes.findIndex(r => r.key === state.routes[state.index]?.key);\n    if (index < 0) {\n      index = routes.length > 0 ? routes.length - 1 : 0;\n    }\n    return {\n      routes,\n      index\n    };\n  }\n  /**\n   * Returns the index of the last route in the stack that is *not* a modal.\n   *\n   * @param state - The navigation state.\n   * @param descriptors - The navigation descriptors.\n   * @returns The index of the last non-modal route.\n   *\n   * @internal\n   */\n  function findLastNonModalIndex(state, descriptors) {\n    // Iterate backwards through the stack to find the last non-modal route.\n    for (let i = state.routes.length - 1; i >= 0; i--) {\n      if (!isModalPresentation(descriptors[state.routes[i].key].options)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n});","lineCount":123,"map":[[2,2,1,0],[2,14,1,12],[3,2,2,0],[3,14,2,12],[5,2,3,0],[5,6,3,4,"__importDefault"],[5,21,3,19],[5,24,3,23],[5,28,3,27],[5,32,3,31],[5,36,3,35],[5,37,3,36,"__importDefault"],[5,52,3,51],[5,56,3,56],[5,66,3,66,"mod"],[5,69,3,69],[5,71,3,71],[6,4,4,4],[6,11,4,12,"mod"],[6,14,4,15],[6,18,4,19,"mod"],[6,21,4,22],[6,22,4,23,"__esModule"],[6,32,4,33],[6,35,4,37,"mod"],[6,38,4,40],[6,41,4,43],[7,6,4,45],[7,15,4,54],[7,17,4,56,"mod"],[8,4,4,60],[8,5,4,61],[9,2,5,0],[9,3,5,1],[10,2,6,0,"Object"],[10,8,6,6],[10,9,6,7,"defineProperty"],[10,23,6,21],[10,24,6,22,"exports"],[10,31,6,29],[10,33,6,31],[10,45,6,43],[10,47,6,45],[11,4,6,47,"value"],[11,9,6,52],[11,11,6,54],[12,2,6,59],[12,3,6,60],[12,4,6,61],[13,2,7,0,"exports"],[13,9,7,7],[13,10,7,8,"isModalPresentation"],[13,29,7,27],[13,32,7,30,"isModalPresentation"],[13,51,7,49],[14,2,8,0,"exports"],[14,9,8,7],[14,10,8,8,"isTransparentModalPresentation"],[14,40,8,38],[14,43,8,41,"isTransparentModalPresentation"],[14,73,8,71],[15,2,9,0,"exports"],[15,9,9,7],[15,10,9,8,"useIsDesktop"],[15,22,9,20],[15,25,9,23,"useIsDesktop"],[15,37,9,35],[16,2,10,0,"exports"],[16,9,10,7],[16,10,10,8,"convertStackStateToNonModalState"],[16,42,10,40],[16,45,10,43,"convertStackStateToNonModalState"],[16,77,10,75],[17,2,11,0,"exports"],[17,9,11,7],[17,10,11,8,"findLastNonModalIndex"],[17,31,11,29],[17,34,11,32,"findLastNonModalIndex"],[17,55,11,53],[18,2,12,0],[18,8,12,6,"react_1"],[18,15,12,13],[18,18,12,16,"__importDefault"],[18,33,12,31],[18,34,12,32,"require"],[18,41,12,39],[18,42,12,39,"_dependencyMap"],[18,56,12,39],[18,68,12,47],[18,69,12,48],[18,70,12,49],[19,2,13,0],[20,0,14,0],[21,0,15,0],[22,0,16,0],[23,0,17,0],[24,0,18,0],[25,0,19,0],[26,0,20,0],[27,2,21,0],[27,11,21,9,"isModalPresentation"],[27,30,21,28,"isModalPresentation"],[27,31,21,29,"options"],[27,38,21,36],[27,40,21,38],[28,4,22,4],[28,10,22,10,"presentation"],[28,22,22,22],[28,25,22,25,"options"],[28,32,22,32],[28,34,22,34,"presentation"],[28,46,22,46],[29,4,23,4],[29,11,23,12,"presentation"],[29,23,23,24],[29,28,23,29],[29,35,23,36],[29,39,24,8,"presentation"],[29,51,24,20],[29,56,24,25],[29,67,24,36],[29,71,25,8,"presentation"],[29,83,25,20],[29,88,25,25],[29,105,25,42],[29,109,26,8,"presentation"],[29,121,26,20],[29,126,26,25],[29,142,26,41],[29,146,27,8,"presentation"],[29,158,27,20],[29,163,27,25],[29,181,27,43],[29,185,28,8,"presentation"],[29,197,28,20],[29,202,28,25],[29,229,28,52],[30,2,29,0],[31,2,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,2,38,0],[39,11,38,9,"isTransparentModalPresentation"],[39,41,38,39,"isTransparentModalPresentation"],[39,42,38,40,"options"],[39,49,38,47],[39,51,38,49],[40,4,39,4],[40,10,39,10,"presentation"],[40,22,39,22],[40,25,39,25,"options"],[40,32,39,32],[40,34,39,34,"presentation"],[40,46,39,46],[41,4,40,4],[41,11,40,11,"presentation"],[41,23,40,23],[41,28,40,28],[41,46,40,46],[41,50,40,50,"presentation"],[41,62,40,62],[41,67,40,67],[41,94,40,94],[42,2,41,0],[43,2,42,0],[44,0,43,0],[45,0,44,0],[46,0,45,0],[47,0,46,0],[48,0,47,0],[49,0,48,0],[50,2,49,0],[50,11,49,9,"useIsDesktop"],[50,23,49,21,"useIsDesktop"],[50,24,49,22,"breakpoint"],[50,34,49,32],[50,37,49,35],[50,40,49,38],[50,42,49,40],[51,4,50,4],[51,10,50,10,"isWeb"],[51,15,50,15],[51,22,50,47],[52,4,51,4],[53,4,52,4],[53,10,52,10],[53,11,52,11,"isDesktop"],[53,20,52,20],[53,22,52,22,"setIsDesktop"],[53,34,52,34],[53,35,52,35],[53,38,52,38,"react_1"],[53,45,52,45],[53,46,52,46,"default"],[53,53,52,53],[53,54,52,54,"useState"],[53,62,52,62],[53,63,52,63],[53,68,52,68],[53,69,52,69],[54,4,53,4,"react_1"],[54,11,53,11],[54,12,53,12,"default"],[54,19,53,19],[54,20,53,20,"useEffect"],[54,29,53,29],[54,30,53,30],[54,36,53,36],[55,6,54,8],[55,10,54,12],[55,11,54,13,"isWeb"],[55,16,54,18],[55,24,54,51],[55,26,55,12],[56,6,56,8],[56,12,56,14,"mql"],[56,15,56,17],[56,18,56,20,"window"],[56,24,56,26],[56,25,56,27,"matchMedia"],[56,35,56,37],[56,36,56,38],[56,51,56,53,"breakpoint"],[56,61,56,63],[56,66,56,68],[56,67,56,69],[57,6,57,8],[57,12,57,14,"listener"],[57,20,57,22],[57,23,57,26,"e"],[57,24,57,27],[57,28,57,32,"setIsDesktop"],[57,40,57,44],[57,41,57,45,"e"],[57,42,57,46],[57,43,57,47,"matches"],[57,50,57,54],[57,51,57,55],[58,6,58,8],[59,6,59,8,"setIsDesktop"],[59,18,59,20],[59,19,59,21,"mql"],[59,22,59,24],[59,23,59,25,"matches"],[59,30,59,32],[59,31,59,33],[60,6,60,8,"mql"],[60,9,60,11],[60,10,60,12,"addEventListener"],[60,26,60,28],[60,27,60,29],[60,35,60,37],[60,37,60,39,"listener"],[60,45,60,47],[60,46,60,48],[61,6,61,8],[61,13,61,15],[61,19,61,21,"mql"],[61,22,61,24],[61,23,61,25,"removeEventListener"],[61,42,61,44],[61,43,61,45],[61,51,61,53],[61,53,61,55,"listener"],[61,61,61,63],[61,62,61,64],[62,4,62,4],[62,5,62,5],[62,7,62,7],[62,8,62,8,"breakpoint"],[62,18,62,18],[62,20,62,20,"isWeb"],[62,25,62,25],[62,26,62,26],[62,27,62,27],[63,4,63,4],[63,11,63,11,"isDesktop"],[63,20,63,20],[64,2,64,0],[65,2,65,0],[66,0,66,0],[67,0,67,0],[68,0,68,0],[69,0,69,0],[70,0,70,0],[71,0,71,0],[72,0,72,0],[73,0,73,0],[74,0,74,0],[75,0,75,0],[76,0,76,0],[77,0,77,0],[78,0,78,0],[79,0,79,0],[80,0,80,0],[81,0,81,0],[82,0,82,0],[83,2,83,0],[83,11,83,9,"convertStackStateToNonModalState"],[83,43,83,41,"convertStackStateToNonModalState"],[83,44,83,42,"state"],[83,49,83,47],[83,51,83,49,"descriptors"],[83,62,83,60],[83,64,83,62,"isWeb"],[83,69,83,67],[83,71,83,69],[84,4,84,4],[84,8,84,8],[84,9,84,9,"isWeb"],[84,14,84,14],[84,16,84,16],[85,6,85,8],[85,13,85,15],[86,8,85,17,"routes"],[86,14,85,23],[86,16,85,25,"state"],[86,21,85,30],[86,22,85,31,"routes"],[86,28,85,37],[87,8,85,39,"index"],[87,13,85,44],[87,15,85,46,"state"],[87,20,85,51],[87,21,85,52,"index"],[88,6,85,58],[88,7,85,59],[89,4,86,4],[90,4,87,4],[91,4,88,4],[91,10,88,10,"routes"],[91,16,88,16],[91,19,88,19,"state"],[91,24,88,24],[91,25,88,25,"routes"],[91,31,88,31],[91,32,88,32,"filter"],[91,38,88,38],[91,39,88,40,"route"],[91,44,88,45],[91,48,88,50],[92,6,89,8],[92,13,89,15],[92,14,89,16,"isModalPresentation"],[92,33,89,35],[92,34,89,36,"descriptors"],[92,45,89,47],[92,46,89,48,"route"],[92,51,89,53],[92,52,89,54,"key"],[92,55,89,57],[92,56,89,58],[92,57,89,59,"options"],[92,64,89,66],[92,65,89,67],[93,4,90,4],[93,5,90,5],[93,6,90,6],[94,4,91,4],[95,4,92,4],[96,4,93,4],[96,8,93,8,"index"],[96,13,93,13],[96,16,93,16,"routes"],[96,22,93,22],[96,23,93,23,"findIndex"],[96,32,93,32],[96,33,93,34,"r"],[96,34,93,35],[96,38,93,40,"r"],[96,39,93,41],[96,40,93,42,"key"],[96,43,93,45],[96,48,93,50,"state"],[96,53,93,55],[96,54,93,56,"routes"],[96,60,93,62],[96,61,93,63,"state"],[96,66,93,68],[96,67,93,69,"index"],[96,72,93,74],[96,73,93,75],[96,75,93,77,"key"],[96,78,93,80],[96,79,93,81],[97,4,94,4],[97,8,94,8,"index"],[97,13,94,13],[97,16,94,16],[97,17,94,17],[97,19,94,19],[98,6,95,8,"index"],[98,11,95,13],[98,14,95,16,"routes"],[98,20,95,22],[98,21,95,23,"length"],[98,27,95,29],[98,30,95,32],[98,31,95,33],[98,34,95,36,"routes"],[98,40,95,42],[98,41,95,43,"length"],[98,47,95,49],[98,50,95,52],[98,51,95,53],[98,54,95,56],[98,55,95,57],[99,4,96,4],[100,4,97,4],[100,11,97,11],[101,6,97,13,"routes"],[101,12,97,19],[102,6,97,21,"index"],[103,4,97,27],[103,5,97,28],[104,2,98,0],[105,2,99,0],[106,0,100,0],[107,0,101,0],[108,0,102,0],[109,0,103,0],[110,0,104,0],[111,0,105,0],[112,0,106,0],[113,0,107,0],[114,2,108,0],[114,11,108,9,"findLastNonModalIndex"],[114,32,108,30,"findLastNonModalIndex"],[114,33,108,31,"state"],[114,38,108,36],[114,40,108,38,"descriptors"],[114,51,108,49],[114,53,108,51],[115,4,109,4],[116,4,110,4],[116,9,110,9],[116,13,110,13,"i"],[116,14,110,14],[116,17,110,17,"state"],[116,22,110,22],[116,23,110,23,"routes"],[116,29,110,29],[116,30,110,30,"length"],[116,36,110,36],[116,39,110,39],[116,40,110,40],[116,42,110,42,"i"],[116,43,110,43],[116,47,110,47],[116,48,110,48],[116,50,110,50,"i"],[116,51,110,51],[116,53,110,53],[116,55,110,55],[117,6,111,8],[117,10,111,12],[117,11,111,13,"isModalPresentation"],[117,30,111,32],[117,31,111,33,"descriptors"],[117,42,111,44],[117,43,111,45,"state"],[117,48,111,50],[117,49,111,51,"routes"],[117,55,111,57],[117,56,111,58,"i"],[117,57,111,59],[117,58,111,60],[117,59,111,61,"key"],[117,62,111,64],[117,63,111,65],[117,64,111,66,"options"],[117,71,111,73],[117,72,111,74],[117,74,111,76],[118,8,112,12],[118,15,112,19,"i"],[118,16,112,20],[119,6,113,8],[120,4,114,4],[121,4,115,4],[121,11,115,11],[121,12,115,12],[121,13,115,13],[122,2,116,0],[123,0,116,1],[123,3]],"functionMap":{"names":["<global>","<anonymous>","isModalPresentation","isTransparentModalPresentation","useIsDesktop","react_1._default.useEffect$argument_0","listener","convertStackStateToNonModalState","state.routes.filter$argument_0","routes.findIndex$argument_0","findLastNonModalIndex"],"mappings":"AAA;wDCE;CDE;AEgB;CFQ;AGS;CHG;AIQ;8BCI;yBCI,8BD;eJI,iDI;KDC;CJE;AOmB;uCCK;KDE;iCEG,+CF;CPK;AUU;CVQ"},"hasCjsExports":true},"type":"js/module"}]}