{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":29,"index":254},"end":{"line":13,"column":84,"index":309}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":60,"index":432},"end":{"line":16,"column":122,"index":494}}],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/objectSpread2","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":44,"index":541},"end":{"line":17,"column":91,"index":588}}],"key":"F+ExrfS9dcoZxXJOBwTmx09hji8=","exportNames":["*"],"imports":1}},{"name":"../../modules/AccessibilityUtil","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":18,"column":48,"index":639},"end":{"line":18,"column":90,"index":681}}],"key":"NYCyNBfw5uw4KCER1hg1TqFYt0k=","exportNames":["*"],"imports":1}},{"name":"./BoundingDimensions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":19,"column":49,"index":733},"end":{"line":19,"column":80,"index":764}}],"key":"RaiybptsLPKbiOpd/14wr2hqS/0=","exportNames":["*"],"imports":1}},{"name":"@react-native/normalize-colors","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":20,"column":46,"index":813},"end":{"line":20,"column":87,"index":854}}],"key":"uGLfpVUq+J8TtNzPFtn7u2maAeY=","exportNames":["*"],"imports":1}},{"name":"./Position","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":21,"column":39,"index":896},"end":{"line":21,"column":60,"index":917}}],"key":"6nYW0hqgc4DzQOIqYpJ5yVbIwBk=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":22,"column":36,"index":956},"end":{"line":22,"column":52,"index":972}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"../UIManager","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":23,"column":40,"index":1015},"end":{"line":23,"column":63,"index":1038}}],"key":"HYu6sEmFrviAPv7hDpFEp06p12U=","exportNames":["*"],"imports":1}},{"name":"../View","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":24,"column":35,"index":1076},"end":{"line":24,"column":53,"index":1094}}],"key":"Icwd30FnXIbYRs+oNMUjfX4uvbc=","exportNames":["*"],"imports":1}},{"name":"../../modules/warnOnce","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":25,"column":16,"index":1113},"end":{"line":25,"column":49,"index":1146}}],"key":"XgbbZ32MAIsK8fSKJecUsNzoStI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.default = void 0;\n  var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n  var _objectSpread2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/objectSpread2\"));\n  var _AccessibilityUtil = _interopRequireDefault(require(_dependencyMap[3], \"../../modules/AccessibilityUtil\"));\n  var _BoundingDimensions = _interopRequireDefault(require(_dependencyMap[4], \"./BoundingDimensions\"));\n  var _normalizeColors = _interopRequireDefault(require(_dependencyMap[5], \"@react-native/normalize-colors\"));\n  var _Position = _interopRequireDefault(require(_dependencyMap[6], \"./Position\"));\n  var _react = _interopRequireDefault(require(_dependencyMap[7], \"react\"));\n  var _UIManager = _interopRequireDefault(require(_dependencyMap[8], \"../UIManager\"));\n  var _View = _interopRequireDefault(require(_dependencyMap[9], \"../View\"));\n  var _warnOnce = require(_dependencyMap[10], \"../../modules/warnOnce\");\n  var extractSingleTouch = nativeEvent => {\n    var touches = nativeEvent.touches;\n    var changedTouches = nativeEvent.changedTouches;\n    var hasTouches = touches && touches.length > 0;\n    var hasChangedTouches = changedTouches && changedTouches.length > 0;\n    return !hasTouches && hasChangedTouches ? changedTouches[0] : hasTouches ? touches[0] : nativeEvent;\n  };\n\n  /**\n   * `Touchable`: Taps done right.\n   *\n   * You hook your `ResponderEventPlugin` events into `Touchable`. `Touchable`\n   * will measure time/geometry and tells you when to give feedback to the user.\n   *\n   * ====================== Touchable Tutorial ===============================\n   * The `Touchable` mixin helps you handle the \"press\" interaction. It analyzes\n   * the geometry of elements, and observes when another responder (scroll view\n   * etc) has stolen the touch lock. It notifies your component when it should\n   * give feedback to the user. (bouncing/highlighting/unhighlighting).\n   *\n   * - When a touch was activated (typically you highlight)\n   * - When a touch was deactivated (typically you unhighlight)\n   * - When a touch was \"pressed\" - a touch ended while still within the geometry\n   *   of the element, and no other element (like scroller) has \"stolen\" touch\n   *   lock (\"responder\") (Typically you bounce the element).\n   *\n   * A good tap interaction isn't as simple as you might think. There should be a\n   * slight delay before showing a highlight when starting a touch. If a\n   * subsequent touch move exceeds the boundary of the element, it should\n   * unhighlight, but if that same touch is brought back within the boundary, it\n   * should rehighlight again. A touch can move in and out of that boundary\n   * several times, each time toggling highlighting, but a \"press\" is only\n   * triggered if that touch ends while within the element's boundary and no\n   * scroller (or anything else) has stolen the lock on touches.\n   *\n   * To create a new type of component that handles interaction using the\n   * `Touchable` mixin, do the following:\n   *\n   * - Initialize the `Touchable` state.\n   *\n   *   getInitialState: function() {\n   *     return merge(this.touchableGetInitialState(), yourComponentState);\n   *   }\n   *\n   * - Add a method to get your touchable component's node.\n   *   getTouchableNode: function() {\n   *     return this.touchableRef.current\n   *   }\n   *\n   * - Choose the rendered component who's touches should start the interactive\n   *   sequence. On that rendered node, forward all `Touchable` responder\n   *   handlers. You can choose any rendered node you like. Choose a node whose\n   *   hit target you'd like to instigate the interaction sequence:\n   *\n   *   // In render function:\n   *   return (\n   *     <View\n   *       ref={this.touchableRef}\n   *       onStartShouldSetResponder={this.touchableHandleStartShouldSetResponder}\n   *       onResponderTerminationRequest={this.touchableHandleResponderTerminationRequest}\n   *       onResponderGrant={this.touchableHandleResponderGrant}\n   *       onResponderMove={this.touchableHandleResponderMove}\n   *       onResponderRelease={this.touchableHandleResponderRelease}\n   *       onResponderTerminate={this.touchableHandleResponderTerminate}>\n   *       <View>\n   *         Even though the hit detection/interactions are triggered by the\n   *         wrapping (typically larger) node, we usually end up implementing\n   *         custom logic that highlights this inner one.\n   *       </View>\n   *     </View>\n   *   );\n   *\n   * - You may set up your own handlers for each of these events, so long as you\n   *   also invoke the `touchable*` handlers inside of your custom handler.\n   *\n   * - Implement the handlers on your component class in order to provide\n   *   feedback to the user. See documentation for each of these class methods\n   *   that you should implement.\n   *\n   *   touchableHandlePress: function() {\n   *      this.performBounceAnimation();  // or whatever you want to do.\n   *   },\n   *   touchableHandleActivePressIn: function() {\n   *     this.beginHighlighting(...);  // Whatever you like to convey activation\n   *   },\n   *   touchableHandleActivePressOut: function() {\n   *     this.endHighlighting(...);  // Whatever you like to convey deactivation\n   *   },\n   *\n   * - There are more advanced methods you can implement (see documentation below):\n   *   touchableGetHighlightDelayMS: function() {\n   *     return 20;\n   *   }\n   *   // In practice, *always* use a predeclared constant (conserve memory).\n   *   touchableGetPressRectOffset: function() {\n   *     return {top: 20, left: 20, right: 20, bottom: 100};\n   *   }\n   */\n\n  /**\n   * Touchable states.\n   */\n\n  var States = {\n    NOT_RESPONDER: 'NOT_RESPONDER',\n    // Not the responder\n    RESPONDER_INACTIVE_PRESS_IN: 'RESPONDER_INACTIVE_PRESS_IN',\n    // Responder, inactive, in the `PressRect`\n    RESPONDER_INACTIVE_PRESS_OUT: 'RESPONDER_INACTIVE_PRESS_OUT',\n    // Responder, inactive, out of `PressRect`\n    RESPONDER_ACTIVE_PRESS_IN: 'RESPONDER_ACTIVE_PRESS_IN',\n    // Responder, active, in the `PressRect`\n    RESPONDER_ACTIVE_PRESS_OUT: 'RESPONDER_ACTIVE_PRESS_OUT',\n    // Responder, active, out of `PressRect`\n    RESPONDER_ACTIVE_LONG_PRESS_IN: 'RESPONDER_ACTIVE_LONG_PRESS_IN',\n    // Responder, active, in the `PressRect`, after long press threshold\n    RESPONDER_ACTIVE_LONG_PRESS_OUT: 'RESPONDER_ACTIVE_LONG_PRESS_OUT',\n    // Responder, active, out of `PressRect`, after long press threshold\n    ERROR: 'ERROR'\n  };\n  /*\n   * Quick lookup map for states that are considered to be \"active\"\n   */\n\n  var baseStatesConditions = {\n    NOT_RESPONDER: false,\n    RESPONDER_INACTIVE_PRESS_IN: false,\n    RESPONDER_INACTIVE_PRESS_OUT: false,\n    RESPONDER_ACTIVE_PRESS_IN: false,\n    RESPONDER_ACTIVE_PRESS_OUT: false,\n    RESPONDER_ACTIVE_LONG_PRESS_IN: false,\n    RESPONDER_ACTIVE_LONG_PRESS_OUT: false,\n    ERROR: false\n  };\n  var IsActive = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, baseStatesConditions), {}, {\n    RESPONDER_ACTIVE_PRESS_OUT: true,\n    RESPONDER_ACTIVE_PRESS_IN: true\n  });\n\n  /**\n   * Quick lookup for states that are considered to be \"pressing\" and are\n   * therefore eligible to result in a \"selection\" if the press stops.\n   */\n  var IsPressingIn = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, baseStatesConditions), {}, {\n    RESPONDER_INACTIVE_PRESS_IN: true,\n    RESPONDER_ACTIVE_PRESS_IN: true,\n    RESPONDER_ACTIVE_LONG_PRESS_IN: true\n  });\n  var IsLongPressingIn = (0, _objectSpread2.default)((0, _objectSpread2.default)({}, baseStatesConditions), {}, {\n    RESPONDER_ACTIVE_LONG_PRESS_IN: true\n  });\n\n  /**\n   * Inputs to the state machine.\n   */\n  var Signals = {\n    DELAY: 'DELAY',\n    RESPONDER_GRANT: 'RESPONDER_GRANT',\n    RESPONDER_RELEASE: 'RESPONDER_RELEASE',\n    RESPONDER_TERMINATED: 'RESPONDER_TERMINATED',\n    ENTER_PRESS_RECT: 'ENTER_PRESS_RECT',\n    LEAVE_PRESS_RECT: 'LEAVE_PRESS_RECT',\n    LONG_PRESS_DETECTED: 'LONG_PRESS_DETECTED'\n  };\n  /**\n   * Mapping from States x Signals => States\n   */\n  var Transitions = {\n    NOT_RESPONDER: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n      RESPONDER_RELEASE: States.ERROR,\n      RESPONDER_TERMINATED: States.ERROR,\n      ENTER_PRESS_RECT: States.ERROR,\n      LEAVE_PRESS_RECT: States.ERROR,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_INACTIVE_PRESS_IN: {\n      DELAY: States.RESPONDER_ACTIVE_PRESS_IN,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_INACTIVE_PRESS_OUT: {\n      DELAY: States.RESPONDER_ACTIVE_PRESS_OUT,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_INACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_ACTIVE_PRESS_IN: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    },\n    RESPONDER_ACTIVE_PRESS_OUT: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    RESPONDER_ACTIVE_LONG_PRESS_IN: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.RESPONDER_ACTIVE_LONG_PRESS_IN\n    },\n    RESPONDER_ACTIVE_LONG_PRESS_OUT: {\n      DELAY: States.ERROR,\n      RESPONDER_GRANT: States.ERROR,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_IN,\n      LEAVE_PRESS_RECT: States.RESPONDER_ACTIVE_LONG_PRESS_OUT,\n      LONG_PRESS_DETECTED: States.ERROR\n    },\n    error: {\n      DELAY: States.NOT_RESPONDER,\n      RESPONDER_GRANT: States.RESPONDER_INACTIVE_PRESS_IN,\n      RESPONDER_RELEASE: States.NOT_RESPONDER,\n      RESPONDER_TERMINATED: States.NOT_RESPONDER,\n      ENTER_PRESS_RECT: States.NOT_RESPONDER,\n      LEAVE_PRESS_RECT: States.NOT_RESPONDER,\n      LONG_PRESS_DETECTED: States.NOT_RESPONDER\n    }\n  };\n\n  // ==== Typical Constants for integrating into UI components ====\n  // var HIT_EXPAND_PX = 20;\n  // var HIT_VERT_OFFSET_PX = 10;\n  var HIGHLIGHT_DELAY_MS = 130;\n  var PRESS_EXPAND_PX = 20;\n  var LONG_PRESS_THRESHOLD = 500;\n  var LONG_PRESS_DELAY_MS = LONG_PRESS_THRESHOLD - HIGHLIGHT_DELAY_MS;\n  var LONG_PRESS_ALLOWED_MOVEMENT = 10;\n\n  // Default amount \"active\" region protrudes beyond box\n\n  /**\n   * By convention, methods prefixed with underscores are meant to be @private,\n   * and not @protected. Mixers shouldn't access them - not even to provide them\n   * as callback handlers.\n   *\n   *\n   * ========== Geometry =========\n   * `Touchable` only assumes that there exists a `HitRect` node. The `PressRect`\n   * is an abstract box that is extended beyond the `HitRect`.\n   *\n   *  +--------------------------+\n   *  |                          | - \"Start\" events in `HitRect` cause `HitRect`\n   *  |  +--------------------+  |   to become the responder.\n   *  |  |  +--------------+  |  | - `HitRect` is typically expanded around\n   *  |  |  |              |  |  |   the `VisualRect`, but shifted downward.\n   *  |  |  |  VisualRect  |  |  | - After pressing down, after some delay,\n   *  |  |  |              |  |  |   and before letting up, the Visual React\n   *  |  |  +--------------+  |  |   will become \"active\". This makes it eligible\n   *  |  |     HitRect        |  |   for being highlighted (so long as the\n   *  |  +--------------------+  |   press remains in the `PressRect`).\n   *  |        PressRect     o   |\n   *  +----------------------|---+\n   *           Out Region    |\n   *                         +-----+ This gap between the `HitRect` and\n   *                                 `PressRect` allows a touch to move far away\n   *                                 from the original hit rect, and remain\n   *                                 highlighted, and eligible for a \"Press\".\n   *                                 Customize this via\n   *                                 `touchableGetPressRectOffset()`.\n   *\n   *\n   *\n   * ======= State Machine =======\n   *\n   * +-------------+ <---+ RESPONDER_RELEASE\n   * |NOT_RESPONDER|\n   * +-------------+ <---+ RESPONDER_TERMINATED\n   *     +\n   *     | RESPONDER_GRANT (HitRect)\n   *     v\n   * +---------------------------+  DELAY   +-------------------------+  T + DELAY     +------------------------------+\n   * |RESPONDER_INACTIVE_PRESS_IN|+-------->|RESPONDER_ACTIVE_PRESS_IN| +------------> |RESPONDER_ACTIVE_LONG_PRESS_IN|\n   * +---------------------------+          +-------------------------+                +------------------------------+\n   *     +            ^                         +           ^                                 +           ^\n   *     |LEAVE_      |ENTER_                   |LEAVE_     |ENTER_                           |LEAVE_     |ENTER_\n   *     |PRESS_RECT  |PRESS_RECT               |PRESS_RECT |PRESS_RECT                       |PRESS_RECT |PRESS_RECT\n   *     |            |                         |           |                                 |           |\n   *     v            +                         v           +                                 v           +\n   * +----------------------------+  DELAY  +--------------------------+               +-------------------------------+\n   * |RESPONDER_INACTIVE_PRESS_OUT|+------->|RESPONDER_ACTIVE_PRESS_OUT|               |RESPONDER_ACTIVE_LONG_PRESS_OUT|\n   * +----------------------------+         +--------------------------+               +-------------------------------+\n   *\n   * T + DELAY => LONG_PRESS_DELAY_MS + DELAY\n   *\n   * Not drawn are the side effects of each transition. The most important side\n   * effect is the `touchableHandlePress` abstract method invocation that occurs\n   * when a responder is released while in either of the \"Press\" states.\n   *\n   * The other important side effects are the highlight abstract method\n   * invocations (internal callbacks) to be implemented by the mixer.\n   *\n   *\n   * @lends Touchable.prototype\n   */\n  var TouchableMixin = {\n    // HACK (part 1): basic support for touchable interactions using a keyboard\n    componentDidMount: function componentDidMount() {\n      (0, _warnOnce.warnOnce)('TouchableMixin', 'TouchableMixin is deprecated. Please use Pressable.');\n      var touchableNode = this.getTouchableNode && this.getTouchableNode();\n      if (touchableNode && touchableNode.addEventListener) {\n        this._touchableBlurListener = e => {\n          if (this._isTouchableKeyboardActive) {\n            if (this.state.touchable.touchState && this.state.touchable.touchState !== States.NOT_RESPONDER) {\n              this.touchableHandleResponderTerminate({\n                nativeEvent: e\n              });\n            }\n            this._isTouchableKeyboardActive = false;\n          }\n        };\n        touchableNode.addEventListener('blur', this._touchableBlurListener);\n      }\n    },\n    /**\n     * Clear all timeouts on unmount\n     */\n    componentWillUnmount: function componentWillUnmount() {\n      var touchableNode = this.getTouchableNode && this.getTouchableNode();\n      if (touchableNode && touchableNode.addEventListener) {\n        touchableNode.removeEventListener('blur', this._touchableBlurListener);\n      }\n      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n      // Clear DOM nodes\n      this.pressInLocation = null;\n      this.state.touchable.responderID = null;\n    },\n    /**\n     * It's prefer that mixins determine state in this way, having the class\n     * explicitly mix the state in the one and only `getInitialState` method.\n     *\n     * @return {object} State object to be placed inside of\n     * `this.state.touchable`.\n     */\n    touchableGetInitialState: function touchableGetInitialState() {\n      return {\n        touchable: {\n          touchState: undefined,\n          responderID: null\n        }\n      };\n    },\n    // ==== Hooks to Gesture Responder system ====\n    /**\n     * Must return true if embedded in a native platform scroll view.\n     */\n    touchableHandleResponderTerminationRequest: function touchableHandleResponderTerminationRequest() {\n      return !this.props.rejectResponderTermination;\n    },\n    /**\n     * Must return true to start the process of `Touchable`.\n     */\n    touchableHandleStartShouldSetResponder: function touchableHandleStartShouldSetResponder() {\n      return !this.props.disabled;\n    },\n    /**\n     * Return true to cancel press on long press.\n     */\n    touchableLongPressCancelsPress: function touchableLongPressCancelsPress() {\n      return true;\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderGrant` event.\n     * @param {SyntheticEvent} e Synthetic event from event system.\n     *\n     */\n    touchableHandleResponderGrant: function touchableHandleResponderGrant(e) {\n      var dispatchID = e.currentTarget;\n      // Since e is used in a callback invoked on another event loop\n      // (as in setTimeout etc), we need to call e.persist() on the\n      // event to make sure it doesn't get reused in the event object pool.\n      e.persist();\n      this.pressOutDelayTimeout && clearTimeout(this.pressOutDelayTimeout);\n      this.pressOutDelayTimeout = null;\n      this.state.touchable.touchState = States.NOT_RESPONDER;\n      this.state.touchable.responderID = dispatchID;\n      this._receiveSignal(Signals.RESPONDER_GRANT, e);\n      var delayMS = this.touchableGetHighlightDelayMS !== undefined ? Math.max(this.touchableGetHighlightDelayMS(), 0) : HIGHLIGHT_DELAY_MS;\n      delayMS = isNaN(delayMS) ? HIGHLIGHT_DELAY_MS : delayMS;\n      if (delayMS !== 0) {\n        this.touchableDelayTimeout = setTimeout(this._handleDelay.bind(this, e), delayMS);\n      } else {\n        this._handleDelay(e);\n      }\n      var longDelayMS = this.touchableGetLongPressDelayMS !== undefined ? Math.max(this.touchableGetLongPressDelayMS(), 10) : LONG_PRESS_DELAY_MS;\n      longDelayMS = isNaN(longDelayMS) ? LONG_PRESS_DELAY_MS : longDelayMS;\n      this.longPressDelayTimeout = setTimeout(this._handleLongDelay.bind(this, e), longDelayMS + delayMS);\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderRelease` event.\n     */\n    touchableHandleResponderRelease: function touchableHandleResponderRelease(e) {\n      this.pressInLocation = null;\n      this._receiveSignal(Signals.RESPONDER_RELEASE, e);\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderTerminate` event.\n     */\n    touchableHandleResponderTerminate: function touchableHandleResponderTerminate(e) {\n      this.pressInLocation = null;\n      this._receiveSignal(Signals.RESPONDER_TERMINATED, e);\n    },\n    /**\n     * Place as callback for a DOM element's `onResponderMove` event.\n     */\n    touchableHandleResponderMove: function touchableHandleResponderMove(e) {\n      // Measurement may not have returned yet.\n      if (!this.state.touchable.positionOnActivate) {\n        return;\n      }\n      var positionOnActivate = this.state.touchable.positionOnActivate;\n      var dimensionsOnActivate = this.state.touchable.dimensionsOnActivate;\n      var pressRectOffset = this.touchableGetPressRectOffset ? this.touchableGetPressRectOffset() : {\n        left: PRESS_EXPAND_PX,\n        right: PRESS_EXPAND_PX,\n        top: PRESS_EXPAND_PX,\n        bottom: PRESS_EXPAND_PX\n      };\n      var pressExpandLeft = pressRectOffset.left;\n      var pressExpandTop = pressRectOffset.top;\n      var pressExpandRight = pressRectOffset.right;\n      var pressExpandBottom = pressRectOffset.bottom;\n      var hitSlop = this.touchableGetHitSlop ? this.touchableGetHitSlop() : null;\n      if (hitSlop) {\n        pressExpandLeft += hitSlop.left || 0;\n        pressExpandTop += hitSlop.top || 0;\n        pressExpandRight += hitSlop.right || 0;\n        pressExpandBottom += hitSlop.bottom || 0;\n      }\n      var touch = extractSingleTouch(e.nativeEvent);\n      var pageX = touch && touch.pageX;\n      var pageY = touch && touch.pageY;\n      if (this.pressInLocation) {\n        var movedDistance = this._getDistanceBetweenPoints(pageX, pageY, this.pressInLocation.pageX, this.pressInLocation.pageY);\n        if (movedDistance > LONG_PRESS_ALLOWED_MOVEMENT) {\n          this._cancelLongPressDelayTimeout();\n        }\n      }\n      var isTouchWithinActive = pageX > positionOnActivate.left - pressExpandLeft && pageY > positionOnActivate.top - pressExpandTop && pageX < positionOnActivate.left + dimensionsOnActivate.width + pressExpandRight && pageY < positionOnActivate.top + dimensionsOnActivate.height + pressExpandBottom;\n      if (isTouchWithinActive) {\n        var prevState = this.state.touchable.touchState;\n        this._receiveSignal(Signals.ENTER_PRESS_RECT, e);\n        var curState = this.state.touchable.touchState;\n        if (curState === States.RESPONDER_INACTIVE_PRESS_IN && prevState !== States.RESPONDER_INACTIVE_PRESS_IN) {\n          // fix for t7967420\n          this._cancelLongPressDelayTimeout();\n        }\n      } else {\n        this._cancelLongPressDelayTimeout();\n        this._receiveSignal(Signals.LEAVE_PRESS_RECT, e);\n      }\n    },\n    /**\n     * Invoked when the item receives focus. Mixers might override this to\n     * visually distinguish the `VisualRect` so that the user knows that it\n     * currently has the focus. Most platforms only support a single element being\n     * focused at a time, in which case there may have been a previously focused\n     * element that was blurred just prior to this. This can be overridden when\n     * using `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n     */\n    touchableHandleFocus: function touchableHandleFocus(e) {\n      this.props.onFocus && this.props.onFocus(e);\n    },\n    /**\n     * Invoked when the item loses focus. Mixers might override this to\n     * visually distinguish the `VisualRect` so that the user knows that it\n     * no longer has focus. Most platforms only support a single element being\n     * focused at a time, in which case the focus may have moved to another.\n     * This can be overridden when using\n     * `Touchable.Mixin.withoutDefaultFocusAndBlur`.\n     */\n    touchableHandleBlur: function touchableHandleBlur(e) {\n      this.props.onBlur && this.props.onBlur(e);\n    },\n    // ==== Abstract Application Callbacks ====\n\n    /**\n     * Invoked when the item should be highlighted. Mixers should implement this\n     * to visually distinguish the `VisualRect` so that the user knows that\n     * releasing a touch will result in a \"selection\" (analog to click).\n     *\n     * @abstract\n     * touchableHandleActivePressIn: function,\n     */\n\n    /**\n     * Invoked when the item is \"active\" (in that it is still eligible to become\n     * a \"select\") but the touch has left the `PressRect`. Usually the mixer will\n     * want to unhighlight the `VisualRect`. If the user (while pressing) moves\n     * back into the `PressRect` `touchableHandleActivePressIn` will be invoked\n     * again and the mixer should probably highlight the `VisualRect` again. This\n     * event will not fire on an `touchEnd/mouseUp` event, only move events while\n     * the user is depressing the mouse/touch.\n     *\n     * @abstract\n     * touchableHandleActivePressOut: function\n     */\n\n    /**\n     * Invoked when the item is \"selected\" - meaning the interaction ended by\n     * letting up while the item was either in the state\n     * `RESPONDER_ACTIVE_PRESS_IN` or `RESPONDER_INACTIVE_PRESS_IN`.\n     *\n     * @abstract\n     * touchableHandlePress: function\n     */\n\n    /**\n     * Invoked when the item is long pressed - meaning the interaction ended by\n     * letting up while the item was in `RESPONDER_ACTIVE_LONG_PRESS_IN`. If\n     * `touchableHandleLongPress` is *not* provided, `touchableHandlePress` will\n     * be called as it normally is. If `touchableHandleLongPress` is provided, by\n     * default any `touchableHandlePress` callback will not be invoked. To\n     * override this default behavior, override `touchableLongPressCancelsPress`\n     * to return false. As a result, `touchableHandlePress` will be called when\n     * lifting up, even if `touchableHandleLongPress` has also been called.\n     *\n     * @abstract\n     * touchableHandleLongPress: function\n     */\n\n    /**\n     * Returns the number of millis to wait before triggering a highlight.\n     *\n     * @abstract\n     * touchableGetHighlightDelayMS: function\n     */\n\n    /**\n     * Returns the amount to extend the `HitRect` into the `PressRect`. Positive\n     * numbers mean the size expands outwards.\n     *\n     * @abstract\n     * touchableGetPressRectOffset: function\n     */\n\n    // ==== Internal Logic ====\n\n    /**\n     * Measures the `HitRect` node on activation. The Bounding rectangle is with\n     * respect to viewport - not page, so adding the `pageXOffset/pageYOffset`\n     * should result in points that are in the same coordinate system as an\n     * event's `globalX/globalY` data values.\n     *\n     * - Consider caching this for the lifetime of the component, or possibly\n     *   being able to share this cache between any `ScrollMap` view.\n     *\n     * @sideeffects\n     * @private\n     */\n    _remeasureMetricsOnActivation: function _remeasureMetricsOnActivation() {\n      var tag = this.state.touchable.responderID;\n      if (tag == null) {\n        return;\n      }\n      _UIManager.default.measure(tag, this._handleQueryLayout);\n    },\n    _handleQueryLayout: function _handleQueryLayout(l, t, w, h, globalX, globalY) {\n      //don't do anything UIManager failed to measure node\n      if (!l && !t && !w && !h && !globalX && !globalY) {\n        return;\n      }\n      this.state.touchable.positionOnActivate && _Position.default.release(this.state.touchable.positionOnActivate);\n      this.state.touchable.dimensionsOnActivate &&\n      // $FlowFixMe\n      _BoundingDimensions.default.release(this.state.touchable.dimensionsOnActivate);\n      this.state.touchable.positionOnActivate = _Position.default.getPooled(globalX, globalY);\n      // $FlowFixMe\n      this.state.touchable.dimensionsOnActivate = _BoundingDimensions.default.getPooled(w, h);\n    },\n    _handleDelay: function _handleDelay(e) {\n      this.touchableDelayTimeout = null;\n      this._receiveSignal(Signals.DELAY, e);\n    },\n    _handleLongDelay: function _handleLongDelay(e) {\n      this.longPressDelayTimeout = null;\n      var curState = this.state.touchable.touchState;\n      if (curState !== States.RESPONDER_ACTIVE_PRESS_IN && curState !== States.RESPONDER_ACTIVE_LONG_PRESS_IN) {\n        console.error('Attempted to transition from state `' + curState + '` to `' + States.RESPONDER_ACTIVE_LONG_PRESS_IN + '`, which is not supported. This is ' + 'most likely due to `Touchable.longPressDelayTimeout` not being cancelled.');\n      } else {\n        this._receiveSignal(Signals.LONG_PRESS_DETECTED, e);\n      }\n    },\n    /**\n     * Receives a state machine signal, performs side effects of the transition\n     * and stores the new state. Validates the transition as well.\n     *\n     * @param {Signals} signal State machine signal.\n     * @throws Error if invalid state transition or unrecognized signal.\n     * @sideeffects\n     */\n    _receiveSignal: function _receiveSignal(signal, e) {\n      var responderID = this.state.touchable.responderID;\n      var curState = this.state.touchable.touchState;\n      var nextState = Transitions[curState] && Transitions[curState][signal];\n      if (!responderID && signal === Signals.RESPONDER_RELEASE) {\n        return;\n      }\n      if (!nextState) {\n        throw new Error('Unrecognized signal `' + signal + '` or state `' + curState + '` for Touchable responder `' + responderID + '`');\n      }\n      if (nextState === States.ERROR) {\n        throw new Error('Touchable cannot transition from `' + curState + '` to `' + signal + '` for responder `' + responderID + '`');\n      }\n      if (curState !== nextState) {\n        this._performSideEffectsForTransition(curState, nextState, signal, e);\n        this.state.touchable.touchState = nextState;\n      }\n    },\n    _cancelLongPressDelayTimeout: function _cancelLongPressDelayTimeout() {\n      this.longPressDelayTimeout && clearTimeout(this.longPressDelayTimeout);\n      this.longPressDelayTimeout = null;\n    },\n    _isHighlight: function _isHighlight(state) {\n      return state === States.RESPONDER_ACTIVE_PRESS_IN || state === States.RESPONDER_ACTIVE_LONG_PRESS_IN;\n    },\n    _savePressInLocation: function _savePressInLocation(e) {\n      var touch = extractSingleTouch(e.nativeEvent);\n      var pageX = touch && touch.pageX;\n      var pageY = touch && touch.pageY;\n      var locationX = touch && touch.locationX;\n      var locationY = touch && touch.locationY;\n      this.pressInLocation = {\n        pageX,\n        pageY,\n        locationX,\n        locationY\n      };\n    },\n    _getDistanceBetweenPoints: function _getDistanceBetweenPoints(aX, aY, bX, bY) {\n      var deltaX = aX - bX;\n      var deltaY = aY - bY;\n      return Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    },\n    /**\n     * Will perform a transition between touchable states, and identify any\n     * highlighting or unhighlighting that must be performed for this particular\n     * transition.\n     *\n     * @param {States} curState Current Touchable state.\n     * @param {States} nextState Next Touchable state.\n     * @param {Signal} signal Signal that triggered the transition.\n     * @param {Event} e Native event.\n     * @sideeffects\n     */\n    _performSideEffectsForTransition: function _performSideEffectsForTransition(curState, nextState, signal, e) {\n      var curIsHighlight = this._isHighlight(curState);\n      var newIsHighlight = this._isHighlight(nextState);\n      var isFinalSignal = signal === Signals.RESPONDER_TERMINATED || signal === Signals.RESPONDER_RELEASE;\n      if (isFinalSignal) {\n        this._cancelLongPressDelayTimeout();\n      }\n      var isInitialTransition = curState === States.NOT_RESPONDER && nextState === States.RESPONDER_INACTIVE_PRESS_IN;\n      var isActiveTransition = !IsActive[curState] && IsActive[nextState];\n      if (isInitialTransition || isActiveTransition) {\n        this._remeasureMetricsOnActivation();\n      }\n      if (IsPressingIn[curState] && signal === Signals.LONG_PRESS_DETECTED) {\n        this.touchableHandleLongPress && this.touchableHandleLongPress(e);\n      }\n      if (newIsHighlight && !curIsHighlight) {\n        this._startHighlight(e);\n      } else if (!newIsHighlight && curIsHighlight) {\n        this._endHighlight(e);\n      }\n      if (IsPressingIn[curState] && signal === Signals.RESPONDER_RELEASE) {\n        var hasLongPressHandler = !!this.props.onLongPress;\n        var pressIsLongButStillCallOnPress = IsLongPressingIn[curState] && (\n        // We *are* long pressing.. // But either has no long handler\n        !hasLongPressHandler || !this.touchableLongPressCancelsPress()); // or we're told to ignore it.\n\n        var shouldInvokePress = !IsLongPressingIn[curState] || pressIsLongButStillCallOnPress;\n        if (shouldInvokePress && this.touchableHandlePress) {\n          if (!newIsHighlight && !curIsHighlight) {\n            // we never highlighted because of delay, but we should highlight now\n            this._startHighlight(e);\n            this._endHighlight(e);\n          }\n          this.touchableHandlePress(e);\n        }\n      }\n      this.touchableDelayTimeout && clearTimeout(this.touchableDelayTimeout);\n      this.touchableDelayTimeout = null;\n    },\n    _playTouchSound: function _playTouchSound() {\n      _UIManager.default.playTouchSound();\n    },\n    _startHighlight: function _startHighlight(e) {\n      this._savePressInLocation(e);\n      this.touchableHandleActivePressIn && this.touchableHandleActivePressIn(e);\n    },\n    _endHighlight: function _endHighlight(e) {\n      if (this.touchableHandleActivePressOut) {\n        if (this.touchableGetPressOutDelayMS && this.touchableGetPressOutDelayMS()) {\n          this.pressOutDelayTimeout = setTimeout(() => {\n            this.touchableHandleActivePressOut(e);\n          }, this.touchableGetPressOutDelayMS());\n        } else {\n          this.touchableHandleActivePressOut(e);\n        }\n      }\n    },\n    // HACK (part 2): basic support for touchable interactions using a keyboard (including\n    // delays and longPress)\n    touchableHandleKeyEvent: function touchableHandleKeyEvent(e) {\n      var type = e.type,\n        key = e.key;\n      if (key === 'Enter' || key === ' ') {\n        if (type === 'keydown') {\n          if (!this._isTouchableKeyboardActive) {\n            if (!this.state.touchable.touchState || this.state.touchable.touchState === States.NOT_RESPONDER) {\n              this.touchableHandleResponderGrant(e);\n              this._isTouchableKeyboardActive = true;\n            }\n          }\n        } else if (type === 'keyup') {\n          if (this._isTouchableKeyboardActive) {\n            if (this.state.touchable.touchState && this.state.touchable.touchState !== States.NOT_RESPONDER) {\n              this.touchableHandleResponderRelease(e);\n              this._isTouchableKeyboardActive = false;\n            }\n          }\n        }\n        e.stopPropagation();\n        // prevent the default behaviour unless the Touchable functions as a link\n        // and Enter is pressed\n        if (!(key === 'Enter' && _AccessibilityUtil.default.propsToAriaRole(this.props) === 'link')) {\n          e.preventDefault();\n        }\n      }\n    },\n    withoutDefaultFocusAndBlur: {}\n  };\n\n  /**\n   * Provide an optional version of the mixin where `touchableHandleFocus` and\n   * `touchableHandleBlur` can be overridden. This allows appropriate defaults to\n   * be set on TV platforms, without breaking existing implementations of\n   * `Touchable`.\n   */\n  var touchableHandleFocus = TouchableMixin.touchableHandleFocus,\n    touchableHandleBlur = TouchableMixin.touchableHandleBlur,\n    TouchableMixinWithoutDefaultFocusAndBlur = (0, _objectWithoutPropertiesLoose2.default)(TouchableMixin, [\"touchableHandleFocus\", \"touchableHandleBlur\"]);\n  TouchableMixin.withoutDefaultFocusAndBlur = TouchableMixinWithoutDefaultFocusAndBlur;\n  var Touchable = {\n    Mixin: TouchableMixin,\n    TOUCH_TARGET_DEBUG: false,\n    // Highlights all touchable targets. Toggle with Inspector.\n    /**\n     * Renders a debugging overlay to visualize touch target with hitSlop (might not work on Android).\n     */\n    renderDebugView: _ref => {\n      var color = _ref.color,\n        hitSlop = _ref.hitSlop;\n      if (!Touchable.TOUCH_TARGET_DEBUG) {\n        return null;\n      }\n      if (process.env.NODE_ENV !== 'production') {\n        throw Error('Touchable.TOUCH_TARGET_DEBUG should not be enabled in prod!');\n      }\n      var debugHitSlopStyle = {};\n      hitSlop = hitSlop || {\n        top: 0,\n        bottom: 0,\n        left: 0,\n        right: 0\n      };\n      for (var key in hitSlop) {\n        debugHitSlopStyle[key] = -hitSlop[key];\n      }\n      var normalizedColor = (0, _normalizeColors.default)(color);\n      if (typeof normalizedColor !== 'number') {\n        return null;\n      }\n      var hexColor = '#' + ('00000000' + normalizedColor.toString(16)).substr(-8);\n      return /*#__PURE__*/_react.default.createElement(_View.default, {\n        pointerEvents: \"none\",\n        style: (0, _objectSpread2.default)({\n          position: 'absolute',\n          borderColor: hexColor.slice(0, -2) + '55',\n          // More opaque\n          borderWidth: 1,\n          borderStyle: 'dashed',\n          backgroundColor: hexColor.slice(0, -2) + '0F'\n        }, debugHitSlopStyle)\n      });\n    }\n  };\n  var _default = exports.default = Touchable;\n  module.exports = exports.default;\n});","lineCount":841,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[14,6,13,4,"_interopRequireDefault"],[14,28,13,26],[14,31,13,29,"require"],[14,38,13,36],[14,39,13,36,"_dependencyMap"],[14,53,13,36],[14,104,13,83],[14,105,13,84],[14,106,13,85,"default"],[14,113,13,92],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"__esModule"],[15,20,14,18],[15,23,14,21],[15,27,14,25],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"default"],[16,17,15,15],[16,20,15,18],[16,25,15,23],[16,26,15,24],[17,2,16,0],[17,6,16,4,"_objectWithoutPropertiesLoose2"],[17,36,16,34],[17,39,16,37,"_interopRequireDefault"],[17,61,16,59],[17,62,16,60,"require"],[17,69,16,67],[17,70,16,67,"_dependencyMap"],[17,84,16,67],[17,142,16,121],[17,143,16,122],[17,144,16,123],[18,2,17,0],[18,6,17,4,"_objectSpread2"],[18,20,17,18],[18,23,17,21,"_interopRequireDefault"],[18,45,17,43],[18,46,17,44,"require"],[18,53,17,51],[18,54,17,51,"_dependencyMap"],[18,68,17,51],[18,111,17,90],[18,112,17,91],[18,113,17,92],[19,2,18,0],[19,6,18,4,"_AccessibilityUtil"],[19,24,18,22],[19,27,18,25,"_interopRequireDefault"],[19,49,18,47],[19,50,18,48,"require"],[19,57,18,55],[19,58,18,55,"_dependencyMap"],[19,72,18,55],[19,110,18,89],[19,111,18,90],[19,112,18,91],[20,2,19,0],[20,6,19,4,"_BoundingDimensions"],[20,25,19,23],[20,28,19,26,"_interopRequireDefault"],[20,50,19,48],[20,51,19,49,"require"],[20,58,19,56],[20,59,19,56,"_dependencyMap"],[20,73,19,56],[20,100,19,79],[20,101,19,80],[20,102,19,81],[21,2,20,0],[21,6,20,4,"_normalizeColors"],[21,22,20,20],[21,25,20,23,"_interopRequireDefault"],[21,47,20,45],[21,48,20,46,"require"],[21,55,20,53],[21,56,20,53,"_dependencyMap"],[21,70,20,53],[21,107,20,86],[21,108,20,87],[21,109,20,88],[22,2,21,0],[22,6,21,4,"_Position"],[22,15,21,13],[22,18,21,16,"_interopRequireDefault"],[22,40,21,38],[22,41,21,39,"require"],[22,48,21,46],[22,49,21,46,"_dependencyMap"],[22,63,21,46],[22,80,21,59],[22,81,21,60],[22,82,21,61],[23,2,22,0],[23,6,22,4,"_react"],[23,12,22,10],[23,15,22,13,"_interopRequireDefault"],[23,37,22,35],[23,38,22,36,"require"],[23,45,22,43],[23,46,22,43,"_dependencyMap"],[23,60,22,43],[23,72,22,51],[23,73,22,52],[23,74,22,53],[24,2,23,0],[24,6,23,4,"_UIManager"],[24,16,23,14],[24,19,23,17,"_interopRequireDefault"],[24,41,23,39],[24,42,23,40,"require"],[24,49,23,47],[24,50,23,47,"_dependencyMap"],[24,64,23,47],[24,83,23,62],[24,84,23,63],[24,85,23,64],[25,2,24,0],[25,6,24,4,"_View"],[25,11,24,9],[25,14,24,12,"_interopRequireDefault"],[25,36,24,34],[25,37,24,35,"require"],[25,44,24,42],[25,45,24,42,"_dependencyMap"],[25,59,24,42],[25,73,24,52],[25,74,24,53],[25,75,24,54],[26,2,25,0],[26,6,25,4,"_warnOnce"],[26,15,25,13],[26,18,25,16,"require"],[26,25,25,23],[26,26,25,23,"_dependencyMap"],[26,40,25,23],[26,70,25,48],[26,71,25,49],[27,2,26,0],[27,6,26,4,"extractSingleTouch"],[27,24,26,22],[27,27,26,25,"nativeEvent"],[27,38,26,36],[27,42,26,40],[28,4,27,2],[28,8,27,6,"touches"],[28,15,27,13],[28,18,27,16,"nativeEvent"],[28,29,27,27],[28,30,27,28,"touches"],[28,37,27,35],[29,4,28,2],[29,8,28,6,"changedTouches"],[29,22,28,20],[29,25,28,23,"nativeEvent"],[29,36,28,34],[29,37,28,35,"changedTouches"],[29,51,28,49],[30,4,29,2],[30,8,29,6,"hasTouches"],[30,18,29,16],[30,21,29,19,"touches"],[30,28,29,26],[30,32,29,30,"touches"],[30,39,29,37],[30,40,29,38,"length"],[30,46,29,44],[30,49,29,47],[30,50,29,48],[31,4,30,2],[31,8,30,6,"hasChangedTouches"],[31,25,30,23],[31,28,30,26,"changedTouches"],[31,42,30,40],[31,46,30,44,"changedTouches"],[31,60,30,58],[31,61,30,59,"length"],[31,67,30,65],[31,70,30,68],[31,71,30,69],[32,4,31,2],[32,11,31,9],[32,12,31,10,"hasTouches"],[32,22,31,20],[32,26,31,24,"hasChangedTouches"],[32,43,31,41],[32,46,31,44,"changedTouches"],[32,60,31,58],[32,61,31,59],[32,62,31,60],[32,63,31,61],[32,66,31,64,"hasTouches"],[32,76,31,74],[32,79,31,77,"touches"],[32,86,31,84],[32,87,31,85],[32,88,31,86],[32,89,31,87],[32,92,31,90,"nativeEvent"],[32,103,31,101],[33,2,32,0],[33,3,32,1],[35,2,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,0,44,0],[46,0,45,0],[47,0,46,0],[48,0,47,0],[49,0,48,0],[50,0,49,0],[51,0,50,0],[52,0,51,0],[53,0,52,0],[54,0,53,0],[55,0,54,0],[56,0,55,0],[57,0,56,0],[58,0,57,0],[59,0,58,0],[60,0,59,0],[61,0,60,0],[62,0,61,0],[63,0,62,0],[64,0,63,0],[65,0,64,0],[66,0,65,0],[67,0,66,0],[68,0,67,0],[69,0,68,0],[70,0,69,0],[71,0,70,0],[72,0,71,0],[73,0,72,0],[74,0,73,0],[75,0,74,0],[76,0,75,0],[77,0,76,0],[78,0,77,0],[79,0,78,0],[80,0,79,0],[81,0,80,0],[82,0,81,0],[83,0,82,0],[84,0,83,0],[85,0,84,0],[86,0,85,0],[87,0,86,0],[88,0,87,0],[89,0,88,0],[90,0,89,0],[91,0,90,0],[92,0,91,0],[93,0,92,0],[94,0,93,0],[95,0,94,0],[96,0,95,0],[97,0,96,0],[98,0,97,0],[99,0,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,0,102,0],[104,0,103,0],[105,0,104,0],[106,0,105,0],[107,0,106,0],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,0,111,0],[113,0,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,0,116,0],[118,0,117,0],[119,0,118,0],[120,0,119,0],[121,0,120,0],[122,0,121,0],[123,0,122,0],[124,0,123,0],[126,2,125,0],[127,0,126,0],[128,0,127,0],[130,2,129,0],[130,6,129,4,"States"],[130,12,129,10],[130,15,129,13],[131,4,130,2,"NOT_RESPONDER"],[131,17,130,15],[131,19,130,17],[131,34,130,32],[132,4,131,2],[133,4,132,2,"RESPONDER_INACTIVE_PRESS_IN"],[133,31,132,29],[133,33,132,31],[133,62,132,60],[134,4,133,2],[135,4,134,2,"RESPONDER_INACTIVE_PRESS_OUT"],[135,32,134,30],[135,34,134,32],[135,64,134,62],[136,4,135,2],[137,4,136,2,"RESPONDER_ACTIVE_PRESS_IN"],[137,29,136,27],[137,31,136,29],[137,58,136,56],[138,4,137,2],[139,4,138,2,"RESPONDER_ACTIVE_PRESS_OUT"],[139,30,138,28],[139,32,138,30],[139,60,138,58],[140,4,139,2],[141,4,140,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[141,34,140,32],[141,36,140,34],[141,68,140,66],[142,4,141,2],[143,4,142,2,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[143,35,142,33],[143,37,142,35],[143,70,142,68],[144,4,143,2],[145,4,144,2,"ERROR"],[145,9,144,7],[145,11,144,9],[146,2,145,0],[146,3,145,1],[147,2,146,0],[148,0,147,0],[149,0,148,0],[151,2,150,0],[151,6,150,4,"baseStatesConditions"],[151,26,150,24],[151,29,150,27],[152,4,151,2,"NOT_RESPONDER"],[152,17,151,15],[152,19,151,17],[152,24,151,22],[153,4,152,2,"RESPONDER_INACTIVE_PRESS_IN"],[153,31,152,29],[153,33,152,31],[153,38,152,36],[154,4,153,2,"RESPONDER_INACTIVE_PRESS_OUT"],[154,32,153,30],[154,34,153,32],[154,39,153,37],[155,4,154,2,"RESPONDER_ACTIVE_PRESS_IN"],[155,29,154,27],[155,31,154,29],[155,36,154,34],[156,4,155,2,"RESPONDER_ACTIVE_PRESS_OUT"],[156,30,155,28],[156,32,155,30],[156,37,155,35],[157,4,156,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[157,34,156,32],[157,36,156,34],[157,41,156,39],[158,4,157,2,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[158,35,157,33],[158,37,157,35],[158,42,157,40],[159,4,158,2,"ERROR"],[159,9,158,7],[159,11,158,9],[160,2,159,0],[160,3,159,1],[161,2,160,0],[161,6,160,4,"IsActive"],[161,14,160,12],[161,17,160,15],[161,18,160,16],[161,19,160,17],[161,21,160,19,"_objectSpread2"],[161,35,160,33],[161,36,160,34,"default"],[161,43,160,41],[161,45,160,43],[161,46,160,44],[161,47,160,45],[161,49,160,47,"_objectSpread2"],[161,63,160,61],[161,64,160,62,"default"],[161,71,160,69],[161,73,160,71],[161,74,160,72],[161,75,160,73],[161,77,160,75,"baseStatesConditions"],[161,97,160,95],[161,98,160,96],[161,100,160,98],[161,101,160,99],[161,102,160,100],[161,104,160,102],[162,4,161,2,"RESPONDER_ACTIVE_PRESS_OUT"],[162,30,161,28],[162,32,161,30],[162,36,161,34],[163,4,162,2,"RESPONDER_ACTIVE_PRESS_IN"],[163,29,162,27],[163,31,162,29],[164,2,163,0],[164,3,163,1],[164,4,163,2],[166,2,165,0],[167,0,166,0],[168,0,167,0],[169,0,168,0],[170,2,169,0],[170,6,169,4,"IsPressingIn"],[170,18,169,16],[170,21,169,19],[170,22,169,20],[170,23,169,21],[170,25,169,23,"_objectSpread2"],[170,39,169,37],[170,40,169,38,"default"],[170,47,169,45],[170,49,169,47],[170,50,169,48],[170,51,169,49],[170,53,169,51,"_objectSpread2"],[170,67,169,65],[170,68,169,66,"default"],[170,75,169,73],[170,77,169,75],[170,78,169,76],[170,79,169,77],[170,81,169,79,"baseStatesConditions"],[170,101,169,99],[170,102,169,100],[170,104,169,102],[170,105,169,103],[170,106,169,104],[170,108,169,106],[171,4,170,2,"RESPONDER_INACTIVE_PRESS_IN"],[171,31,170,29],[171,33,170,31],[171,37,170,35],[172,4,171,2,"RESPONDER_ACTIVE_PRESS_IN"],[172,29,171,27],[172,31,171,29],[172,35,171,33],[173,4,172,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[173,34,172,32],[173,36,172,34],[174,2,173,0],[174,3,173,1],[174,4,173,2],[175,2,174,0],[175,6,174,4,"IsLongPressingIn"],[175,22,174,20],[175,25,174,23],[175,26,174,24],[175,27,174,25],[175,29,174,27,"_objectSpread2"],[175,43,174,41],[175,44,174,42,"default"],[175,51,174,49],[175,53,174,51],[175,54,174,52],[175,55,174,53],[175,57,174,55,"_objectSpread2"],[175,71,174,69],[175,72,174,70,"default"],[175,79,174,77],[175,81,174,79],[175,82,174,80],[175,83,174,81],[175,85,174,83,"baseStatesConditions"],[175,105,174,103],[175,106,174,104],[175,108,174,106],[175,109,174,107],[175,110,174,108],[175,112,174,110],[176,4,175,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[176,34,175,32],[176,36,175,34],[177,2,176,0],[177,3,176,1],[177,4,176,2],[179,2,178,0],[180,0,179,0],[181,0,180,0],[182,2,181,0],[182,6,181,4,"Signals"],[182,13,181,11],[182,16,181,14],[183,4,182,2,"DELAY"],[183,9,182,7],[183,11,182,9],[183,18,182,16],[184,4,183,2,"RESPONDER_GRANT"],[184,19,183,17],[184,21,183,19],[184,38,183,36],[185,4,184,2,"RESPONDER_RELEASE"],[185,21,184,19],[185,23,184,21],[185,42,184,40],[186,4,185,2,"RESPONDER_TERMINATED"],[186,24,185,22],[186,26,185,24],[186,48,185,46],[187,4,186,2,"ENTER_PRESS_RECT"],[187,20,186,18],[187,22,186,20],[187,40,186,38],[188,4,187,2,"LEAVE_PRESS_RECT"],[188,20,187,18],[188,22,187,20],[188,40,187,38],[189,4,188,2,"LONG_PRESS_DETECTED"],[189,23,188,21],[189,25,188,23],[190,2,189,0],[190,3,189,1],[191,2,190,0],[192,0,191,0],[193,0,192,0],[194,2,193,0],[194,6,193,4,"Transitions"],[194,17,193,15],[194,20,193,18],[195,4,194,2,"NOT_RESPONDER"],[195,17,194,15],[195,19,194,17],[196,6,195,4,"DELAY"],[196,11,195,9],[196,13,195,11,"States"],[196,19,195,17],[196,20,195,18,"ERROR"],[196,25,195,23],[197,6,196,4,"RESPONDER_GRANT"],[197,21,196,19],[197,23,196,21,"States"],[197,29,196,27],[197,30,196,28,"RESPONDER_INACTIVE_PRESS_IN"],[197,57,196,55],[198,6,197,4,"RESPONDER_RELEASE"],[198,23,197,21],[198,25,197,23,"States"],[198,31,197,29],[198,32,197,30,"ERROR"],[198,37,197,35],[199,6,198,4,"RESPONDER_TERMINATED"],[199,26,198,24],[199,28,198,26,"States"],[199,34,198,32],[199,35,198,33,"ERROR"],[199,40,198,38],[200,6,199,4,"ENTER_PRESS_RECT"],[200,22,199,20],[200,24,199,22,"States"],[200,30,199,28],[200,31,199,29,"ERROR"],[200,36,199,34],[201,6,200,4,"LEAVE_PRESS_RECT"],[201,22,200,20],[201,24,200,22,"States"],[201,30,200,28],[201,31,200,29,"ERROR"],[201,36,200,34],[202,6,201,4,"LONG_PRESS_DETECTED"],[202,25,201,23],[202,27,201,25,"States"],[202,33,201,31],[202,34,201,32,"ERROR"],[203,4,202,2],[203,5,202,3],[204,4,203,2,"RESPONDER_INACTIVE_PRESS_IN"],[204,31,203,29],[204,33,203,31],[205,6,204,4,"DELAY"],[205,11,204,9],[205,13,204,11,"States"],[205,19,204,17],[205,20,204,18,"RESPONDER_ACTIVE_PRESS_IN"],[205,45,204,43],[206,6,205,4,"RESPONDER_GRANT"],[206,21,205,19],[206,23,205,21,"States"],[206,29,205,27],[206,30,205,28,"ERROR"],[206,35,205,33],[207,6,206,4,"RESPONDER_RELEASE"],[207,23,206,21],[207,25,206,23,"States"],[207,31,206,29],[207,32,206,30,"NOT_RESPONDER"],[207,45,206,43],[208,6,207,4,"RESPONDER_TERMINATED"],[208,26,207,24],[208,28,207,26,"States"],[208,34,207,32],[208,35,207,33,"NOT_RESPONDER"],[208,48,207,46],[209,6,208,4,"ENTER_PRESS_RECT"],[209,22,208,20],[209,24,208,22,"States"],[209,30,208,28],[209,31,208,29,"RESPONDER_INACTIVE_PRESS_IN"],[209,58,208,56],[210,6,209,4,"LEAVE_PRESS_RECT"],[210,22,209,20],[210,24,209,22,"States"],[210,30,209,28],[210,31,209,29,"RESPONDER_INACTIVE_PRESS_OUT"],[210,59,209,57],[211,6,210,4,"LONG_PRESS_DETECTED"],[211,25,210,23],[211,27,210,25,"States"],[211,33,210,31],[211,34,210,32,"ERROR"],[212,4,211,2],[212,5,211,3],[213,4,212,2,"RESPONDER_INACTIVE_PRESS_OUT"],[213,32,212,30],[213,34,212,32],[214,6,213,4,"DELAY"],[214,11,213,9],[214,13,213,11,"States"],[214,19,213,17],[214,20,213,18,"RESPONDER_ACTIVE_PRESS_OUT"],[214,46,213,44],[215,6,214,4,"RESPONDER_GRANT"],[215,21,214,19],[215,23,214,21,"States"],[215,29,214,27],[215,30,214,28,"ERROR"],[215,35,214,33],[216,6,215,4,"RESPONDER_RELEASE"],[216,23,215,21],[216,25,215,23,"States"],[216,31,215,29],[216,32,215,30,"NOT_RESPONDER"],[216,45,215,43],[217,6,216,4,"RESPONDER_TERMINATED"],[217,26,216,24],[217,28,216,26,"States"],[217,34,216,32],[217,35,216,33,"NOT_RESPONDER"],[217,48,216,46],[218,6,217,4,"ENTER_PRESS_RECT"],[218,22,217,20],[218,24,217,22,"States"],[218,30,217,28],[218,31,217,29,"RESPONDER_INACTIVE_PRESS_IN"],[218,58,217,56],[219,6,218,4,"LEAVE_PRESS_RECT"],[219,22,218,20],[219,24,218,22,"States"],[219,30,218,28],[219,31,218,29,"RESPONDER_INACTIVE_PRESS_OUT"],[219,59,218,57],[220,6,219,4,"LONG_PRESS_DETECTED"],[220,25,219,23],[220,27,219,25,"States"],[220,33,219,31],[220,34,219,32,"ERROR"],[221,4,220,2],[221,5,220,3],[222,4,221,2,"RESPONDER_ACTIVE_PRESS_IN"],[222,29,221,27],[222,31,221,29],[223,6,222,4,"DELAY"],[223,11,222,9],[223,13,222,11,"States"],[223,19,222,17],[223,20,222,18,"ERROR"],[223,25,222,23],[224,6,223,4,"RESPONDER_GRANT"],[224,21,223,19],[224,23,223,21,"States"],[224,29,223,27],[224,30,223,28,"ERROR"],[224,35,223,33],[225,6,224,4,"RESPONDER_RELEASE"],[225,23,224,21],[225,25,224,23,"States"],[225,31,224,29],[225,32,224,30,"NOT_RESPONDER"],[225,45,224,43],[226,6,225,4,"RESPONDER_TERMINATED"],[226,26,225,24],[226,28,225,26,"States"],[226,34,225,32],[226,35,225,33,"NOT_RESPONDER"],[226,48,225,46],[227,6,226,4,"ENTER_PRESS_RECT"],[227,22,226,20],[227,24,226,22,"States"],[227,30,226,28],[227,31,226,29,"RESPONDER_ACTIVE_PRESS_IN"],[227,56,226,54],[228,6,227,4,"LEAVE_PRESS_RECT"],[228,22,227,20],[228,24,227,22,"States"],[228,30,227,28],[228,31,227,29,"RESPONDER_ACTIVE_PRESS_OUT"],[228,57,227,55],[229,6,228,4,"LONG_PRESS_DETECTED"],[229,25,228,23],[229,27,228,25,"States"],[229,33,228,31],[229,34,228,32,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[230,4,229,2],[230,5,229,3],[231,4,230,2,"RESPONDER_ACTIVE_PRESS_OUT"],[231,30,230,28],[231,32,230,30],[232,6,231,4,"DELAY"],[232,11,231,9],[232,13,231,11,"States"],[232,19,231,17],[232,20,231,18,"ERROR"],[232,25,231,23],[233,6,232,4,"RESPONDER_GRANT"],[233,21,232,19],[233,23,232,21,"States"],[233,29,232,27],[233,30,232,28,"ERROR"],[233,35,232,33],[234,6,233,4,"RESPONDER_RELEASE"],[234,23,233,21],[234,25,233,23,"States"],[234,31,233,29],[234,32,233,30,"NOT_RESPONDER"],[234,45,233,43],[235,6,234,4,"RESPONDER_TERMINATED"],[235,26,234,24],[235,28,234,26,"States"],[235,34,234,32],[235,35,234,33,"NOT_RESPONDER"],[235,48,234,46],[236,6,235,4,"ENTER_PRESS_RECT"],[236,22,235,20],[236,24,235,22,"States"],[236,30,235,28],[236,31,235,29,"RESPONDER_ACTIVE_PRESS_IN"],[236,56,235,54],[237,6,236,4,"LEAVE_PRESS_RECT"],[237,22,236,20],[237,24,236,22,"States"],[237,30,236,28],[237,31,236,29,"RESPONDER_ACTIVE_PRESS_OUT"],[237,57,236,55],[238,6,237,4,"LONG_PRESS_DETECTED"],[238,25,237,23],[238,27,237,25,"States"],[238,33,237,31],[238,34,237,32,"ERROR"],[239,4,238,2],[239,5,238,3],[240,4,239,2,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[240,34,239,32],[240,36,239,34],[241,6,240,4,"DELAY"],[241,11,240,9],[241,13,240,11,"States"],[241,19,240,17],[241,20,240,18,"ERROR"],[241,25,240,23],[242,6,241,4,"RESPONDER_GRANT"],[242,21,241,19],[242,23,241,21,"States"],[242,29,241,27],[242,30,241,28,"ERROR"],[242,35,241,33],[243,6,242,4,"RESPONDER_RELEASE"],[243,23,242,21],[243,25,242,23,"States"],[243,31,242,29],[243,32,242,30,"NOT_RESPONDER"],[243,45,242,43],[244,6,243,4,"RESPONDER_TERMINATED"],[244,26,243,24],[244,28,243,26,"States"],[244,34,243,32],[244,35,243,33,"NOT_RESPONDER"],[244,48,243,46],[245,6,244,4,"ENTER_PRESS_RECT"],[245,22,244,20],[245,24,244,22,"States"],[245,30,244,28],[245,31,244,29,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[245,61,244,59],[246,6,245,4,"LEAVE_PRESS_RECT"],[246,22,245,20],[246,24,245,22,"States"],[246,30,245,28],[246,31,245,29,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[246,62,245,60],[247,6,246,4,"LONG_PRESS_DETECTED"],[247,25,246,23],[247,27,246,25,"States"],[247,33,246,31],[247,34,246,32,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[248,4,247,2],[248,5,247,3],[249,4,248,2,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[249,35,248,33],[249,37,248,35],[250,6,249,4,"DELAY"],[250,11,249,9],[250,13,249,11,"States"],[250,19,249,17],[250,20,249,18,"ERROR"],[250,25,249,23],[251,6,250,4,"RESPONDER_GRANT"],[251,21,250,19],[251,23,250,21,"States"],[251,29,250,27],[251,30,250,28,"ERROR"],[251,35,250,33],[252,6,251,4,"RESPONDER_RELEASE"],[252,23,251,21],[252,25,251,23,"States"],[252,31,251,29],[252,32,251,30,"NOT_RESPONDER"],[252,45,251,43],[253,6,252,4,"RESPONDER_TERMINATED"],[253,26,252,24],[253,28,252,26,"States"],[253,34,252,32],[253,35,252,33,"NOT_RESPONDER"],[253,48,252,46],[254,6,253,4,"ENTER_PRESS_RECT"],[254,22,253,20],[254,24,253,22,"States"],[254,30,253,28],[254,31,253,29,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[254,61,253,59],[255,6,254,4,"LEAVE_PRESS_RECT"],[255,22,254,20],[255,24,254,22,"States"],[255,30,254,28],[255,31,254,29,"RESPONDER_ACTIVE_LONG_PRESS_OUT"],[255,62,254,60],[256,6,255,4,"LONG_PRESS_DETECTED"],[256,25,255,23],[256,27,255,25,"States"],[256,33,255,31],[256,34,255,32,"ERROR"],[257,4,256,2],[257,5,256,3],[258,4,257,2,"error"],[258,9,257,7],[258,11,257,9],[259,6,258,4,"DELAY"],[259,11,258,9],[259,13,258,11,"States"],[259,19,258,17],[259,20,258,18,"NOT_RESPONDER"],[259,33,258,31],[260,6,259,4,"RESPONDER_GRANT"],[260,21,259,19],[260,23,259,21,"States"],[260,29,259,27],[260,30,259,28,"RESPONDER_INACTIVE_PRESS_IN"],[260,57,259,55],[261,6,260,4,"RESPONDER_RELEASE"],[261,23,260,21],[261,25,260,23,"States"],[261,31,260,29],[261,32,260,30,"NOT_RESPONDER"],[261,45,260,43],[262,6,261,4,"RESPONDER_TERMINATED"],[262,26,261,24],[262,28,261,26,"States"],[262,34,261,32],[262,35,261,33,"NOT_RESPONDER"],[262,48,261,46],[263,6,262,4,"ENTER_PRESS_RECT"],[263,22,262,20],[263,24,262,22,"States"],[263,30,262,28],[263,31,262,29,"NOT_RESPONDER"],[263,44,262,42],[264,6,263,4,"LEAVE_PRESS_RECT"],[264,22,263,20],[264,24,263,22,"States"],[264,30,263,28],[264,31,263,29,"NOT_RESPONDER"],[264,44,263,42],[265,6,264,4,"LONG_PRESS_DETECTED"],[265,25,264,23],[265,27,264,25,"States"],[265,33,264,31],[265,34,264,32,"NOT_RESPONDER"],[266,4,265,2],[267,2,266,0],[267,3,266,1],[269,2,268,0],[270,2,269,0],[271,2,270,0],[272,2,271,0],[272,6,271,4,"HIGHLIGHT_DELAY_MS"],[272,24,271,22],[272,27,271,25],[272,30,271,28],[273,2,272,0],[273,6,272,4,"PRESS_EXPAND_PX"],[273,21,272,19],[273,24,272,22],[273,26,272,24],[274,2,273,0],[274,6,273,4,"LONG_PRESS_THRESHOLD"],[274,26,273,24],[274,29,273,27],[274,32,273,30],[275,2,274,0],[275,6,274,4,"LONG_PRESS_DELAY_MS"],[275,25,274,23],[275,28,274,26,"LONG_PRESS_THRESHOLD"],[275,48,274,46],[275,51,274,49,"HIGHLIGHT_DELAY_MS"],[275,69,274,67],[276,2,275,0],[276,6,275,4,"LONG_PRESS_ALLOWED_MOVEMENT"],[276,33,275,31],[276,36,275,34],[276,38,275,36],[278,2,277,0],[280,2,279,0],[281,0,280,0],[282,0,281,0],[283,0,282,0],[284,0,283,0],[285,0,284,0],[286,0,285,0],[287,0,286,0],[288,0,287,0],[289,0,288,0],[290,0,289,0],[291,0,290,0],[292,0,291,0],[293,0,292,0],[294,0,293,0],[295,0,294,0],[296,0,295,0],[297,0,296,0],[298,0,297,0],[299,0,298,0],[300,0,299,0],[301,0,300,0],[302,0,301,0],[303,0,302,0],[304,0,303,0],[305,0,304,0],[306,0,305,0],[307,0,306,0],[308,0,307,0],[309,0,308,0],[310,0,309,0],[311,0,310,0],[312,0,311,0],[313,0,312,0],[314,0,313,0],[315,0,314,0],[316,0,315,0],[317,0,316,0],[318,0,317,0],[319,0,318,0],[320,0,319,0],[321,0,320,0],[322,0,321,0],[323,0,322,0],[324,0,323,0],[325,0,324,0],[326,0,325,0],[327,0,326,0],[328,0,327,0],[329,0,328,0],[330,0,329,0],[331,0,330,0],[332,0,331,0],[333,0,332,0],[334,0,333,0],[335,0,334,0],[336,0,335,0],[337,0,336,0],[338,0,337,0],[339,0,338,0],[340,0,339,0],[341,0,340,0],[342,0,341,0],[343,0,342,0],[344,2,343,0],[344,6,343,4,"TouchableMixin"],[344,20,343,18],[344,23,343,21],[345,4,344,2],[346,4,345,2,"componentDidMount"],[346,21,345,19],[346,23,345,21],[346,32,345,30,"componentDidMount"],[346,49,345,47,"componentDidMount"],[346,50,345,47],[346,52,345,50],[347,6,346,4],[347,7,346,5],[347,8,346,6],[347,10,346,8,"_warnOnce"],[347,19,346,17],[347,20,346,18,"warnOnce"],[347,28,346,26],[347,30,346,28],[347,46,346,44],[347,48,346,46],[347,101,346,99],[347,102,346,100],[348,6,347,4],[348,10,347,8,"touchableNode"],[348,23,347,21],[348,26,347,24],[348,30,347,28],[348,31,347,29,"getTouchableNode"],[348,47,347,45],[348,51,347,49],[348,55,347,53],[348,56,347,54,"getTouchableNode"],[348,72,347,70],[348,73,347,71],[348,74,347,72],[349,6,348,4],[349,10,348,8,"touchableNode"],[349,23,348,21],[349,27,348,25,"touchableNode"],[349,40,348,38],[349,41,348,39,"addEventListener"],[349,57,348,55],[349,59,348,57],[350,8,349,6],[350,12,349,10],[350,13,349,11,"_touchableBlurListener"],[350,35,349,33],[350,38,349,36,"e"],[350,39,349,37],[350,43,349,41],[351,10,350,8],[351,14,350,12],[351,18,350,16],[351,19,350,17,"_isTouchableKeyboardActive"],[351,45,350,43],[351,47,350,45],[352,12,351,10],[352,16,351,14],[352,20,351,18],[352,21,351,19,"state"],[352,26,351,24],[352,27,351,25,"touchable"],[352,36,351,34],[352,37,351,35,"touchState"],[352,47,351,45],[352,51,351,49],[352,55,351,53],[352,56,351,54,"state"],[352,61,351,59],[352,62,351,60,"touchable"],[352,71,351,69],[352,72,351,70,"touchState"],[352,82,351,80],[352,87,351,85,"States"],[352,93,351,91],[352,94,351,92,"NOT_RESPONDER"],[352,107,351,105],[352,109,351,107],[353,14,352,12],[353,18,352,16],[353,19,352,17,"touchableHandleResponderTerminate"],[353,52,352,50],[353,53,352,51],[354,16,353,14,"nativeEvent"],[354,27,353,25],[354,29,353,27,"e"],[355,14,354,12],[355,15,354,13],[355,16,354,14],[356,12,355,10],[357,12,356,10],[357,16,356,14],[357,17,356,15,"_isTouchableKeyboardActive"],[357,43,356,41],[357,46,356,44],[357,51,356,49],[358,10,357,8],[359,8,358,6],[359,9,358,7],[360,8,359,6,"touchableNode"],[360,21,359,19],[360,22,359,20,"addEventListener"],[360,38,359,36],[360,39,359,37],[360,45,359,43],[360,47,359,45],[360,51,359,49],[360,52,359,50,"_touchableBlurListener"],[360,74,359,72],[360,75,359,73],[361,6,360,4],[362,4,361,2],[362,5,361,3],[363,4,362,2],[364,0,363,0],[365,0,364,0],[366,4,365,2,"componentWillUnmount"],[366,24,365,22],[366,26,365,24],[366,35,365,33,"componentWillUnmount"],[366,55,365,53,"componentWillUnmount"],[366,56,365,53],[366,58,365,56],[367,6,366,4],[367,10,366,8,"touchableNode"],[367,23,366,21],[367,26,366,24],[367,30,366,28],[367,31,366,29,"getTouchableNode"],[367,47,366,45],[367,51,366,49],[367,55,366,53],[367,56,366,54,"getTouchableNode"],[367,72,366,70],[367,73,366,71],[367,74,366,72],[368,6,367,4],[368,10,367,8,"touchableNode"],[368,23,367,21],[368,27,367,25,"touchableNode"],[368,40,367,38],[368,41,367,39,"addEventListener"],[368,57,367,55],[368,59,367,57],[369,8,368,6,"touchableNode"],[369,21,368,19],[369,22,368,20,"removeEventListener"],[369,41,368,39],[369,42,368,40],[369,48,368,46],[369,50,368,48],[369,54,368,52],[369,55,368,53,"_touchableBlurListener"],[369,77,368,75],[369,78,368,76],[370,6,369,4],[371,6,370,4],[371,10,370,8],[371,11,370,9,"touchableDelayTimeout"],[371,32,370,30],[371,36,370,34,"clearTimeout"],[371,48,370,46],[371,49,370,47],[371,53,370,51],[371,54,370,52,"touchableDelayTimeout"],[371,75,370,73],[371,76,370,74],[372,6,371,4],[372,10,371,8],[372,11,371,9,"longPressDelayTimeout"],[372,32,371,30],[372,36,371,34,"clearTimeout"],[372,48,371,46],[372,49,371,47],[372,53,371,51],[372,54,371,52,"longPressDelayTimeout"],[372,75,371,73],[372,76,371,74],[373,6,372,4],[373,10,372,8],[373,11,372,9,"pressOutDelayTimeout"],[373,31,372,29],[373,35,372,33,"clearTimeout"],[373,47,372,45],[373,48,372,46],[373,52,372,50],[373,53,372,51,"pressOutDelayTimeout"],[373,73,372,71],[373,74,372,72],[374,6,373,4],[375,6,374,4],[375,10,374,8],[375,11,374,9,"pressInLocation"],[375,26,374,24],[375,29,374,27],[375,33,374,31],[376,6,375,4],[376,10,375,8],[376,11,375,9,"state"],[376,16,375,14],[376,17,375,15,"touchable"],[376,26,375,24],[376,27,375,25,"responderID"],[376,38,375,36],[376,41,375,39],[376,45,375,43],[377,4,376,2],[377,5,376,3],[378,4,377,2],[379,0,378,0],[380,0,379,0],[381,0,380,0],[382,0,381,0],[383,0,382,0],[384,0,383,0],[385,4,384,2,"touchableGetInitialState"],[385,28,384,26],[385,30,384,28],[385,39,384,37,"touchableGetInitialState"],[385,63,384,61,"touchableGetInitialState"],[385,64,384,61],[385,66,384,64],[386,6,385,4],[386,13,385,11],[387,8,386,6,"touchable"],[387,17,386,15],[387,19,386,17],[388,10,387,8,"touchState"],[388,20,387,18],[388,22,387,20,"undefined"],[388,31,387,29],[389,10,388,8,"responderID"],[389,21,388,19],[389,23,388,21],[390,8,389,6],[391,6,390,4],[391,7,390,5],[392,4,391,2],[392,5,391,3],[393,4,392,2],[394,4,393,2],[395,0,394,0],[396,0,395,0],[397,4,396,2,"touchableHandleResponderTerminationRequest"],[397,46,396,44],[397,48,396,46],[397,57,396,55,"touchableHandleResponderTerminationRequest"],[397,99,396,97,"touchableHandleResponderTerminationRequest"],[397,100,396,97],[397,102,396,100],[398,6,397,4],[398,13,397,11],[398,14,397,12],[398,18,397,16],[398,19,397,17,"props"],[398,24,397,22],[398,25,397,23,"rejectResponderTermination"],[398,51,397,49],[399,4,398,2],[399,5,398,3],[400,4,399,2],[401,0,400,0],[402,0,401,0],[403,4,402,2,"touchableHandleStartShouldSetResponder"],[403,42,402,40],[403,44,402,42],[403,53,402,51,"touchableHandleStartShouldSetResponder"],[403,91,402,89,"touchableHandleStartShouldSetResponder"],[403,92,402,89],[403,94,402,92],[404,6,403,4],[404,13,403,11],[404,14,403,12],[404,18,403,16],[404,19,403,17,"props"],[404,24,403,22],[404,25,403,23,"disabled"],[404,33,403,31],[405,4,404,2],[405,5,404,3],[406,4,405,2],[407,0,406,0],[408,0,407,0],[409,4,408,2,"touchableLongPressCancelsPress"],[409,34,408,32],[409,36,408,34],[409,45,408,43,"touchableLongPressCancelsPress"],[409,75,408,73,"touchableLongPressCancelsPress"],[409,76,408,73],[409,78,408,76],[410,6,409,4],[410,13,409,11],[410,17,409,15],[411,4,410,2],[411,5,410,3],[412,4,411,2],[413,0,412,0],[414,0,413,0],[415,0,414,0],[416,0,415,0],[417,4,416,2,"touchableHandleResponderGrant"],[417,33,416,31],[417,35,416,33],[417,44,416,42,"touchableHandleResponderGrant"],[417,73,416,71,"touchableHandleResponderGrant"],[417,74,416,72,"e"],[417,75,416,73],[417,77,416,75],[418,6,417,4],[418,10,417,8,"dispatchID"],[418,20,417,18],[418,23,417,21,"e"],[418,24,417,22],[418,25,417,23,"currentTarget"],[418,38,417,36],[419,6,418,4],[420,6,419,4],[421,6,420,4],[422,6,421,4,"e"],[422,7,421,5],[422,8,421,6,"persist"],[422,15,421,13],[422,16,421,14],[422,17,421,15],[423,6,422,4],[423,10,422,8],[423,11,422,9,"pressOutDelayTimeout"],[423,31,422,29],[423,35,422,33,"clearTimeout"],[423,47,422,45],[423,48,422,46],[423,52,422,50],[423,53,422,51,"pressOutDelayTimeout"],[423,73,422,71],[423,74,422,72],[424,6,423,4],[424,10,423,8],[424,11,423,9,"pressOutDelayTimeout"],[424,31,423,29],[424,34,423,32],[424,38,423,36],[425,6,424,4],[425,10,424,8],[425,11,424,9,"state"],[425,16,424,14],[425,17,424,15,"touchable"],[425,26,424,24],[425,27,424,25,"touchState"],[425,37,424,35],[425,40,424,38,"States"],[425,46,424,44],[425,47,424,45,"NOT_RESPONDER"],[425,60,424,58],[426,6,425,4],[426,10,425,8],[426,11,425,9,"state"],[426,16,425,14],[426,17,425,15,"touchable"],[426,26,425,24],[426,27,425,25,"responderID"],[426,38,425,36],[426,41,425,39,"dispatchID"],[426,51,425,49],[427,6,426,4],[427,10,426,8],[427,11,426,9,"_receiveSignal"],[427,25,426,23],[427,26,426,24,"Signals"],[427,33,426,31],[427,34,426,32,"RESPONDER_GRANT"],[427,49,426,47],[427,51,426,49,"e"],[427,52,426,50],[427,53,426,51],[428,6,427,4],[428,10,427,8,"delayMS"],[428,17,427,15],[428,20,427,18],[428,24,427,22],[428,25,427,23,"touchableGetHighlightDelayMS"],[428,53,427,51],[428,58,427,56,"undefined"],[428,67,427,65],[428,70,427,68,"Math"],[428,74,427,72],[428,75,427,73,"max"],[428,78,427,76],[428,79,427,77],[428,83,427,81],[428,84,427,82,"touchableGetHighlightDelayMS"],[428,112,427,110],[428,113,427,111],[428,114,427,112],[428,116,427,114],[428,117,427,115],[428,118,427,116],[428,121,427,119,"HIGHLIGHT_DELAY_MS"],[428,139,427,137],[429,6,428,4,"delayMS"],[429,13,428,11],[429,16,428,14,"isNaN"],[429,21,428,19],[429,22,428,20,"delayMS"],[429,29,428,27],[429,30,428,28],[429,33,428,31,"HIGHLIGHT_DELAY_MS"],[429,51,428,49],[429,54,428,52,"delayMS"],[429,61,428,59],[430,6,429,4],[430,10,429,8,"delayMS"],[430,17,429,15],[430,22,429,20],[430,23,429,21],[430,25,429,23],[431,8,430,6],[431,12,430,10],[431,13,430,11,"touchableDelayTimeout"],[431,34,430,32],[431,37,430,35,"setTimeout"],[431,47,430,45],[431,48,430,46],[431,52,430,50],[431,53,430,51,"_handleDelay"],[431,65,430,63],[431,66,430,64,"bind"],[431,70,430,68],[431,71,430,69],[431,75,430,73],[431,77,430,75,"e"],[431,78,430,76],[431,79,430,77],[431,81,430,79,"delayMS"],[431,88,430,86],[431,89,430,87],[432,6,431,4],[432,7,431,5],[432,13,431,11],[433,8,432,6],[433,12,432,10],[433,13,432,11,"_handleDelay"],[433,25,432,23],[433,26,432,24,"e"],[433,27,432,25],[433,28,432,26],[434,6,433,4],[435,6,434,4],[435,10,434,8,"longDelayMS"],[435,21,434,19],[435,24,434,22],[435,28,434,26],[435,29,434,27,"touchableGetLongPressDelayMS"],[435,57,434,55],[435,62,434,60,"undefined"],[435,71,434,69],[435,74,434,72,"Math"],[435,78,434,76],[435,79,434,77,"max"],[435,82,434,80],[435,83,434,81],[435,87,434,85],[435,88,434,86,"touchableGetLongPressDelayMS"],[435,116,434,114],[435,117,434,115],[435,118,434,116],[435,120,434,118],[435,122,434,120],[435,123,434,121],[435,126,434,124,"LONG_PRESS_DELAY_MS"],[435,145,434,143],[436,6,435,4,"longDelayMS"],[436,17,435,15],[436,20,435,18,"isNaN"],[436,25,435,23],[436,26,435,24,"longDelayMS"],[436,37,435,35],[436,38,435,36],[436,41,435,39,"LONG_PRESS_DELAY_MS"],[436,60,435,58],[436,63,435,61,"longDelayMS"],[436,74,435,72],[437,6,436,4],[437,10,436,8],[437,11,436,9,"longPressDelayTimeout"],[437,32,436,30],[437,35,436,33,"setTimeout"],[437,45,436,43],[437,46,436,44],[437,50,436,48],[437,51,436,49,"_handleLongDelay"],[437,67,436,65],[437,68,436,66,"bind"],[437,72,436,70],[437,73,436,71],[437,77,436,75],[437,79,436,77,"e"],[437,80,436,78],[437,81,436,79],[437,83,436,81,"longDelayMS"],[437,94,436,92],[437,97,436,95,"delayMS"],[437,104,436,102],[437,105,436,103],[438,4,437,2],[438,5,437,3],[439,4,438,2],[440,0,439,0],[441,0,440,0],[442,4,441,2,"touchableHandleResponderRelease"],[442,35,441,33],[442,37,441,35],[442,46,441,44,"touchableHandleResponderRelease"],[442,77,441,75,"touchableHandleResponderRelease"],[442,78,441,76,"e"],[442,79,441,77],[442,81,441,79],[443,6,442,4],[443,10,442,8],[443,11,442,9,"pressInLocation"],[443,26,442,24],[443,29,442,27],[443,33,442,31],[444,6,443,4],[444,10,443,8],[444,11,443,9,"_receiveSignal"],[444,25,443,23],[444,26,443,24,"Signals"],[444,33,443,31],[444,34,443,32,"RESPONDER_RELEASE"],[444,51,443,49],[444,53,443,51,"e"],[444,54,443,52],[444,55,443,53],[445,4,444,2],[445,5,444,3],[446,4,445,2],[447,0,446,0],[448,0,447,0],[449,4,448,2,"touchableHandleResponderTerminate"],[449,37,448,35],[449,39,448,37],[449,48,448,46,"touchableHandleResponderTerminate"],[449,81,448,79,"touchableHandleResponderTerminate"],[449,82,448,80,"e"],[449,83,448,81],[449,85,448,83],[450,6,449,4],[450,10,449,8],[450,11,449,9,"pressInLocation"],[450,26,449,24],[450,29,449,27],[450,33,449,31],[451,6,450,4],[451,10,450,8],[451,11,450,9,"_receiveSignal"],[451,25,450,23],[451,26,450,24,"Signals"],[451,33,450,31],[451,34,450,32,"RESPONDER_TERMINATED"],[451,54,450,52],[451,56,450,54,"e"],[451,57,450,55],[451,58,450,56],[452,4,451,2],[452,5,451,3],[453,4,452,2],[454,0,453,0],[455,0,454,0],[456,4,455,2,"touchableHandleResponderMove"],[456,32,455,30],[456,34,455,32],[456,43,455,41,"touchableHandleResponderMove"],[456,71,455,69,"touchableHandleResponderMove"],[456,72,455,70,"e"],[456,73,455,71],[456,75,455,73],[457,6,456,4],[458,6,457,4],[458,10,457,8],[458,11,457,9],[458,15,457,13],[458,16,457,14,"state"],[458,21,457,19],[458,22,457,20,"touchable"],[458,31,457,29],[458,32,457,30,"positionOnActivate"],[458,50,457,48],[458,52,457,50],[459,8,458,6],[460,6,459,4],[461,6,460,4],[461,10,460,8,"positionOnActivate"],[461,28,460,26],[461,31,460,29],[461,35,460,33],[461,36,460,34,"state"],[461,41,460,39],[461,42,460,40,"touchable"],[461,51,460,49],[461,52,460,50,"positionOnActivate"],[461,70,460,68],[462,6,461,4],[462,10,461,8,"dimensionsOnActivate"],[462,30,461,28],[462,33,461,31],[462,37,461,35],[462,38,461,36,"state"],[462,43,461,41],[462,44,461,42,"touchable"],[462,53,461,51],[462,54,461,52,"dimensionsOnActivate"],[462,74,461,72],[463,6,462,4],[463,10,462,8,"pressRectOffset"],[463,25,462,23],[463,28,462,26],[463,32,462,30],[463,33,462,31,"touchableGetPressRectOffset"],[463,60,462,58],[463,63,462,61],[463,67,462,65],[463,68,462,66,"touchableGetPressRectOffset"],[463,95,462,93],[463,96,462,94],[463,97,462,95],[463,100,462,98],[464,8,463,6,"left"],[464,12,463,10],[464,14,463,12,"PRESS_EXPAND_PX"],[464,29,463,27],[465,8,464,6,"right"],[465,13,464,11],[465,15,464,13,"PRESS_EXPAND_PX"],[465,30,464,28],[466,8,465,6,"top"],[466,11,465,9],[466,13,465,11,"PRESS_EXPAND_PX"],[466,28,465,26],[467,8,466,6,"bottom"],[467,14,466,12],[467,16,466,14,"PRESS_EXPAND_PX"],[468,6,467,4],[468,7,467,5],[469,6,468,4],[469,10,468,8,"pressExpandLeft"],[469,25,468,23],[469,28,468,26,"pressRectOffset"],[469,43,468,41],[469,44,468,42,"left"],[469,48,468,46],[470,6,469,4],[470,10,469,8,"pressExpandTop"],[470,24,469,22],[470,27,469,25,"pressRectOffset"],[470,42,469,40],[470,43,469,41,"top"],[470,46,469,44],[471,6,470,4],[471,10,470,8,"pressExpandRight"],[471,26,470,24],[471,29,470,27,"pressRectOffset"],[471,44,470,42],[471,45,470,43,"right"],[471,50,470,48],[472,6,471,4],[472,10,471,8,"pressExpandBottom"],[472,27,471,25],[472,30,471,28,"pressRectOffset"],[472,45,471,43],[472,46,471,44,"bottom"],[472,52,471,50],[473,6,472,4],[473,10,472,8,"hitSlop"],[473,17,472,15],[473,20,472,18],[473,24,472,22],[473,25,472,23,"touchableGetHitSlop"],[473,44,472,42],[473,47,472,45],[473,51,472,49],[473,52,472,50,"touchableGetHitSlop"],[473,71,472,69],[473,72,472,70],[473,73,472,71],[473,76,472,74],[473,80,472,78],[474,6,473,4],[474,10,473,8,"hitSlop"],[474,17,473,15],[474,19,473,17],[475,8,474,6,"pressExpandLeft"],[475,23,474,21],[475,27,474,25,"hitSlop"],[475,34,474,32],[475,35,474,33,"left"],[475,39,474,37],[475,43,474,41],[475,44,474,42],[476,8,475,6,"pressExpandTop"],[476,22,475,20],[476,26,475,24,"hitSlop"],[476,33,475,31],[476,34,475,32,"top"],[476,37,475,35],[476,41,475,39],[476,42,475,40],[477,8,476,6,"pressExpandRight"],[477,24,476,22],[477,28,476,26,"hitSlop"],[477,35,476,33],[477,36,476,34,"right"],[477,41,476,39],[477,45,476,43],[477,46,476,44],[478,8,477,6,"pressExpandBottom"],[478,25,477,23],[478,29,477,27,"hitSlop"],[478,36,477,34],[478,37,477,35,"bottom"],[478,43,477,41],[478,47,477,45],[478,48,477,46],[479,6,478,4],[480,6,479,4],[480,10,479,8,"touch"],[480,15,479,13],[480,18,479,16,"extractSingleTouch"],[480,36,479,34],[480,37,479,35,"e"],[480,38,479,36],[480,39,479,37,"nativeEvent"],[480,50,479,48],[480,51,479,49],[481,6,480,4],[481,10,480,8,"pageX"],[481,15,480,13],[481,18,480,16,"touch"],[481,23,480,21],[481,27,480,25,"touch"],[481,32,480,30],[481,33,480,31,"pageX"],[481,38,480,36],[482,6,481,4],[482,10,481,8,"pageY"],[482,15,481,13],[482,18,481,16,"touch"],[482,23,481,21],[482,27,481,25,"touch"],[482,32,481,30],[482,33,481,31,"pageY"],[482,38,481,36],[483,6,482,4],[483,10,482,8],[483,14,482,12],[483,15,482,13,"pressInLocation"],[483,30,482,28],[483,32,482,30],[484,8,483,6],[484,12,483,10,"movedDistance"],[484,25,483,23],[484,28,483,26],[484,32,483,30],[484,33,483,31,"_getDistanceBetweenPoints"],[484,58,483,56],[484,59,483,57,"pageX"],[484,64,483,62],[484,66,483,64,"pageY"],[484,71,483,69],[484,73,483,71],[484,77,483,75],[484,78,483,76,"pressInLocation"],[484,93,483,91],[484,94,483,92,"pageX"],[484,99,483,97],[484,101,483,99],[484,105,483,103],[484,106,483,104,"pressInLocation"],[484,121,483,119],[484,122,483,120,"pageY"],[484,127,483,125],[484,128,483,126],[485,8,484,6],[485,12,484,10,"movedDistance"],[485,25,484,23],[485,28,484,26,"LONG_PRESS_ALLOWED_MOVEMENT"],[485,55,484,53],[485,57,484,55],[486,10,485,8],[486,14,485,12],[486,15,485,13,"_cancelLongPressDelayTimeout"],[486,43,485,41],[486,44,485,42],[486,45,485,43],[487,8,486,6],[488,6,487,4],[489,6,488,4],[489,10,488,8,"isTouchWithinActive"],[489,29,488,27],[489,32,488,30,"pageX"],[489,37,488,35],[489,40,488,38,"positionOnActivate"],[489,58,488,56],[489,59,488,57,"left"],[489,63,488,61],[489,66,488,64,"pressExpandLeft"],[489,81,488,79],[489,85,488,83,"pageY"],[489,90,488,88],[489,93,488,91,"positionOnActivate"],[489,111,488,109],[489,112,488,110,"top"],[489,115,488,113],[489,118,488,116,"pressExpandTop"],[489,132,488,130],[489,136,488,134,"pageX"],[489,141,488,139],[489,144,488,142,"positionOnActivate"],[489,162,488,160],[489,163,488,161,"left"],[489,167,488,165],[489,170,488,168,"dimensionsOnActivate"],[489,190,488,188],[489,191,488,189,"width"],[489,196,488,194],[489,199,488,197,"pressExpandRight"],[489,215,488,213],[489,219,488,217,"pageY"],[489,224,488,222],[489,227,488,225,"positionOnActivate"],[489,245,488,243],[489,246,488,244,"top"],[489,249,488,247],[489,252,488,250,"dimensionsOnActivate"],[489,272,488,270],[489,273,488,271,"height"],[489,279,488,277],[489,282,488,280,"pressExpandBottom"],[489,299,488,297],[490,6,489,4],[490,10,489,8,"isTouchWithinActive"],[490,29,489,27],[490,31,489,29],[491,8,490,6],[491,12,490,10,"prevState"],[491,21,490,19],[491,24,490,22],[491,28,490,26],[491,29,490,27,"state"],[491,34,490,32],[491,35,490,33,"touchable"],[491,44,490,42],[491,45,490,43,"touchState"],[491,55,490,53],[492,8,491,6],[492,12,491,10],[492,13,491,11,"_receiveSignal"],[492,27,491,25],[492,28,491,26,"Signals"],[492,35,491,33],[492,36,491,34,"ENTER_PRESS_RECT"],[492,52,491,50],[492,54,491,52,"e"],[492,55,491,53],[492,56,491,54],[493,8,492,6],[493,12,492,10,"curState"],[493,20,492,18],[493,23,492,21],[493,27,492,25],[493,28,492,26,"state"],[493,33,492,31],[493,34,492,32,"touchable"],[493,43,492,41],[493,44,492,42,"touchState"],[493,54,492,52],[494,8,493,6],[494,12,493,10,"curState"],[494,20,493,18],[494,25,493,23,"States"],[494,31,493,29],[494,32,493,30,"RESPONDER_INACTIVE_PRESS_IN"],[494,59,493,57],[494,63,493,61,"prevState"],[494,72,493,70],[494,77,493,75,"States"],[494,83,493,81],[494,84,493,82,"RESPONDER_INACTIVE_PRESS_IN"],[494,111,493,109],[494,113,493,111],[495,10,494,8],[496,10,495,8],[496,14,495,12],[496,15,495,13,"_cancelLongPressDelayTimeout"],[496,43,495,41],[496,44,495,42],[496,45,495,43],[497,8,496,6],[498,6,497,4],[498,7,497,5],[498,13,497,11],[499,8,498,6],[499,12,498,10],[499,13,498,11,"_cancelLongPressDelayTimeout"],[499,41,498,39],[499,42,498,40],[499,43,498,41],[500,8,499,6],[500,12,499,10],[500,13,499,11,"_receiveSignal"],[500,27,499,25],[500,28,499,26,"Signals"],[500,35,499,33],[500,36,499,34,"LEAVE_PRESS_RECT"],[500,52,499,50],[500,54,499,52,"e"],[500,55,499,53],[500,56,499,54],[501,6,500,4],[502,4,501,2],[502,5,501,3],[503,4,502,2],[504,0,503,0],[505,0,504,0],[506,0,505,0],[507,0,506,0],[508,0,507,0],[509,0,508,0],[510,0,509,0],[511,4,510,2,"touchableHandleFocus"],[511,24,510,22],[511,26,510,24],[511,35,510,33,"touchableHandleFocus"],[511,55,510,53,"touchableHandleFocus"],[511,56,510,54,"e"],[511,57,510,55],[511,59,510,57],[512,6,511,4],[512,10,511,8],[512,11,511,9,"props"],[512,16,511,14],[512,17,511,15,"onFocus"],[512,24,511,22],[512,28,511,26],[512,32,511,30],[512,33,511,31,"props"],[512,38,511,36],[512,39,511,37,"onFocus"],[512,46,511,44],[512,47,511,45,"e"],[512,48,511,46],[512,49,511,47],[513,4,512,2],[513,5,512,3],[514,4,513,2],[515,0,514,0],[516,0,515,0],[517,0,516,0],[518,0,517,0],[519,0,518,0],[520,0,519,0],[521,0,520,0],[522,4,521,2,"touchableHandleBlur"],[522,23,521,21],[522,25,521,23],[522,34,521,32,"touchableHandleBlur"],[522,53,521,51,"touchableHandleBlur"],[522,54,521,52,"e"],[522,55,521,53],[522,57,521,55],[523,6,522,4],[523,10,522,8],[523,11,522,9,"props"],[523,16,522,14],[523,17,522,15,"onBlur"],[523,23,522,21],[523,27,522,25],[523,31,522,29],[523,32,522,30,"props"],[523,37,522,35],[523,38,522,36,"onBlur"],[523,44,522,42],[523,45,522,43,"e"],[523,46,522,44],[523,47,522,45],[524,4,523,2],[524,5,523,3],[525,4,524,2],[527,4,526,2],[528,0,527,0],[529,0,528,0],[530,0,529,0],[531,0,530,0],[532,0,531,0],[533,0,532,0],[534,0,533,0],[536,4,535,2],[537,0,536,0],[538,0,537,0],[539,0,538,0],[540,0,539,0],[541,0,540,0],[542,0,541,0],[543,0,542,0],[544,0,543,0],[545,0,544,0],[546,0,545,0],[547,0,546,0],[549,4,548,2],[550,0,549,0],[551,0,550,0],[552,0,551,0],[553,0,552,0],[554,0,553,0],[555,0,554,0],[556,0,555,0],[558,4,557,2],[559,0,558,0],[560,0,559,0],[561,0,560,0],[562,0,561,0],[563,0,562,0],[564,0,563,0],[565,0,564,0],[566,0,565,0],[567,0,566,0],[568,0,567,0],[569,0,568,0],[570,0,569,0],[572,4,571,2],[573,0,572,0],[574,0,573,0],[575,0,574,0],[576,0,575,0],[577,0,576,0],[579,4,578,2],[580,0,579,0],[581,0,580,0],[582,0,581,0],[583,0,582,0],[584,0,583,0],[585,0,584,0],[587,4,586,2],[589,4,588,2],[590,0,589,0],[591,0,590,0],[592,0,591,0],[593,0,592,0],[594,0,593,0],[595,0,594,0],[596,0,595,0],[597,0,596,0],[598,0,597,0],[599,0,598,0],[600,0,599,0],[601,4,600,2,"_remeasureMetricsOnActivation"],[601,33,600,31],[601,35,600,33],[601,44,600,42,"_remeasureMetricsOnActivation"],[601,73,600,71,"_remeasureMetricsOnActivation"],[601,74,600,71],[601,76,600,74],[602,6,601,4],[602,10,601,8,"tag"],[602,13,601,11],[602,16,601,14],[602,20,601,18],[602,21,601,19,"state"],[602,26,601,24],[602,27,601,25,"touchable"],[602,36,601,34],[602,37,601,35,"responderID"],[602,48,601,46],[603,6,602,4],[603,10,602,8,"tag"],[603,13,602,11],[603,17,602,15],[603,21,602,19],[603,23,602,21],[604,8,603,6],[605,6,604,4],[606,6,605,4,"_UIManager"],[606,16,605,14],[606,17,605,15,"default"],[606,24,605,22],[606,25,605,23,"measure"],[606,32,605,30],[606,33,605,31,"tag"],[606,36,605,34],[606,38,605,36],[606,42,605,40],[606,43,605,41,"_handleQueryLayout"],[606,61,605,59],[606,62,605,60],[607,4,606,2],[607,5,606,3],[608,4,607,2,"_handleQueryLayout"],[608,22,607,20],[608,24,607,22],[608,33,607,31,"_handleQueryLayout"],[608,51,607,49,"_handleQueryLayout"],[608,52,607,50,"l"],[608,53,607,51],[608,55,607,53,"t"],[608,56,607,54],[608,58,607,56,"w"],[608,59,607,57],[608,61,607,59,"h"],[608,62,607,60],[608,64,607,62,"globalX"],[608,71,607,69],[608,73,607,71,"globalY"],[608,80,607,78],[608,82,607,80],[609,6,608,4],[610,6,609,4],[610,10,609,8],[610,11,609,9,"l"],[610,12,609,10],[610,16,609,14],[610,17,609,15,"t"],[610,18,609,16],[610,22,609,20],[610,23,609,21,"w"],[610,24,609,22],[610,28,609,26],[610,29,609,27,"h"],[610,30,609,28],[610,34,609,32],[610,35,609,33,"globalX"],[610,42,609,40],[610,46,609,44],[610,47,609,45,"globalY"],[610,54,609,52],[610,56,609,54],[611,8,610,6],[612,6,611,4],[613,6,612,4],[613,10,612,8],[613,11,612,9,"state"],[613,16,612,14],[613,17,612,15,"touchable"],[613,26,612,24],[613,27,612,25,"positionOnActivate"],[613,45,612,43],[613,49,612,47,"_Position"],[613,58,612,56],[613,59,612,57,"default"],[613,66,612,64],[613,67,612,65,"release"],[613,74,612,72],[613,75,612,73],[613,79,612,77],[613,80,612,78,"state"],[613,85,612,83],[613,86,612,84,"touchable"],[613,95,612,93],[613,96,612,94,"positionOnActivate"],[613,114,612,112],[613,115,612,113],[614,6,613,4],[614,10,613,8],[614,11,613,9,"state"],[614,16,613,14],[614,17,613,15,"touchable"],[614,26,613,24],[614,27,613,25,"dimensionsOnActivate"],[614,47,613,45],[615,6,614,4],[616,6,615,4,"_BoundingDimensions"],[616,25,615,23],[616,26,615,24,"default"],[616,33,615,31],[616,34,615,32,"release"],[616,41,615,39],[616,42,615,40],[616,46,615,44],[616,47,615,45,"state"],[616,52,615,50],[616,53,615,51,"touchable"],[616,62,615,60],[616,63,615,61,"dimensionsOnActivate"],[616,83,615,81],[616,84,615,82],[617,6,616,4],[617,10,616,8],[617,11,616,9,"state"],[617,16,616,14],[617,17,616,15,"touchable"],[617,26,616,24],[617,27,616,25,"positionOnActivate"],[617,45,616,43],[617,48,616,46,"_Position"],[617,57,616,55],[617,58,616,56,"default"],[617,65,616,63],[617,66,616,64,"getPooled"],[617,75,616,73],[617,76,616,74,"globalX"],[617,83,616,81],[617,85,616,83,"globalY"],[617,92,616,90],[617,93,616,91],[618,6,617,4],[619,6,618,4],[619,10,618,8],[619,11,618,9,"state"],[619,16,618,14],[619,17,618,15,"touchable"],[619,26,618,24],[619,27,618,25,"dimensionsOnActivate"],[619,47,618,45],[619,50,618,48,"_BoundingDimensions"],[619,69,618,67],[619,70,618,68,"default"],[619,77,618,75],[619,78,618,76,"getPooled"],[619,87,618,85],[619,88,618,86,"w"],[619,89,618,87],[619,91,618,89,"h"],[619,92,618,90],[619,93,618,91],[620,4,619,2],[620,5,619,3],[621,4,620,2,"_handleDelay"],[621,16,620,14],[621,18,620,16],[621,27,620,25,"_handleDelay"],[621,39,620,37,"_handleDelay"],[621,40,620,38,"e"],[621,41,620,39],[621,43,620,41],[622,6,621,4],[622,10,621,8],[622,11,621,9,"touchableDelayTimeout"],[622,32,621,30],[622,35,621,33],[622,39,621,37],[623,6,622,4],[623,10,622,8],[623,11,622,9,"_receiveSignal"],[623,25,622,23],[623,26,622,24,"Signals"],[623,33,622,31],[623,34,622,32,"DELAY"],[623,39,622,37],[623,41,622,39,"e"],[623,42,622,40],[623,43,622,41],[624,4,623,2],[624,5,623,3],[625,4,624,2,"_handleLongDelay"],[625,20,624,18],[625,22,624,20],[625,31,624,29,"_handleLongDelay"],[625,47,624,45,"_handleLongDelay"],[625,48,624,46,"e"],[625,49,624,47],[625,51,624,49],[626,6,625,4],[626,10,625,8],[626,11,625,9,"longPressDelayTimeout"],[626,32,625,30],[626,35,625,33],[626,39,625,37],[627,6,626,4],[627,10,626,8,"curState"],[627,18,626,16],[627,21,626,19],[627,25,626,23],[627,26,626,24,"state"],[627,31,626,29],[627,32,626,30,"touchable"],[627,41,626,39],[627,42,626,40,"touchState"],[627,52,626,50],[628,6,627,4],[628,10,627,8,"curState"],[628,18,627,16],[628,23,627,21,"States"],[628,29,627,27],[628,30,627,28,"RESPONDER_ACTIVE_PRESS_IN"],[628,55,627,53],[628,59,627,57,"curState"],[628,67,627,65],[628,72,627,70,"States"],[628,78,627,76],[628,79,627,77,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[628,109,627,107],[628,111,627,109],[629,8,628,6,"console"],[629,15,628,13],[629,16,628,14,"error"],[629,21,628,19],[629,22,628,20],[629,60,628,58],[629,63,628,61,"curState"],[629,71,628,69],[629,74,628,72],[629,82,628,80],[629,85,628,83,"States"],[629,91,628,89],[629,92,628,90,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[629,122,628,120],[629,125,628,123],[629,162,628,160],[629,165,628,163],[629,240,628,238],[629,241,628,239],[630,6,629,4],[630,7,629,5],[630,13,629,11],[631,8,630,6],[631,12,630,10],[631,13,630,11,"_receiveSignal"],[631,27,630,25],[631,28,630,26,"Signals"],[631,35,630,33],[631,36,630,34,"LONG_PRESS_DETECTED"],[631,55,630,53],[631,57,630,55,"e"],[631,58,630,56],[631,59,630,57],[632,6,631,4],[633,4,632,2],[633,5,632,3],[634,4,633,2],[635,0,634,0],[636,0,635,0],[637,0,636,0],[638,0,637,0],[639,0,638,0],[640,0,639,0],[641,0,640,0],[642,4,641,2,"_receiveSignal"],[642,18,641,16],[642,20,641,18],[642,29,641,27,"_receiveSignal"],[642,43,641,41,"_receiveSignal"],[642,44,641,42,"signal"],[642,50,641,48],[642,52,641,50,"e"],[642,53,641,51],[642,55,641,53],[643,6,642,4],[643,10,642,8,"responderID"],[643,21,642,19],[643,24,642,22],[643,28,642,26],[643,29,642,27,"state"],[643,34,642,32],[643,35,642,33,"touchable"],[643,44,642,42],[643,45,642,43,"responderID"],[643,56,642,54],[644,6,643,4],[644,10,643,8,"curState"],[644,18,643,16],[644,21,643,19],[644,25,643,23],[644,26,643,24,"state"],[644,31,643,29],[644,32,643,30,"touchable"],[644,41,643,39],[644,42,643,40,"touchState"],[644,52,643,50],[645,6,644,4],[645,10,644,8,"nextState"],[645,19,644,17],[645,22,644,20,"Transitions"],[645,33,644,31],[645,34,644,32,"curState"],[645,42,644,40],[645,43,644,41],[645,47,644,45,"Transitions"],[645,58,644,56],[645,59,644,57,"curState"],[645,67,644,65],[645,68,644,66],[645,69,644,67,"signal"],[645,75,644,73],[645,76,644,74],[646,6,645,4],[646,10,645,8],[646,11,645,9,"responderID"],[646,22,645,20],[646,26,645,24,"signal"],[646,32,645,30],[646,37,645,35,"Signals"],[646,44,645,42],[646,45,645,43,"RESPONDER_RELEASE"],[646,62,645,60],[646,64,645,62],[647,8,646,6],[648,6,647,4],[649,6,648,4],[649,10,648,8],[649,11,648,9,"nextState"],[649,20,648,18],[649,22,648,20],[650,8,649,6],[650,14,649,12],[650,18,649,16,"Error"],[650,23,649,21],[650,24,649,22],[650,47,649,45],[650,50,649,48,"signal"],[650,56,649,54],[650,59,649,57],[650,73,649,71],[650,76,649,74,"curState"],[650,84,649,82],[650,87,649,85],[650,116,649,114],[650,119,649,117,"responderID"],[650,130,649,128],[650,133,649,131],[650,136,649,134],[650,137,649,135],[651,6,650,4],[652,6,651,4],[652,10,651,8,"nextState"],[652,19,651,17],[652,24,651,22,"States"],[652,30,651,28],[652,31,651,29,"ERROR"],[652,36,651,34],[652,38,651,36],[653,8,652,6],[653,14,652,12],[653,18,652,16,"Error"],[653,23,652,21],[653,24,652,22],[653,60,652,58],[653,63,652,61,"curState"],[653,71,652,69],[653,74,652,72],[653,82,652,80],[653,85,652,83,"signal"],[653,91,652,89],[653,94,652,92],[653,113,652,111],[653,116,652,114,"responderID"],[653,127,652,125],[653,130,652,128],[653,133,652,131],[653,134,652,132],[654,6,653,4],[655,6,654,4],[655,10,654,8,"curState"],[655,18,654,16],[655,23,654,21,"nextState"],[655,32,654,30],[655,34,654,32],[656,8,655,6],[656,12,655,10],[656,13,655,11,"_performSideEffectsForTransition"],[656,45,655,43],[656,46,655,44,"curState"],[656,54,655,52],[656,56,655,54,"nextState"],[656,65,655,63],[656,67,655,65,"signal"],[656,73,655,71],[656,75,655,73,"e"],[656,76,655,74],[656,77,655,75],[657,8,656,6],[657,12,656,10],[657,13,656,11,"state"],[657,18,656,16],[657,19,656,17,"touchable"],[657,28,656,26],[657,29,656,27,"touchState"],[657,39,656,37],[657,42,656,40,"nextState"],[657,51,656,49],[658,6,657,4],[659,4,658,2],[659,5,658,3],[660,4,659,2,"_cancelLongPressDelayTimeout"],[660,32,659,30],[660,34,659,32],[660,43,659,41,"_cancelLongPressDelayTimeout"],[660,71,659,69,"_cancelLongPressDelayTimeout"],[660,72,659,69],[660,74,659,72],[661,6,660,4],[661,10,660,8],[661,11,660,9,"longPressDelayTimeout"],[661,32,660,30],[661,36,660,34,"clearTimeout"],[661,48,660,46],[661,49,660,47],[661,53,660,51],[661,54,660,52,"longPressDelayTimeout"],[661,75,660,73],[661,76,660,74],[662,6,661,4],[662,10,661,8],[662,11,661,9,"longPressDelayTimeout"],[662,32,661,30],[662,35,661,33],[662,39,661,37],[663,4,662,2],[663,5,662,3],[664,4,663,2,"_isHighlight"],[664,16,663,14],[664,18,663,16],[664,27,663,25,"_isHighlight"],[664,39,663,37,"_isHighlight"],[664,40,663,38,"state"],[664,45,663,43],[664,47,663,45],[665,6,664,4],[665,13,664,11,"state"],[665,18,664,16],[665,23,664,21,"States"],[665,29,664,27],[665,30,664,28,"RESPONDER_ACTIVE_PRESS_IN"],[665,55,664,53],[665,59,664,57,"state"],[665,64,664,62],[665,69,664,67,"States"],[665,75,664,73],[665,76,664,74,"RESPONDER_ACTIVE_LONG_PRESS_IN"],[665,106,664,104],[666,4,665,2],[666,5,665,3],[667,4,666,2,"_savePressInLocation"],[667,24,666,22],[667,26,666,24],[667,35,666,33,"_savePressInLocation"],[667,55,666,53,"_savePressInLocation"],[667,56,666,54,"e"],[667,57,666,55],[667,59,666,57],[668,6,667,4],[668,10,667,8,"touch"],[668,15,667,13],[668,18,667,16,"extractSingleTouch"],[668,36,667,34],[668,37,667,35,"e"],[668,38,667,36],[668,39,667,37,"nativeEvent"],[668,50,667,48],[668,51,667,49],[669,6,668,4],[669,10,668,8,"pageX"],[669,15,668,13],[669,18,668,16,"touch"],[669,23,668,21],[669,27,668,25,"touch"],[669,32,668,30],[669,33,668,31,"pageX"],[669,38,668,36],[670,6,669,4],[670,10,669,8,"pageY"],[670,15,669,13],[670,18,669,16,"touch"],[670,23,669,21],[670,27,669,25,"touch"],[670,32,669,30],[670,33,669,31,"pageY"],[670,38,669,36],[671,6,670,4],[671,10,670,8,"locationX"],[671,19,670,17],[671,22,670,20,"touch"],[671,27,670,25],[671,31,670,29,"touch"],[671,36,670,34],[671,37,670,35,"locationX"],[671,46,670,44],[672,6,671,4],[672,10,671,8,"locationY"],[672,19,671,17],[672,22,671,20,"touch"],[672,27,671,25],[672,31,671,29,"touch"],[672,36,671,34],[672,37,671,35,"locationY"],[672,46,671,44],[673,6,672,4],[673,10,672,8],[673,11,672,9,"pressInLocation"],[673,26,672,24],[673,29,672,27],[674,8,673,6,"pageX"],[674,13,673,11],[675,8,674,6,"pageY"],[675,13,674,11],[676,8,675,6,"locationX"],[676,17,675,15],[677,8,676,6,"locationY"],[678,6,677,4],[678,7,677,5],[679,4,678,2],[679,5,678,3],[680,4,679,2,"_getDistanceBetweenPoints"],[680,29,679,27],[680,31,679,29],[680,40,679,38,"_getDistanceBetweenPoints"],[680,65,679,63,"_getDistanceBetweenPoints"],[680,66,679,64,"aX"],[680,68,679,66],[680,70,679,68,"aY"],[680,72,679,70],[680,74,679,72,"bX"],[680,76,679,74],[680,78,679,76,"bY"],[680,80,679,78],[680,82,679,80],[681,6,680,4],[681,10,680,8,"deltaX"],[681,16,680,14],[681,19,680,17,"aX"],[681,21,680,19],[681,24,680,22,"bX"],[681,26,680,24],[682,6,681,4],[682,10,681,8,"deltaY"],[682,16,681,14],[682,19,681,17,"aY"],[682,21,681,19],[682,24,681,22,"bY"],[682,26,681,24],[683,6,682,4],[683,13,682,11,"Math"],[683,17,682,15],[683,18,682,16,"sqrt"],[683,22,682,20],[683,23,682,21,"deltaX"],[683,29,682,27],[683,32,682,30,"deltaX"],[683,38,682,36],[683,41,682,39,"deltaY"],[683,47,682,45],[683,50,682,48,"deltaY"],[683,56,682,54],[683,57,682,55],[684,4,683,2],[684,5,683,3],[685,4,684,2],[686,0,685,0],[687,0,686,0],[688,0,687,0],[689,0,688,0],[690,0,689,0],[691,0,690,0],[692,0,691,0],[693,0,692,0],[694,0,693,0],[695,0,694,0],[696,4,695,2,"_performSideEffectsForTransition"],[696,36,695,34],[696,38,695,36],[696,47,695,45,"_performSideEffectsForTransition"],[696,79,695,77,"_performSideEffectsForTransition"],[696,80,695,78,"curState"],[696,88,695,86],[696,90,695,88,"nextState"],[696,99,695,97],[696,101,695,99,"signal"],[696,107,695,105],[696,109,695,107,"e"],[696,110,695,108],[696,112,695,110],[697,6,696,4],[697,10,696,8,"curIsHighlight"],[697,24,696,22],[697,27,696,25],[697,31,696,29],[697,32,696,30,"_isHighlight"],[697,44,696,42],[697,45,696,43,"curState"],[697,53,696,51],[697,54,696,52],[698,6,697,4],[698,10,697,8,"newIsHighlight"],[698,24,697,22],[698,27,697,25],[698,31,697,29],[698,32,697,30,"_isHighlight"],[698,44,697,42],[698,45,697,43,"nextState"],[698,54,697,52],[698,55,697,53],[699,6,698,4],[699,10,698,8,"isFinalSignal"],[699,23,698,21],[699,26,698,24,"signal"],[699,32,698,30],[699,37,698,35,"Signals"],[699,44,698,42],[699,45,698,43,"RESPONDER_TERMINATED"],[699,65,698,63],[699,69,698,67,"signal"],[699,75,698,73],[699,80,698,78,"Signals"],[699,87,698,85],[699,88,698,86,"RESPONDER_RELEASE"],[699,105,698,103],[700,6,699,4],[700,10,699,8,"isFinalSignal"],[700,23,699,21],[700,25,699,23],[701,8,700,6],[701,12,700,10],[701,13,700,11,"_cancelLongPressDelayTimeout"],[701,41,700,39],[701,42,700,40],[701,43,700,41],[702,6,701,4],[703,6,702,4],[703,10,702,8,"isInitialTransition"],[703,29,702,27],[703,32,702,30,"curState"],[703,40,702,38],[703,45,702,43,"States"],[703,51,702,49],[703,52,702,50,"NOT_RESPONDER"],[703,65,702,63],[703,69,702,67,"nextState"],[703,78,702,76],[703,83,702,81,"States"],[703,89,702,87],[703,90,702,88,"RESPONDER_INACTIVE_PRESS_IN"],[703,117,702,115],[704,6,703,4],[704,10,703,8,"isActiveTransition"],[704,28,703,26],[704,31,703,29],[704,32,703,30,"IsActive"],[704,40,703,38],[704,41,703,39,"curState"],[704,49,703,47],[704,50,703,48],[704,54,703,52,"IsActive"],[704,62,703,60],[704,63,703,61,"nextState"],[704,72,703,70],[704,73,703,71],[705,6,704,4],[705,10,704,8,"isInitialTransition"],[705,29,704,27],[705,33,704,31,"isActiveTransition"],[705,51,704,49],[705,53,704,51],[706,8,705,6],[706,12,705,10],[706,13,705,11,"_remeasureMetricsOnActivation"],[706,42,705,40],[706,43,705,41],[706,44,705,42],[707,6,706,4],[708,6,707,4],[708,10,707,8,"IsPressingIn"],[708,22,707,20],[708,23,707,21,"curState"],[708,31,707,29],[708,32,707,30],[708,36,707,34,"signal"],[708,42,707,40],[708,47,707,45,"Signals"],[708,54,707,52],[708,55,707,53,"LONG_PRESS_DETECTED"],[708,74,707,72],[708,76,707,74],[709,8,708,6],[709,12,708,10],[709,13,708,11,"touchableHandleLongPress"],[709,37,708,35],[709,41,708,39],[709,45,708,43],[709,46,708,44,"touchableHandleLongPress"],[709,70,708,68],[709,71,708,69,"e"],[709,72,708,70],[709,73,708,71],[710,6,709,4],[711,6,710,4],[711,10,710,8,"newIsHighlight"],[711,24,710,22],[711,28,710,26],[711,29,710,27,"curIsHighlight"],[711,43,710,41],[711,45,710,43],[712,8,711,6],[712,12,711,10],[712,13,711,11,"_startHighlight"],[712,28,711,26],[712,29,711,27,"e"],[712,30,711,28],[712,31,711,29],[713,6,712,4],[713,7,712,5],[713,13,712,11],[713,17,712,15],[713,18,712,16,"newIsHighlight"],[713,32,712,30],[713,36,712,34,"curIsHighlight"],[713,50,712,48],[713,52,712,50],[714,8,713,6],[714,12,713,10],[714,13,713,11,"_endHighlight"],[714,26,713,24],[714,27,713,25,"e"],[714,28,713,26],[714,29,713,27],[715,6,714,4],[716,6,715,4],[716,10,715,8,"IsPressingIn"],[716,22,715,20],[716,23,715,21,"curState"],[716,31,715,29],[716,32,715,30],[716,36,715,34,"signal"],[716,42,715,40],[716,47,715,45,"Signals"],[716,54,715,52],[716,55,715,53,"RESPONDER_RELEASE"],[716,72,715,70],[716,74,715,72],[717,8,716,6],[717,12,716,10,"hasLongPressHandler"],[717,31,716,29],[717,34,716,32],[717,35,716,33],[717,36,716,34],[717,40,716,38],[717,41,716,39,"props"],[717,46,716,44],[717,47,716,45,"onLongPress"],[717,58,716,56],[718,8,717,6],[718,12,717,10,"pressIsLongButStillCallOnPress"],[718,42,717,40],[718,45,717,43,"IsLongPressingIn"],[718,61,717,59],[718,62,717,60,"curState"],[718,70,717,68],[718,71,717,69],[719,8,718,6],[720,8,719,6],[720,9,719,7,"hasLongPressHandler"],[720,28,719,26],[720,32,719,30],[720,33,719,31],[720,37,719,35],[720,38,719,36,"touchableLongPressCancelsPress"],[720,68,719,66],[720,69,719,67],[720,70,719,68],[720,71,719,69],[720,72,719,70],[720,73,719,71],[722,8,721,6],[722,12,721,10,"shouldInvokePress"],[722,29,721,27],[722,32,721,30],[722,33,721,31,"IsLongPressingIn"],[722,49,721,47],[722,50,721,48,"curState"],[722,58,721,56],[722,59,721,57],[722,63,721,61,"pressIsLongButStillCallOnPress"],[722,93,721,91],[723,8,722,6],[723,12,722,10,"shouldInvokePress"],[723,29,722,27],[723,33,722,31],[723,37,722,35],[723,38,722,36,"touchableHandlePress"],[723,58,722,56],[723,60,722,58],[724,10,723,8],[724,14,723,12],[724,15,723,13,"newIsHighlight"],[724,29,723,27],[724,33,723,31],[724,34,723,32,"curIsHighlight"],[724,48,723,46],[724,50,723,48],[725,12,724,10],[726,12,725,10],[726,16,725,14],[726,17,725,15,"_startHighlight"],[726,32,725,30],[726,33,725,31,"e"],[726,34,725,32],[726,35,725,33],[727,12,726,10],[727,16,726,14],[727,17,726,15,"_endHighlight"],[727,30,726,28],[727,31,726,29,"e"],[727,32,726,30],[727,33,726,31],[728,10,727,8],[729,10,728,8],[729,14,728,12],[729,15,728,13,"touchableHandlePress"],[729,35,728,33],[729,36,728,34,"e"],[729,37,728,35],[729,38,728,36],[730,8,729,6],[731,6,730,4],[732,6,731,4],[732,10,731,8],[732,11,731,9,"touchableDelayTimeout"],[732,32,731,30],[732,36,731,34,"clearTimeout"],[732,48,731,46],[732,49,731,47],[732,53,731,51],[732,54,731,52,"touchableDelayTimeout"],[732,75,731,73],[732,76,731,74],[733,6,732,4],[733,10,732,8],[733,11,732,9,"touchableDelayTimeout"],[733,32,732,30],[733,35,732,33],[733,39,732,37],[734,4,733,2],[734,5,733,3],[735,4,734,2,"_playTouchSound"],[735,19,734,17],[735,21,734,19],[735,30,734,28,"_playTouchSound"],[735,45,734,43,"_playTouchSound"],[735,46,734,43],[735,48,734,46],[736,6,735,4,"_UIManager"],[736,16,735,14],[736,17,735,15,"default"],[736,24,735,22],[736,25,735,23,"playTouchSound"],[736,39,735,37],[736,40,735,38],[736,41,735,39],[737,4,736,2],[737,5,736,3],[738,4,737,2,"_startHighlight"],[738,19,737,17],[738,21,737,19],[738,30,737,28,"_startHighlight"],[738,45,737,43,"_startHighlight"],[738,46,737,44,"e"],[738,47,737,45],[738,49,737,47],[739,6,738,4],[739,10,738,8],[739,11,738,9,"_savePressInLocation"],[739,31,738,29],[739,32,738,30,"e"],[739,33,738,31],[739,34,738,32],[740,6,739,4],[740,10,739,8],[740,11,739,9,"touchableHandleActivePressIn"],[740,39,739,37],[740,43,739,41],[740,47,739,45],[740,48,739,46,"touchableHandleActivePressIn"],[740,76,739,74],[740,77,739,75,"e"],[740,78,739,76],[740,79,739,77],[741,4,740,2],[741,5,740,3],[742,4,741,2,"_endHighlight"],[742,17,741,15],[742,19,741,17],[742,28,741,26,"_endHighlight"],[742,41,741,39,"_endHighlight"],[742,42,741,40,"e"],[742,43,741,41],[742,45,741,43],[743,6,742,4],[743,10,742,8],[743,14,742,12],[743,15,742,13,"touchableHandleActivePressOut"],[743,44,742,42],[743,46,742,44],[744,8,743,6],[744,12,743,10],[744,16,743,14],[744,17,743,15,"touchableGetPressOutDelayMS"],[744,44,743,42],[744,48,743,46],[744,52,743,50],[744,53,743,51,"touchableGetPressOutDelayMS"],[744,80,743,78],[744,81,743,79],[744,82,743,80],[744,84,743,82],[745,10,744,8],[745,14,744,12],[745,15,744,13,"pressOutDelayTimeout"],[745,35,744,33],[745,38,744,36,"setTimeout"],[745,48,744,46],[745,49,744,47],[745,55,744,53],[746,12,745,10],[746,16,745,14],[746,17,745,15,"touchableHandleActivePressOut"],[746,46,745,44],[746,47,745,45,"e"],[746,48,745,46],[746,49,745,47],[747,10,746,8],[747,11,746,9],[747,13,746,11],[747,17,746,15],[747,18,746,16,"touchableGetPressOutDelayMS"],[747,45,746,43],[747,46,746,44],[747,47,746,45],[747,48,746,46],[748,8,747,6],[748,9,747,7],[748,15,747,13],[749,10,748,8],[749,14,748,12],[749,15,748,13,"touchableHandleActivePressOut"],[749,44,748,42],[749,45,748,43,"e"],[749,46,748,44],[749,47,748,45],[750,8,749,6],[751,6,750,4],[752,4,751,2],[752,5,751,3],[753,4,752,2],[754,4,753,2],[755,4,754,2,"touchableHandleKeyEvent"],[755,27,754,25],[755,29,754,27],[755,38,754,36,"touchableHandleKeyEvent"],[755,61,754,59,"touchableHandleKeyEvent"],[755,62,754,60,"e"],[755,63,754,61],[755,65,754,63],[756,6,755,4],[756,10,755,8,"type"],[756,14,755,12],[756,17,755,15,"e"],[756,18,755,16],[756,19,755,17,"type"],[756,23,755,21],[757,8,756,6,"key"],[757,11,756,9],[757,14,756,12,"e"],[757,15,756,13],[757,16,756,14,"key"],[757,19,756,17],[758,6,757,4],[758,10,757,8,"key"],[758,13,757,11],[758,18,757,16],[758,25,757,23],[758,29,757,27,"key"],[758,32,757,30],[758,37,757,35],[758,40,757,38],[758,42,757,40],[759,8,758,6],[759,12,758,10,"type"],[759,16,758,14],[759,21,758,19],[759,30,758,28],[759,32,758,30],[760,10,759,8],[760,14,759,12],[760,15,759,13],[760,19,759,17],[760,20,759,18,"_isTouchableKeyboardActive"],[760,46,759,44],[760,48,759,46],[761,12,760,10],[761,16,760,14],[761,17,760,15],[761,21,760,19],[761,22,760,20,"state"],[761,27,760,25],[761,28,760,26,"touchable"],[761,37,760,35],[761,38,760,36,"touchState"],[761,48,760,46],[761,52,760,50],[761,56,760,54],[761,57,760,55,"state"],[761,62,760,60],[761,63,760,61,"touchable"],[761,72,760,70],[761,73,760,71,"touchState"],[761,83,760,81],[761,88,760,86,"States"],[761,94,760,92],[761,95,760,93,"NOT_RESPONDER"],[761,108,760,106],[761,110,760,108],[762,14,761,12],[762,18,761,16],[762,19,761,17,"touchableHandleResponderGrant"],[762,48,761,46],[762,49,761,47,"e"],[762,50,761,48],[762,51,761,49],[763,14,762,12],[763,18,762,16],[763,19,762,17,"_isTouchableKeyboardActive"],[763,45,762,43],[763,48,762,46],[763,52,762,50],[764,12,763,10],[765,10,764,8],[766,8,765,6],[766,9,765,7],[766,15,765,13],[766,19,765,17,"type"],[766,23,765,21],[766,28,765,26],[766,35,765,33],[766,37,765,35],[767,10,766,8],[767,14,766,12],[767,18,766,16],[767,19,766,17,"_isTouchableKeyboardActive"],[767,45,766,43],[767,47,766,45],[768,12,767,10],[768,16,767,14],[768,20,767,18],[768,21,767,19,"state"],[768,26,767,24],[768,27,767,25,"touchable"],[768,36,767,34],[768,37,767,35,"touchState"],[768,47,767,45],[768,51,767,49],[768,55,767,53],[768,56,767,54,"state"],[768,61,767,59],[768,62,767,60,"touchable"],[768,71,767,69],[768,72,767,70,"touchState"],[768,82,767,80],[768,87,767,85,"States"],[768,93,767,91],[768,94,767,92,"NOT_RESPONDER"],[768,107,767,105],[768,109,767,107],[769,14,768,12],[769,18,768,16],[769,19,768,17,"touchableHandleResponderRelease"],[769,50,768,48],[769,51,768,49,"e"],[769,52,768,50],[769,53,768,51],[770,14,769,12],[770,18,769,16],[770,19,769,17,"_isTouchableKeyboardActive"],[770,45,769,43],[770,48,769,46],[770,53,769,51],[771,12,770,10],[772,10,771,8],[773,8,772,6],[774,8,773,6,"e"],[774,9,773,7],[774,10,773,8,"stopPropagation"],[774,25,773,23],[774,26,773,24],[774,27,773,25],[775,8,774,6],[776,8,775,6],[777,8,776,6],[777,12,776,10],[777,14,776,12,"key"],[777,17,776,15],[777,22,776,20],[777,29,776,27],[777,33,776,31,"_AccessibilityUtil"],[777,51,776,49],[777,52,776,50,"default"],[777,59,776,57],[777,60,776,58,"propsToAriaRole"],[777,75,776,73],[777,76,776,74],[777,80,776,78],[777,81,776,79,"props"],[777,86,776,84],[777,87,776,85],[777,92,776,90],[777,98,776,96],[777,99,776,97],[777,101,776,99],[778,10,777,8,"e"],[778,11,777,9],[778,12,777,10,"preventDefault"],[778,26,777,24],[778,27,777,25],[778,28,777,26],[779,8,778,6],[780,6,779,4],[781,4,780,2],[781,5,780,3],[782,4,781,2,"withoutDefaultFocusAndBlur"],[782,30,781,28],[782,32,781,30],[782,33,781,31],[783,2,782,0],[783,3,782,1],[785,2,784,0],[786,0,785,0],[787,0,786,0],[788,0,787,0],[789,0,788,0],[790,0,789,0],[791,2,790,0],[791,6,790,4,"touchableHandleFocus"],[791,26,790,24],[791,29,790,27,"TouchableMixin"],[791,43,790,41],[791,44,790,42,"touchableHandleFocus"],[791,64,790,62],[792,4,791,2,"touchableHandleBlur"],[792,23,791,21],[792,26,791,24,"TouchableMixin"],[792,40,791,38],[792,41,791,39,"touchableHandleBlur"],[792,60,791,58],[793,4,792,2,"TouchableMixinWithoutDefaultFocusAndBlur"],[793,44,792,42],[793,47,792,45],[793,48,792,46],[793,49,792,47],[793,51,792,49,"_objectWithoutPropertiesLoose2"],[793,81,792,79],[793,82,792,80,"default"],[793,89,792,87],[793,91,792,89,"TouchableMixin"],[793,105,792,103],[793,107,792,105],[793,108,792,106],[793,130,792,128],[793,132,792,130],[793,153,792,151],[793,154,792,152],[793,155,792,153],[794,2,793,0,"TouchableMixin"],[794,16,793,14],[794,17,793,15,"withoutDefaultFocusAndBlur"],[794,43,793,41],[794,46,793,44,"TouchableMixinWithoutDefaultFocusAndBlur"],[794,86,793,84],[795,2,794,0],[795,6,794,4,"Touchable"],[795,15,794,13],[795,18,794,16],[796,4,795,2,"Mixin"],[796,9,795,7],[796,11,795,9,"TouchableMixin"],[796,25,795,23],[797,4,796,2,"TOUCH_TARGET_DEBUG"],[797,22,796,20],[797,24,796,22],[797,29,796,27],[798,4,797,2],[799,4,798,2],[800,0,799,0],[801,0,800,0],[802,4,801,2,"renderDebugView"],[802,19,801,17],[802,21,801,19,"_ref"],[802,25,801,23],[802,29,801,27],[803,6,802,4],[803,10,802,8,"color"],[803,15,802,13],[803,18,802,16,"_ref"],[803,22,802,20],[803,23,802,21,"color"],[803,28,802,26],[804,8,803,6,"hitSlop"],[804,15,803,13],[804,18,803,16,"_ref"],[804,22,803,20],[804,23,803,21,"hitSlop"],[804,30,803,28],[805,6,804,4],[805,10,804,8],[805,11,804,9,"Touchable"],[805,20,804,18],[805,21,804,19,"TOUCH_TARGET_DEBUG"],[805,39,804,37],[805,41,804,39],[806,8,805,6],[806,15,805,13],[806,19,805,17],[807,6,806,4],[808,6,807,4],[808,10,807,8,"process"],[808,17,807,15],[808,18,807,16,"env"],[808,21,807,19],[808,22,807,20,"NODE_ENV"],[808,30,807,28],[808,35,807,33],[808,47,807,45],[808,49,807,47],[809,8,808,6],[809,14,808,12,"Error"],[809,19,808,17],[809,20,808,18],[809,81,808,79],[809,82,808,80],[810,6,809,4],[811,6,810,4],[811,10,810,8,"debugHitSlopStyle"],[811,27,810,25],[811,30,810,28],[811,31,810,29],[811,32,810,30],[812,6,811,4,"hitSlop"],[812,13,811,11],[812,16,811,14,"hitSlop"],[812,23,811,21],[812,27,811,25],[813,8,812,6,"top"],[813,11,812,9],[813,13,812,11],[813,14,812,12],[814,8,813,6,"bottom"],[814,14,813,12],[814,16,813,14],[814,17,813,15],[815,8,814,6,"left"],[815,12,814,10],[815,14,814,12],[815,15,814,13],[816,8,815,6,"right"],[816,13,815,11],[816,15,815,13],[817,6,816,4],[817,7,816,5],[818,6,817,4],[818,11,817,9],[818,15,817,13,"key"],[818,18,817,16],[818,22,817,20,"hitSlop"],[818,29,817,27],[818,31,817,29],[819,8,818,6,"debugHitSlopStyle"],[819,25,818,23],[819,26,818,24,"key"],[819,29,818,27],[819,30,818,28],[819,33,818,31],[819,34,818,32,"hitSlop"],[819,41,818,39],[819,42,818,40,"key"],[819,45,818,43],[819,46,818,44],[820,6,819,4],[821,6,820,4],[821,10,820,8,"normalizedColor"],[821,25,820,23],[821,28,820,26],[821,29,820,27],[821,30,820,28],[821,32,820,30,"_normalizeColors"],[821,48,820,46],[821,49,820,47,"default"],[821,56,820,54],[821,58,820,56,"color"],[821,63,820,61],[821,64,820,62],[822,6,821,4],[822,10,821,8],[822,17,821,15,"normalizedColor"],[822,32,821,30],[822,37,821,35],[822,45,821,43],[822,47,821,45],[823,8,822,6],[823,15,822,13],[823,19,822,17],[824,6,823,4],[825,6,824,4],[825,10,824,8,"hexColor"],[825,18,824,16],[825,21,824,19],[825,24,824,22],[825,27,824,25],[825,28,824,26],[825,38,824,36],[825,41,824,39,"normalizedColor"],[825,56,824,54],[825,57,824,55,"toString"],[825,65,824,63],[825,66,824,64],[825,68,824,66],[825,69,824,67],[825,71,824,69,"substr"],[825,77,824,75],[825,78,824,76],[825,79,824,77],[825,80,824,78],[825,81,824,79],[826,6,825,4],[826,13,825,11],[826,26,825,24,"_react"],[826,32,825,30],[826,33,825,31,"default"],[826,40,825,38],[826,41,825,39,"createElement"],[826,54,825,52],[826,55,825,53,"_View"],[826,60,825,58],[826,61,825,59,"default"],[826,68,825,66],[826,70,825,68],[827,8,826,6,"pointerEvents"],[827,21,826,19],[827,23,826,21],[827,29,826,27],[828,8,827,6,"style"],[828,13,827,11],[828,15,827,13],[828,16,827,14],[828,17,827,15],[828,19,827,17,"_objectSpread2"],[828,33,827,31],[828,34,827,32,"default"],[828,41,827,39],[828,43,827,41],[829,10,828,8,"position"],[829,18,828,16],[829,20,828,18],[829,30,828,28],[830,10,829,8,"borderColor"],[830,21,829,19],[830,23,829,21,"hexColor"],[830,31,829,29],[830,32,829,30,"slice"],[830,37,829,35],[830,38,829,36],[830,39,829,37],[830,41,829,39],[830,42,829,40],[830,43,829,41],[830,44,829,42],[830,47,829,45],[830,51,829,49],[831,10,830,8],[832,10,831,8,"borderWidth"],[832,21,831,19],[832,23,831,21],[832,24,831,22],[833,10,832,8,"borderStyle"],[833,21,832,19],[833,23,832,21],[833,31,832,29],[834,10,833,8,"backgroundColor"],[834,25,833,23],[834,27,833,25,"hexColor"],[834,35,833,33],[834,36,833,34,"slice"],[834,41,833,39],[834,42,833,40],[834,43,833,41],[834,45,833,43],[834,46,833,44],[834,47,833,45],[834,48,833,46],[834,51,833,49],[835,8,834,6],[835,9,834,7],[835,11,834,9,"debugHitSlopStyle"],[835,28,834,26],[836,6,835,4],[836,7,835,5],[836,8,835,6],[837,4,836,2],[838,2,837,0],[838,3,837,1],[839,2,838,0],[839,6,838,4,"_default"],[839,14,838,12],[839,17,838,15,"exports"],[839,24,838,22],[839,25,838,23,"default"],[839,32,838,30],[839,35,838,33,"Touchable"],[839,44,838,42],[840,2,839,0,"module"],[840,8,839,6],[840,9,839,7,"exports"],[840,16,839,14],[840,19,839,17,"exports"],[840,26,839,24],[840,27,839,25,"default"],[840,34,839,32],[841,0,839,33],[841,3]],"functionMap":{"names":["<global>","extractSingleTouch","componentDidMount","_touchableBlurListener","componentWillUnmount","touchableGetInitialState","touchableHandleResponderTerminationRequest","touchableHandleStartShouldSetResponder","touchableLongPressCancelsPress","touchableHandleResponderGrant","touchableHandleResponderRelease","touchableHandleResponderTerminate","touchableHandleResponderMove","touchableHandleFocus","touchableHandleBlur","_remeasureMetricsOnActivation","_handleQueryLayout","_handleDelay","_handleLongDelay","_receiveSignal","_cancelLongPressDelayTimeout","_isHighlight","_savePressInLocation","_getDistanceBetweenPoints","_performSideEffectsForTransition","_playTouchSound","_startHighlight","_endHighlight","setTimeout$argument_0","touchableHandleKeyEvent","Touchable.renderDebugView"],"mappings":"AAA;yBCyB;CDM;qBEyT;oCCI;ODS;GFG;wBII;GJW;4BKQ;GLO;8CMK;GNE;0COI;GPE;kCQI;GRE;iCSM;GTqB;mCUI;GVG;qCWI;GXG;gCYI;GZ8C;wBaS;GbE;uBcS;GdE;iCe6E;GfM;sBgBC;GhBY;gBiBC;GjBG;oBkBC;GlBQ;kBmBS;GnBiB;gCoBC;GpBG;gBqBC;GrBE;wBsBC;GtBY;6BuBC;GvBI;oCwBY;GxBsC;mByBC;GzBE;mB0BC;G1BG;iB2BC;+CCG;SDE;G3BK;2B6BG;G7B0B;mB8BqB;G9BmC"},"hasCjsExports":true},"type":"js/module"}]}