{"dependencies":[{"name":"react-native-web/dist/exports/StyleSheet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"MK7+k1V+KnvCVW7Kj2k/ydtjmVU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"chunkArray\", {\n    enumerable: true,\n    get: function () {\n      return chunkArray;\n    }\n  });\n  Object.defineProperty(exports, \"calculateDimensions\", {\n    enumerable: true,\n    get: function () {\n      return calculateDimensions;\n    }\n  });\n  Object.defineProperty(exports, \"generateStyles\", {\n    enumerable: true,\n    get: function () {\n      return generateStyles;\n    }\n  });\n  Object.defineProperty(exports, \"getAdjustedTotalDimensions\", {\n    enumerable: true,\n    get: function () {\n      return getAdjustedTotalDimensions;\n    }\n  });\n  var _reactNativeWebDistExportsStyleSheet = require(_dependencyMap[0], \"react-native-web/dist/exports/StyleSheet\");\n  var StyleSheet = _interopDefault(_reactNativeWebDistExportsStyleSheet);\n  function chunkArray(array, size) {\n    if (!array || array.length === 0) return [];\n    return array.reduce((acc, val) => {\n      if (acc.length === 0) acc.push([]);\n      const last = acc[acc.length - 1];\n      const rowHadFullWidth = last[0] && last[0]._fullWidth;\n      const currentIsFullWidth = !!val._fullWidth;\n      if (last.length < size && !rowHadFullWidth && !currentIsFullWidth) {\n        last.push(val);\n      } else {\n        acc.push([val]);\n      }\n      return acc;\n    }, []);\n  }\n  function calculateDimensions({\n    itemDimension,\n    staticDimension,\n    totalDimension,\n    fixed,\n    spacing,\n    maxItemsPerRow\n  }) {\n    const usableTotalDimension = staticDimension || totalDimension;\n    const availableDimension = usableTotalDimension - spacing; // One spacing extra\n    const itemTotalDimension = Math.min(itemDimension + spacing, availableDimension); // itemTotalDimension should not exceed availableDimension\n    const itemsPerRow = Math.min(Math.floor(availableDimension / itemTotalDimension), maxItemsPerRow || Infinity);\n    const containerDimension = availableDimension / itemsPerRow;\n    let fixedSpacing;\n    if (fixed) {\n      fixedSpacing = (totalDimension - itemDimension * itemsPerRow) / (itemsPerRow + 1);\n    }\n    return {\n      itemTotalDimension,\n      availableDimension,\n      itemsPerRow,\n      containerDimension,\n      fixedSpacing\n    };\n  }\n  function getStyleDimensions(style, horizontal = false) {\n    let space1 = 0;\n    let space2 = 0;\n    let maxStyleDimension;\n    if (style) {\n      const flatStyle = Array.isArray(style) ? StyleSheet.default.flatten(style) : style;\n      let sMaxDimensionXY = 'maxWidth';\n      let sPaddingXY = 'paddingHorizontal';\n      let sPadding1 = 'paddingLeft';\n      let sPadding2 = 'paddingRight';\n      if (horizontal) {\n        sMaxDimensionXY = 'maxHeight';\n        sPaddingXY = 'paddingVertical';\n        sPadding1 = 'paddingTop';\n        sPadding2 = 'paddingBottom';\n      }\n      if (flatStyle[sMaxDimensionXY] && typeof flatStyle[sMaxDimensionXY] === 'number') {\n        maxStyleDimension = flatStyle[sMaxDimensionXY];\n      }\n      const padding = flatStyle[sPaddingXY] || flatStyle.padding;\n      const padding1 = flatStyle[sPadding1] || padding || 0;\n      const padding2 = flatStyle[sPadding2] || padding || 0;\n      space1 = typeof padding1 === 'number' ? padding1 : 0;\n      space2 = typeof padding2 === 'number' ? padding2 : 0;\n    }\n    return {\n      space1,\n      space2,\n      maxStyleDimension\n    };\n  }\n  function getAdjustedTotalDimensions({\n    totalDimension,\n    maxDimension,\n    contentContainerStyle,\n    style,\n    horizontal = false,\n    adjustGridToStyles = false\n  }) {\n    let adjustedTotalDimension = totalDimension;\n    let actualMaxDimension = totalDimension; // keep track of smallest max dimension\n\n    // adjust for maxDimension prop\n    if (maxDimension && totalDimension > maxDimension) {\n      actualMaxDimension = maxDimension;\n      adjustedTotalDimension = maxDimension;\n    }\n    if (adjustGridToStyles) {\n      if (contentContainerStyle) {\n        const {\n          space1,\n          space2,\n          maxStyleDimension\n        } = getStyleDimensions(contentContainerStyle, horizontal);\n        // adjust for maxWidth or maxHeight in contentContainerStyle\n        if (maxStyleDimension && adjustedTotalDimension > maxStyleDimension) {\n          actualMaxDimension = maxStyleDimension;\n          adjustedTotalDimension = maxStyleDimension;\n        }\n        // subtract horizontal or vertical padding from adjustedTotalDimension\n        if (space1 || space2) {\n          adjustedTotalDimension = adjustedTotalDimension - space1 - space2;\n        }\n      }\n      if (style) {\n        const edgeSpaceDiff = (totalDimension - actualMaxDimension) / 2; // if content is floating in middle of screen get margin on either side\n        const {\n          space1,\n          space2\n        } = getStyleDimensions(style, horizontal);\n        // only subtract if space is greater than the margin on either side\n        if (space1 > edgeSpaceDiff) {\n          adjustedTotalDimension -= space1 - edgeSpaceDiff; // subtract the padding minus any remaining margin\n        }\n        if (space2 > edgeSpaceDiff) {\n          adjustedTotalDimension -= space2 - edgeSpaceDiff; // subtract the padding minus any remaining margin\n        }\n      }\n    }\n    return adjustedTotalDimension;\n  }\n  function generateStyles({\n    itemDimension,\n    containerDimension,\n    spacing,\n    fixed,\n    horizontal,\n    fixedSpacing,\n    itemsPerRow\n  }) {\n    let rowStyle = {\n      flexDirection: 'row',\n      paddingLeft: fixed ? fixedSpacing : spacing,\n      paddingBottom: spacing\n    };\n    let containerStyle = {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: fixed ? itemDimension : containerDimension - spacing,\n      marginRight: fixed ? fixedSpacing : spacing\n    };\n    const containerFullWidthStyle = {\n      flexDirection: 'column',\n      justifyContent: 'center',\n      width: containerDimension * itemsPerRow - spacing,\n      marginBottom: spacing\n    };\n    if (horizontal) {\n      rowStyle = {\n        flexDirection: 'column',\n        paddingTop: fixed ? fixedSpacing : spacing,\n        paddingRight: spacing\n      };\n      containerStyle = {\n        flexDirection: 'row',\n        justifyContent: 'center',\n        height: fixed ? itemDimension : containerDimension - spacing,\n        marginBottom: fixed ? fixedSpacing : spacing\n      };\n    }\n    return {\n      containerFullWidthStyle,\n      containerStyle,\n      rowStyle\n    };\n  }\n});","lineCount":204,"map":[[12,2,181,0,"Object"],[12,8,181,0],[12,9,181,0,"defineProperty"],[12,23,181,0],[12,24,181,0,"exports"],[12,31,181,0],[13,4,181,0,"enumerable"],[13,14,181,0],[14,4,181,0,"get"],[14,7,181,0],[14,18,181,0,"get"],[14,19,181,0],[15,6,181,0],[15,13,182,2,"chunkArray"],[15,23,182,12],[16,4,182,12],[17,2,182,12],[18,2,181,0,"Object"],[18,8,181,0],[18,9,181,0,"defineProperty"],[18,23,181,0],[18,24,181,0,"exports"],[18,31,181,0],[19,4,181,0,"enumerable"],[19,14,181,0],[20,4,181,0,"get"],[20,7,181,0],[20,18,181,0,"get"],[20,19,181,0],[21,6,181,0],[21,13,182,14,"calculateDimensions"],[21,32,182,33],[22,4,182,33],[23,2,182,33],[24,2,181,0,"Object"],[24,8,181,0],[24,9,181,0,"defineProperty"],[24,23,181,0],[24,24,181,0,"exports"],[24,31,181,0],[25,4,181,0,"enumerable"],[25,14,181,0],[26,4,181,0,"get"],[26,7,181,0],[26,18,181,0,"get"],[26,19,181,0],[27,6,181,0],[27,13,182,35,"generateStyles"],[27,27,182,49],[28,4,182,49],[29,2,182,49],[30,2,181,0,"Object"],[30,8,181,0],[30,9,181,0,"defineProperty"],[30,23,181,0],[30,24,181,0,"exports"],[30,31,181,0],[31,4,181,0,"enumerable"],[31,14,181,0],[32,4,181,0,"get"],[32,7,181,0],[32,18,181,0,"get"],[32,19,181,0],[33,6,181,0],[33,13,182,51,"getAdjustedTotalDimensions"],[33,39,182,77],[34,4,182,77],[35,2,182,77],[36,2,183,2],[36,6,183,2,"_reactNativeWebDistExportsStyleSheet"],[36,42,183,2],[36,45,183,2,"require"],[36,52,183,2],[36,53,183,2,"_dependencyMap"],[36,67,183,2],[37,2,183,2],[37,6,183,2,"StyleSheet"],[37,16,183,2],[37,19,183,2,"_interopDefault"],[37,34,183,2],[37,35,183,2,"_reactNativeWebDistExportsStyleSheet"],[37,71,183,2],[38,2,3,0],[38,11,3,9,"chunkArray"],[38,21,3,19,"chunkArray"],[38,22,3,20,"array"],[38,27,3,25],[38,29,3,27,"size"],[38,33,3,31],[38,35,3,33],[39,4,4,2],[39,8,4,6],[39,9,4,7,"array"],[39,14,4,12],[39,18,4,16,"array"],[39,23,4,21],[39,24,4,22,"length"],[39,30,4,28],[39,35,4,33],[39,36,4,34],[39,38,4,36],[39,45,4,43],[39,47,4,45],[40,4,6,2],[40,11,6,9,"array"],[40,16,6,14],[40,17,6,15,"reduce"],[40,23,6,21],[40,24,6,22],[40,25,6,23,"acc"],[40,28,6,26],[40,30,6,28,"val"],[40,33,6,31],[40,38,6,36],[41,6,7,4],[41,10,7,8,"acc"],[41,13,7,11],[41,14,7,12,"length"],[41,20,7,18],[41,25,7,23],[41,26,7,24],[41,28,7,26,"acc"],[41,31,7,29],[41,32,7,30,"push"],[41,36,7,34],[41,37,7,35],[41,39,7,37],[41,40,7,38],[42,6,9,4],[42,12,9,10,"last"],[42,16,9,14],[42,19,9,17,"acc"],[42,22,9,20],[42,23,9,21,"acc"],[42,26,9,24],[42,27,9,25,"length"],[42,33,9,31],[42,36,9,34],[42,37,9,35],[42,38,9,36],[43,6,10,4],[43,12,10,10,"rowHadFullWidth"],[43,27,10,25],[43,30,10,28,"last"],[43,34,10,32],[43,35,10,33],[43,36,10,34],[43,37,10,35],[43,41,10,39,"last"],[43,45,10,43],[43,46,10,44],[43,47,10,45],[43,48,10,46],[43,49,10,47,"_fullWidth"],[43,59,10,57],[44,6,11,4],[44,12,11,10,"currentIsFullWidth"],[44,30,11,28],[44,33,11,31],[44,34,11,32],[44,35,11,33,"val"],[44,38,11,36],[44,39,11,37,"_fullWidth"],[44,49,11,47],[45,6,13,4],[45,10,13,8,"last"],[45,14,13,12],[45,15,13,13,"length"],[45,21,13,19],[45,24,13,22,"size"],[45,28,13,26],[45,32,13,30],[45,33,13,31,"rowHadFullWidth"],[45,48,13,46],[45,52,13,50],[45,53,13,51,"currentIsFullWidth"],[45,71,13,69],[45,73,13,71],[46,8,14,6,"last"],[46,12,14,10],[46,13,14,11,"push"],[46,17,14,15],[46,18,14,16,"val"],[46,21,14,19],[46,22,14,20],[47,6,15,4],[47,7,15,5],[47,13,15,11],[48,8,16,6,"acc"],[48,11,16,9],[48,12,16,10,"push"],[48,16,16,14],[48,17,16,15],[48,18,16,16,"val"],[48,21,16,19],[48,22,16,20],[48,23,16,21],[49,6,17,4],[50,6,18,4],[50,13,18,11,"acc"],[50,16,18,14],[51,4,19,2],[51,5,19,3],[51,7,19,5],[51,9,19,7],[51,10,19,8],[52,2,20,0],[53,2,22,0],[53,11,22,9,"calculateDimensions"],[53,30,22,28,"calculateDimensions"],[53,31,22,29],[54,4,23,2,"itemDimension"],[54,17,23,15],[55,4,24,2,"staticDimension"],[55,19,24,17],[56,4,25,2,"totalDimension"],[56,18,25,16],[57,4,26,2,"fixed"],[57,9,26,7],[58,4,27,2,"spacing"],[58,11,27,9],[59,4,28,2,"maxItemsPerRow"],[60,2,29,0],[60,3,29,1],[60,5,29,3],[61,4,30,2],[61,10,30,8,"usableTotalDimension"],[61,30,30,28],[61,33,30,31,"staticDimension"],[61,48,30,46],[61,52,30,50,"totalDimension"],[61,66,30,64],[62,4,31,2],[62,10,31,8,"availableDimension"],[62,28,31,26],[62,31,31,29,"usableTotalDimension"],[62,51,31,49],[62,54,31,52,"spacing"],[62,61,31,59],[62,62,31,60],[62,63,31,61],[63,4,32,2],[63,10,32,8,"itemTotalDimension"],[63,28,32,26],[63,31,32,29,"Math"],[63,35,32,33],[63,36,32,34,"min"],[63,39,32,37],[63,40,32,38,"itemDimension"],[63,53,32,51],[63,56,32,54,"spacing"],[63,63,32,61],[63,65,32,63,"availableDimension"],[63,83,32,81],[63,84,32,82],[63,85,32,83],[63,86,32,84],[64,4,33,2],[64,10,33,8,"itemsPerRow"],[64,21,33,19],[64,24,33,22,"Math"],[64,28,33,26],[64,29,33,27,"min"],[64,32,33,30],[64,33,33,31,"Math"],[64,37,33,35],[64,38,33,36,"floor"],[64,43,33,41],[64,44,33,42,"availableDimension"],[64,62,33,60],[64,65,33,63,"itemTotalDimension"],[64,83,33,81],[64,84,33,82],[64,86,33,84,"maxItemsPerRow"],[64,100,33,98],[64,104,33,102,"Infinity"],[64,112,33,110],[64,113,33,111],[65,4,34,2],[65,10,34,8,"containerDimension"],[65,28,34,26],[65,31,34,29,"availableDimension"],[65,49,34,47],[65,52,34,50,"itemsPerRow"],[65,63,34,61],[66,4,36,2],[66,8,36,6,"fixedSpacing"],[66,20,36,18],[67,4,37,2],[67,8,37,6,"fixed"],[67,13,37,11],[67,15,37,13],[68,6,38,4,"fixedSpacing"],[68,18,38,16],[68,21,38,19],[68,22,38,20,"totalDimension"],[68,36,38,34],[68,39,38,38,"itemDimension"],[68,52,38,51],[68,55,38,54,"itemsPerRow"],[68,66,38,66],[68,71,38,71,"itemsPerRow"],[68,82,38,82],[68,85,38,85],[68,86,38,86],[68,87,38,87],[69,4,39,2],[70,4,41,2],[70,11,41,9],[71,6,42,4,"itemTotalDimension"],[71,24,42,22],[72,6,43,4,"availableDimension"],[72,24,43,22],[73,6,44,4,"itemsPerRow"],[73,17,44,15],[74,6,45,4,"containerDimension"],[74,24,45,22],[75,6,46,4,"fixedSpacing"],[76,4,47,2],[76,5,47,3],[77,2,48,0],[78,2,50,0],[78,11,50,9,"getStyleDimensions"],[78,29,50,27,"getStyleDimensions"],[78,30,51,2,"style"],[78,35,51,7],[78,37,52,2,"horizontal"],[78,47,52,12],[78,50,52,15],[78,55,52,20],[78,57,53,2],[79,4,54,2],[79,8,54,6,"space1"],[79,14,54,12],[79,17,54,15],[79,18,54,16],[80,4,55,2],[80,8,55,6,"space2"],[80,14,55,12],[80,17,55,15],[80,18,55,16],[81,4,56,2],[81,8,56,6,"maxStyleDimension"],[81,25,56,23],[82,4,57,2],[82,8,57,6,"style"],[82,13,57,11],[82,15,57,13],[83,6,58,4],[83,12,58,10,"flatStyle"],[83,21,58,19],[83,24,58,22,"Array"],[83,29,58,27],[83,30,58,28,"isArray"],[83,37,58,35],[83,38,58,36,"style"],[83,43,58,41],[83,44,58,42],[83,47,58,45,"StyleSheet"],[83,57,58,55],[83,58,58,55,"default"],[83,65,58,55],[83,66,58,56,"flatten"],[83,73,58,63],[83,74,58,64,"style"],[83,79,58,69],[83,80,58,70],[83,83,58,73,"style"],[83,88,58,78],[84,6,59,4],[84,10,59,8,"sMaxDimensionXY"],[84,25,59,23],[84,28,59,26],[84,38,59,36],[85,6,60,4],[85,10,60,8,"sPaddingXY"],[85,20,60,18],[85,23,60,21],[85,42,60,40],[86,6,61,4],[86,10,61,8,"sPadding1"],[86,19,61,17],[86,22,61,20],[86,35,61,33],[87,6,62,4],[87,10,62,8,"sPadding2"],[87,19,62,17],[87,22,62,20],[87,36,62,34],[88,6,63,4],[88,10,63,8,"horizontal"],[88,20,63,18],[88,22,63,20],[89,8,64,6,"sMaxDimensionXY"],[89,23,64,21],[89,26,64,24],[89,37,64,35],[90,8,65,6,"sPaddingXY"],[90,18,65,16],[90,21,65,19],[90,38,65,36],[91,8,66,6,"sPadding1"],[91,17,66,15],[91,20,66,18],[91,32,66,30],[92,8,67,6,"sPadding2"],[92,17,67,15],[92,20,67,18],[92,35,67,33],[93,6,68,4],[94,6,70,4],[94,10,70,8,"flatStyle"],[94,19,70,17],[94,20,70,18,"sMaxDimensionXY"],[94,35,70,33],[94,36,70,34],[94,40,70,38],[94,47,70,45,"flatStyle"],[94,56,70,54],[94,57,70,55,"sMaxDimensionXY"],[94,72,70,70],[94,73,70,71],[94,78,70,76],[94,86,70,84],[94,88,70,86],[95,8,71,6,"maxStyleDimension"],[95,25,71,23],[95,28,71,26,"flatStyle"],[95,37,71,35],[95,38,71,36,"sMaxDimensionXY"],[95,53,71,51],[95,54,71,52],[96,6,72,4],[97,6,74,4],[97,12,74,10,"padding"],[97,19,74,17],[97,22,74,20,"flatStyle"],[97,31,74,29],[97,32,74,30,"sPaddingXY"],[97,42,74,40],[97,43,74,41],[97,47,74,45,"flatStyle"],[97,56,74,54],[97,57,74,55,"padding"],[97,64,74,62],[98,6,75,4],[98,12,75,10,"padding1"],[98,20,75,18],[98,23,75,21,"flatStyle"],[98,32,75,30],[98,33,75,31,"sPadding1"],[98,42,75,40],[98,43,75,41],[98,47,75,45,"padding"],[98,54,75,52],[98,58,75,56],[98,59,75,57],[99,6,76,4],[99,12,76,10,"padding2"],[99,20,76,18],[99,23,76,21,"flatStyle"],[99,32,76,30],[99,33,76,31,"sPadding2"],[99,42,76,40],[99,43,76,41],[99,47,76,45,"padding"],[99,54,76,52],[99,58,76,56],[99,59,76,57],[100,6,77,4,"space1"],[100,12,77,10],[100,15,77,14],[100,22,77,21,"padding1"],[100,30,77,29],[100,35,77,34],[100,43,77,42],[100,46,77,45,"padding1"],[100,54,77,53],[100,57,77,56],[100,58,77,58],[101,6,78,4,"space2"],[101,12,78,10],[101,15,78,14],[101,22,78,21,"padding2"],[101,30,78,29],[101,35,78,34],[101,43,78,42],[101,46,78,45,"padding2"],[101,54,78,53],[101,57,78,56],[101,58,78,58],[102,4,79,2],[103,4,80,2],[103,11,80,9],[104,6,80,11,"space1"],[104,12,80,17],[105,6,80,19,"space2"],[105,12,80,25],[106,6,80,27,"maxStyleDimension"],[107,4,80,45],[107,5,80,46],[108,2,81,0],[109,2,83,0],[109,11,83,9,"getAdjustedTotalDimensions"],[109,37,83,35,"getAdjustedTotalDimensions"],[109,38,83,36],[110,4,84,2,"totalDimension"],[110,18,84,16],[111,4,85,2,"maxDimension"],[111,16,85,14],[112,4,86,2,"contentContainerStyle"],[112,25,86,23],[113,4,87,2,"style"],[113,9,87,7],[114,4,88,2,"horizontal"],[114,14,88,12],[114,17,88,15],[114,22,88,20],[115,4,89,2,"adjustGridToStyles"],[115,22,89,20],[115,25,89,23],[116,2,90,0],[116,3,90,1],[116,5,90,3],[117,4,91,2],[117,8,91,6,"adjustedTotalDimension"],[117,30,91,28],[117,33,91,31,"totalDimension"],[117,47,91,45],[118,4,92,2],[118,8,92,6,"actualMaxDimension"],[118,26,92,24],[118,29,92,27,"totalDimension"],[118,43,92,41],[118,44,92,42],[118,45,92,43],[120,4,94,2],[121,4,95,2],[121,8,95,6,"maxDimension"],[121,20,95,18],[121,24,95,22,"totalDimension"],[121,38,95,36],[121,41,95,39,"maxDimension"],[121,53,95,51],[121,55,95,53],[122,6,96,4,"actualMaxDimension"],[122,24,96,22],[122,27,96,25,"maxDimension"],[122,39,96,37],[123,6,97,4,"adjustedTotalDimension"],[123,28,97,26],[123,31,97,29,"maxDimension"],[123,43,97,41],[124,4,98,2],[125,4,100,2],[125,8,100,6,"adjustGridToStyles"],[125,26,100,24],[125,28,100,26],[126,6,101,4],[126,10,101,8,"contentContainerStyle"],[126,31,101,29],[126,33,101,31],[127,8,102,6],[127,14,102,12],[128,10,102,14,"space1"],[128,16,102,20],[129,10,102,22,"space2"],[129,16,102,28],[130,10,102,30,"maxStyleDimension"],[131,8,102,48],[131,9,102,49],[131,12,102,52,"getStyleDimensions"],[131,30,102,70],[131,31,102,71,"contentContainerStyle"],[131,52,102,92],[131,54,102,94,"horizontal"],[131,64,102,104],[131,65,102,105],[132,8,103,6],[133,8,104,6],[133,12,104,10,"maxStyleDimension"],[133,29,104,27],[133,33,104,31,"adjustedTotalDimension"],[133,55,104,53],[133,58,104,56,"maxStyleDimension"],[133,75,104,73],[133,77,104,75],[134,10,105,8,"actualMaxDimension"],[134,28,105,26],[134,31,105,29,"maxStyleDimension"],[134,48,105,46],[135,10,106,8,"adjustedTotalDimension"],[135,32,106,30],[135,35,106,33,"maxStyleDimension"],[135,52,106,50],[136,8,107,6],[137,8,108,6],[138,8,109,6],[138,12,109,10,"space1"],[138,18,109,16],[138,22,109,20,"space2"],[138,28,109,26],[138,30,109,28],[139,10,110,8,"adjustedTotalDimension"],[139,32,110,30],[139,35,110,33,"adjustedTotalDimension"],[139,57,110,55],[139,60,110,58,"space1"],[139,66,110,64],[139,69,110,67,"space2"],[139,75,110,73],[140,8,111,6],[141,6,112,4],[142,6,114,4],[142,10,114,8,"style"],[142,15,114,13],[142,17,114,15],[143,8,115,6],[143,14,115,12,"edgeSpaceDiff"],[143,27,115,25],[143,30,115,28],[143,31,115,29,"totalDimension"],[143,45,115,43],[143,48,115,46,"actualMaxDimension"],[143,66,115,64],[143,70,115,68],[143,71,115,69],[143,72,115,70],[143,73,115,71],[144,8,116,6],[144,14,116,12],[145,10,116,14,"space1"],[145,16,116,20],[146,10,116,22,"space2"],[147,8,116,29],[147,9,116,30],[147,12,116,33,"getStyleDimensions"],[147,30,116,51],[147,31,116,52,"style"],[147,36,116,57],[147,38,116,59,"horizontal"],[147,48,116,69],[147,49,116,70],[148,8,117,6],[149,8,118,6],[149,12,118,10,"space1"],[149,18,118,16],[149,21,118,19,"edgeSpaceDiff"],[149,34,118,32],[149,36,118,34],[150,10,119,8,"adjustedTotalDimension"],[150,32,119,30],[150,36,119,35,"space1"],[150,42,119,41],[150,45,119,44,"edgeSpaceDiff"],[150,58,119,58],[150,59,119,59],[150,60,119,60],[151,8,120,6],[152,8,121,6],[152,12,121,10,"space2"],[152,18,121,16],[152,21,121,19,"edgeSpaceDiff"],[152,34,121,32],[152,36,121,34],[153,10,122,8,"adjustedTotalDimension"],[153,32,122,30],[153,36,122,35,"space2"],[153,42,122,41],[153,45,122,44,"edgeSpaceDiff"],[153,58,122,58],[153,59,122,59],[153,60,122,60],[154,8,123,6],[155,6,124,4],[156,4,125,2],[157,4,127,2],[157,11,127,9,"adjustedTotalDimension"],[157,33,127,31],[158,2,128,0],[159,2,130,0],[159,11,130,9,"generateStyles"],[159,25,130,23,"generateStyles"],[159,26,130,24],[160,4,131,2,"itemDimension"],[160,17,131,15],[161,4,132,2,"containerDimension"],[161,22,132,20],[162,4,133,2,"spacing"],[162,11,133,9],[163,4,134,2,"fixed"],[163,9,134,7],[164,4,135,2,"horizontal"],[164,14,135,12],[165,4,136,2,"fixedSpacing"],[165,16,136,14],[166,4,137,2,"itemsPerRow"],[167,2,138,0],[167,3,138,1],[167,5,138,3],[168,4,139,2],[168,8,139,6,"rowStyle"],[168,16,139,14],[168,19,139,17],[169,6,140,4,"flexDirection"],[169,19,140,17],[169,21,140,19],[169,26,140,24],[170,6,141,4,"paddingLeft"],[170,17,141,15],[170,19,141,17,"fixed"],[170,24,141,22],[170,27,141,25,"fixedSpacing"],[170,39,141,37],[170,42,141,40,"spacing"],[170,49,141,47],[171,6,142,4,"paddingBottom"],[171,19,142,17],[171,21,142,19,"spacing"],[172,4,143,2],[172,5,143,3],[173,4,145,2],[173,8,145,6,"containerStyle"],[173,22,145,20],[173,25,145,23],[174,6,146,4,"flexDirection"],[174,19,146,17],[174,21,146,19],[174,29,146,27],[175,6,147,4,"justifyContent"],[175,20,147,18],[175,22,147,20],[175,30,147,28],[176,6,148,4,"width"],[176,11,148,9],[176,13,148,11,"fixed"],[176,18,148,16],[176,21,148,19,"itemDimension"],[176,34,148,32],[176,37,148,36,"containerDimension"],[176,55,148,54],[176,58,148,57,"spacing"],[176,65,148,65],[177,6,149,4,"marginRight"],[177,17,149,15],[177,19,149,17,"fixed"],[177,24,149,22],[177,27,149,25,"fixedSpacing"],[177,39,149,37],[177,42,149,40,"spacing"],[178,4,150,2],[178,5,150,3],[179,4,152,2],[179,10,152,8,"containerFullWidthStyle"],[179,33,152,31],[179,36,152,34],[180,6,153,4,"flexDirection"],[180,19,153,17],[180,21,153,19],[180,29,153,27],[181,6,154,4,"justifyContent"],[181,20,154,18],[181,22,154,20],[181,30,154,28],[182,6,155,4,"width"],[182,11,155,9],[182,13,155,11,"containerDimension"],[182,31,155,29],[182,34,155,32,"itemsPerRow"],[182,45,155,43],[182,48,155,46,"spacing"],[182,55,155,53],[183,6,156,4,"marginBottom"],[183,18,156,16],[183,20,156,18,"spacing"],[184,4,157,2],[184,5,157,3],[185,4,159,2],[185,8,159,6,"horizontal"],[185,18,159,16],[185,20,159,18],[186,6,160,4,"rowStyle"],[186,14,160,12],[186,17,160,15],[187,8,161,6,"flexDirection"],[187,21,161,19],[187,23,161,21],[187,31,161,29],[188,8,162,6,"paddingTop"],[188,18,162,16],[188,20,162,18,"fixed"],[188,25,162,23],[188,28,162,26,"fixedSpacing"],[188,40,162,38],[188,43,162,41,"spacing"],[188,50,162,48],[189,8,163,6,"paddingRight"],[189,20,163,18],[189,22,163,20,"spacing"],[190,6,164,4],[190,7,164,5],[191,6,166,4,"containerStyle"],[191,20,166,18],[191,23,166,21],[192,8,167,6,"flexDirection"],[192,21,167,19],[192,23,167,21],[192,28,167,26],[193,8,168,6,"justifyContent"],[193,22,168,20],[193,24,168,22],[193,32,168,30],[194,8,169,6,"height"],[194,14,169,12],[194,16,169,14,"fixed"],[194,21,169,19],[194,24,169,22,"itemDimension"],[194,37,169,35],[194,40,169,39,"containerDimension"],[194,58,169,57],[194,61,169,60,"spacing"],[194,68,169,68],[195,8,170,6,"marginBottom"],[195,20,170,18],[195,22,170,20,"fixed"],[195,27,170,25],[195,30,170,28,"fixedSpacing"],[195,42,170,40],[195,45,170,43,"spacing"],[196,6,171,4],[196,7,171,5],[197,4,172,2],[198,4,174,2],[198,11,174,9],[199,6,175,4,"containerFullWidthStyle"],[199,29,175,27],[200,6,176,4,"containerStyle"],[200,20,176,18],[201,6,177,4,"rowStyle"],[202,4,178,2],[202,5,178,3],[203,2,179,0],[204,0,179,1],[204,3]],"functionMap":{"names":["<global>","chunkArray","array.reduce$argument_0","calculateDimensions","getStyleDimensions","getAdjustedTotalDimensions","generateStyles"],"mappings":"AAA;ACE;sBCG;GDa;CDC;AGE;CH0B;AIE;CJ+B;AKE;CL6C;AME;CNiD"},"hasCjsExports":false},"type":"js/module"}]}