{"dependencies":[{"name":"./timeoutManager.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":59,"index":83}}],"key":"pyQHMhdGxfRLqgunhFS/8/ELubI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"createNotifyManager\", {\n    enumerable: true,\n    get: function () {\n      return createNotifyManager;\n    }\n  });\n  Object.defineProperty(exports, \"defaultScheduler\", {\n    enumerable: true,\n    get: function () {\n      return defaultScheduler;\n    }\n  });\n  Object.defineProperty(exports, \"notifyManager\", {\n    enumerable: true,\n    get: function () {\n      return notifyManager;\n    }\n  });\n  var _timeoutManagerJs = require(_dependencyMap[0], \"./timeoutManager.js\");\n  // src/notifyManager.ts\n\n  var defaultScheduler = _timeoutManagerJs.systemSetTimeoutZero;\n  function createNotifyManager() {\n    let queue = [];\n    let transactions = 0;\n    let notifyFn = callback => {\n      callback();\n    };\n    let batchNotifyFn = callback => {\n      callback();\n    };\n    let scheduleFn = defaultScheduler;\n    const schedule = callback => {\n      if (transactions) {\n        queue.push(callback);\n      } else {\n        scheduleFn(() => {\n          notifyFn(callback);\n        });\n      }\n    };\n    const flush = () => {\n      const originalQueue = queue;\n      queue = [];\n      if (originalQueue.length) {\n        scheduleFn(() => {\n          batchNotifyFn(() => {\n            originalQueue.forEach(callback => {\n              notifyFn(callback);\n            });\n          });\n        });\n      }\n    };\n    return {\n      batch: callback => {\n        let result;\n        transactions++;\n        try {\n          result = callback();\n        } finally {\n          transactions--;\n          if (!transactions) {\n            flush();\n          }\n        }\n        return result;\n      },\n      /**\n       * All calls to the wrapped function will be batched.\n       */\n      batchCalls: callback => {\n        return (...args) => {\n          schedule(() => {\n            callback(...args);\n          });\n        };\n      },\n      schedule,\n      /**\n       * Use this method to set a custom notify function.\n       * This can be used to for example wrap notifications with `React.act` while running tests.\n       */\n      setNotifyFunction: fn => {\n        notifyFn = fn;\n      },\n      /**\n       * Use this method to set a custom function to batch notifications together into a single tick.\n       * By default React Query will use the batch function provided by ReactDOM or React Native.\n       */\n      setBatchNotifyFunction: fn => {\n        batchNotifyFn = fn;\n      },\n      setScheduler: fn => {\n        scheduleFn = fn;\n      }\n    };\n  }\n  var notifyManager = createNotifyManager();\n});","lineCount":106,"map":[[7,2,81,0,"Object"],[7,8,81,0],[7,9,81,0,"defineProperty"],[7,23,81,0],[7,24,81,0,"exports"],[7,31,81,0],[8,4,81,0,"enumerable"],[8,14,81,0],[9,4,81,0,"get"],[9,7,81,0],[9,18,81,0,"get"],[9,19,81,0],[10,6,81,0],[10,13,82,2,"createNotifyManager"],[10,32,82,21],[11,4,82,21],[12,2,82,21],[13,2,81,0,"Object"],[13,8,81,0],[13,9,81,0,"defineProperty"],[13,23,81,0],[13,24,81,0,"exports"],[13,31,81,0],[14,4,81,0,"enumerable"],[14,14,81,0],[15,4,81,0,"get"],[15,7,81,0],[15,18,81,0,"get"],[15,19,81,0],[16,6,81,0],[16,13,83,2,"defaultScheduler"],[16,29,83,18],[17,4,83,18],[18,2,83,18],[19,2,81,0,"Object"],[19,8,81,0],[19,9,81,0,"defineProperty"],[19,23,81,0],[19,24,81,0,"exports"],[19,31,81,0],[20,4,81,0,"enumerable"],[20,14,81,0],[21,4,81,0,"get"],[21,7,81,0],[21,18,81,0,"get"],[21,19,81,0],[22,6,81,0],[22,13,84,2,"notifyManager"],[22,26,84,15],[23,4,84,15],[24,2,84,15],[25,2,2,0],[25,6,2,0,"_timeoutManagerJs"],[25,23,2,0],[25,26,2,0,"require"],[25,33,2,0],[25,34,2,0,"_dependencyMap"],[25,48,2,0],[26,2,1,0],[28,2,3,0],[28,6,3,4,"defaultScheduler"],[28,22,3,20],[28,25,3,23,"systemSetTimeoutZero"],[28,42,3,43],[28,43,3,43,"systemSetTimeoutZero"],[28,63,3,43],[29,2,4,0],[29,11,4,9,"createNotifyManager"],[29,30,4,28,"createNotifyManager"],[29,31,4,28],[29,33,4,31],[30,4,5,2],[30,8,5,6,"queue"],[30,13,5,11],[30,16,5,14],[30,18,5,16],[31,4,6,2],[31,8,6,6,"transactions"],[31,20,6,18],[31,23,6,21],[31,24,6,22],[32,4,7,2],[32,8,7,6,"notifyFn"],[32,16,7,14],[32,19,7,18,"callback"],[32,27,7,26],[32,31,7,31],[33,6,8,4,"callback"],[33,14,8,12],[33,15,8,13],[33,16,8,14],[34,4,9,2],[34,5,9,3],[35,4,10,2],[35,8,10,6,"batchNotifyFn"],[35,21,10,19],[35,24,10,23,"callback"],[35,32,10,31],[35,36,10,36],[36,6,11,4,"callback"],[36,14,11,12],[36,15,11,13],[36,16,11,14],[37,4,12,2],[37,5,12,3],[38,4,13,2],[38,8,13,6,"scheduleFn"],[38,18,13,16],[38,21,13,19,"defaultScheduler"],[38,37,13,35],[39,4,14,2],[39,10,14,8,"schedule"],[39,18,14,16],[39,21,14,20,"callback"],[39,29,14,28],[39,33,14,33],[40,6,15,4],[40,10,15,8,"transactions"],[40,22,15,20],[40,24,15,22],[41,8,16,6,"queue"],[41,13,16,11],[41,14,16,12,"push"],[41,18,16,16],[41,19,16,17,"callback"],[41,27,16,25],[41,28,16,26],[42,6,17,4],[42,7,17,5],[42,13,17,11],[43,8,18,6,"scheduleFn"],[43,18,18,16],[43,19,18,17],[43,25,18,23],[44,10,19,8,"notifyFn"],[44,18,19,16],[44,19,19,17,"callback"],[44,27,19,25],[44,28,19,26],[45,8,20,6],[45,9,20,7],[45,10,20,8],[46,6,21,4],[47,4,22,2],[47,5,22,3],[48,4,23,2],[48,10,23,8,"flush"],[48,15,23,13],[48,18,23,16,"flush"],[48,19,23,16],[48,24,23,22],[49,6,24,4],[49,12,24,10,"originalQueue"],[49,25,24,23],[49,28,24,26,"queue"],[49,33,24,31],[50,6,25,4,"queue"],[50,11,25,9],[50,14,25,12],[50,16,25,14],[51,6,26,4],[51,10,26,8,"originalQueue"],[51,23,26,21],[51,24,26,22,"length"],[51,30,26,28],[51,32,26,30],[52,8,27,6,"scheduleFn"],[52,18,27,16],[52,19,27,17],[52,25,27,23],[53,10,28,8,"batchNotifyFn"],[53,23,28,21],[53,24,28,22],[53,30,28,28],[54,12,29,10,"originalQueue"],[54,25,29,23],[54,26,29,24,"forEach"],[54,33,29,31],[54,34,29,33,"callback"],[54,42,29,41],[54,46,29,46],[55,14,30,12,"notifyFn"],[55,22,30,20],[55,23,30,21,"callback"],[55,31,30,29],[55,32,30,30],[56,12,31,10],[56,13,31,11],[56,14,31,12],[57,10,32,8],[57,11,32,9],[57,12,32,10],[58,8,33,6],[58,9,33,7],[58,10,33,8],[59,6,34,4],[60,4,35,2],[60,5,35,3],[61,4,36,2],[61,11,36,9],[62,6,37,4,"batch"],[62,11,37,9],[62,13,37,12,"callback"],[62,21,37,20],[62,25,37,25],[63,8,38,6],[63,12,38,10,"result"],[63,18,38,16],[64,8,39,6,"transactions"],[64,20,39,18],[64,22,39,20],[65,8,40,6],[65,12,40,10],[66,10,41,8,"result"],[66,16,41,14],[66,19,41,17,"callback"],[66,27,41,25],[66,28,41,26],[66,29,41,27],[67,8,42,6],[67,9,42,7],[67,18,42,16],[68,10,43,8,"transactions"],[68,22,43,20],[68,24,43,22],[69,10,44,8],[69,14,44,12],[69,15,44,13,"transactions"],[69,27,44,25],[69,29,44,27],[70,12,45,10,"flush"],[70,17,45,15],[70,18,45,16],[70,19,45,17],[71,10,46,8],[72,8,47,6],[73,8,48,6],[73,15,48,13,"result"],[73,21,48,19],[74,6,49,4],[74,7,49,5],[75,6,50,4],[76,0,51,0],[77,0,52,0],[78,6,53,4,"batchCalls"],[78,16,53,14],[78,18,53,17,"callback"],[78,26,53,25],[78,30,53,30],[79,8,54,6],[79,15,54,13],[79,16,54,14],[79,19,54,17,"args"],[79,23,54,21],[79,28,54,26],[80,10,55,8,"schedule"],[80,18,55,16],[80,19,55,17],[80,25,55,23],[81,12,56,10,"callback"],[81,20,56,18],[81,21,56,19],[81,24,56,22,"args"],[81,28,56,26],[81,29,56,27],[82,10,57,8],[82,11,57,9],[82,12,57,10],[83,8,58,6],[83,9,58,7],[84,6,59,4],[84,7,59,5],[85,6,60,4,"schedule"],[85,14,60,12],[86,6,61,4],[87,0,62,0],[88,0,63,0],[89,0,64,0],[90,6,65,4,"setNotifyFunction"],[90,23,65,21],[90,25,65,24,"fn"],[90,27,65,26],[90,31,65,31],[91,8,66,6,"notifyFn"],[91,16,66,14],[91,19,66,17,"fn"],[91,21,66,19],[92,6,67,4],[92,7,67,5],[93,6,68,4],[94,0,69,0],[95,0,70,0],[96,0,71,0],[97,6,72,4,"setBatchNotifyFunction"],[97,28,72,26],[97,30,72,29,"fn"],[97,32,72,31],[97,36,72,36],[98,8,73,6,"batchNotifyFn"],[98,21,73,19],[98,24,73,22,"fn"],[98,26,73,24],[99,6,74,4],[99,7,74,5],[100,6,75,4,"setScheduler"],[100,18,75,16],[100,20,75,19,"fn"],[100,22,75,21],[100,26,75,26],[101,8,76,6,"scheduleFn"],[101,18,76,16],[101,21,76,19,"fn"],[101,23,76,21],[102,6,77,4],[103,4,78,2],[103,5,78,3],[104,2,79,0],[105,2,80,0],[105,6,80,4,"notifyManager"],[105,19,80,17],[105,22,80,20,"createNotifyManager"],[105,41,80,39],[105,42,80,40],[105,43,80,41],[106,0,80,42],[106,3]],"functionMap":{"names":["<global>","createNotifyManager","notifyFn","batchNotifyFn","schedule","scheduleFn$argument_0","flush","batchNotifyFn$argument_0","originalQueue.forEach$argument_0","batch","batchCalls","<anonymous>","schedule$argument_0","setNotifyFunction","setBatchNotifyFunction","setScheduler"],"mappings":"AAA;ACG;iBCG;GDE;sBEC;GFE;mBGE;iBCI;ODE;GHE;gBKC;iBDI;sBEC;gCCC;WDE;SFC;OCC;GLE;WQE;KRY;gBSI;aCC;iBCC;SDE;ODC;KTC;uBYM;KZE;4BaK;KbE;kBcC;KdE;CDE"},"hasCjsExports":false},"type":"js/module"}]}