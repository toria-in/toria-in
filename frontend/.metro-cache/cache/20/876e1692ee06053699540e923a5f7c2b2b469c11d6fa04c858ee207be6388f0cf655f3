{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":138},"end":{"line":4,"column":30,"index":154}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":170},"end":{"line":5,"column":30,"index":186}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"./useLayoutState","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":211},"end":{"line":6,"column":50,"index":238}}],"key":"MerVRZD235rZApaT7qH9UzTwxcs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useRecyclingState = useRecyclingState;\n  var tslib_1 = require(_dependencyMap[0], \"tslib\");\n  var react_1 = require(_dependencyMap[1], \"react\");\n  var useLayoutState_1 = require(_dependencyMap[2], \"./useLayoutState\");\n  /**\n   * A custom hook that provides state management with automatic reset functionality.\n   * Similar to useState, but automatically resets the state when specified dependencies change.\n   * This is particularly useful for managing state that needs to be reset when certain props or values change when items are recycled.\n   * This also avoids another setState call on recycling and helps with performance.\n   *\n   * @param initialState - The initial state value or a function that returns the initial state\n   * @param deps - Array of dependencies that trigger a state reset when changed\n   * @param onReset - Optional callback function that is called when the state is reset\n   * @returns A tuple containing:\n   *   - The current state value\n   *   - A setState function that works like useState's setState\n   */\n  function useRecyclingState(initialState, deps, onReset) {\n    // Store the current state value in a ref to persist between renders\n    var valueStore = (0, react_1.useRef)();\n    // Use layoutState to trigger re-renders when state changes\n    var _a = tslib_1.__read((0, useLayoutState_1.useLayoutState)(0), 2),\n      _ = _a[0],\n      setCounter = _a[1];\n    // Reset state when dependencies change\n    (0, react_1.useMemo)(function () {\n      // Calculate initial value from function or direct value\n      var initialValue = typeof initialState === \"function\" ? initialState() : initialState;\n      valueStore.current = initialValue;\n      // Call onReset callback if provided\n      onReset === null || onReset === void 0 ? void 0 : onReset();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, deps);\n    /**\n     * Proxy setState function that updates the stored value and triggers a re-render.\n     * Only triggers a re-render if the new value is different from the current value.\n     */\n    var setStateProxy = (0, react_1.useCallback)(function (newValue, skipParentLayout) {\n      // Calculate next state value from function or direct value\n      var nextState = typeof newValue === \"function\" ? newValue(valueStore.current) : newValue;\n      // Only update and trigger re-render if value has changed\n      if (nextState !== valueStore.current) {\n        valueStore.current = nextState;\n        setCounter(function (prev) {\n          return prev + 1;\n        }, skipParentLayout);\n      }\n    }, [setCounter]);\n    return [valueStore.current, setStateProxy];\n  }\n});","lineCount":57,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"useRecyclingState"],[7,27,3,25],[7,30,3,28,"useRecyclingState"],[7,47,3,45],[8,2,4,0],[8,6,4,4,"tslib_1"],[8,13,4,11],[8,16,4,14,"require"],[8,23,4,21],[8,24,4,21,"_dependencyMap"],[8,38,4,21],[8,50,4,29],[8,51,4,30],[9,2,5,0],[9,6,5,4,"react_1"],[9,13,5,11],[9,16,5,14,"require"],[9,23,5,21],[9,24,5,21,"_dependencyMap"],[9,38,5,21],[9,50,5,29],[9,51,5,30],[10,2,6,0],[10,6,6,4,"useLayoutState_1"],[10,22,6,20],[10,25,6,23,"require"],[10,32,6,30],[10,33,6,30,"_dependencyMap"],[10,47,6,30],[10,70,6,49],[10,71,6,50],[11,2,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,2,20,0],[24,11,20,9,"useRecyclingState"],[24,28,20,26,"useRecyclingState"],[24,29,20,27,"initialState"],[24,41,20,39],[24,43,20,41,"deps"],[24,47,20,45],[24,49,20,47,"onReset"],[24,56,20,54],[24,58,20,56],[25,4,21,4],[26,4,22,4],[26,8,22,8,"valueStore"],[26,18,22,18],[26,21,22,21],[26,22,22,22],[26,23,22,23],[26,25,22,25,"react_1"],[26,32,22,32],[26,33,22,33,"useRef"],[26,39,22,39],[26,41,22,41],[26,42,22,42],[27,4,23,4],[28,4,24,4],[28,8,24,8,"_a"],[28,10,24,10],[28,13,24,13,"tslib_1"],[28,20,24,20],[28,21,24,21,"__read"],[28,27,24,27],[28,28,24,28],[28,29,24,29],[28,30,24,30],[28,32,24,32,"useLayoutState_1"],[28,48,24,48],[28,49,24,49,"useLayoutState"],[28,63,24,63],[28,65,24,65],[28,66,24,66],[28,67,24,67],[28,69,24,69],[28,70,24,70],[28,71,24,71],[29,6,24,73,"_"],[29,7,24,74],[29,10,24,77,"_a"],[29,12,24,79],[29,13,24,80],[29,14,24,81],[29,15,24,82],[30,6,24,84,"setCounter"],[30,16,24,94],[30,19,24,97,"_a"],[30,21,24,99],[30,22,24,100],[30,23,24,101],[30,24,24,102],[31,4,25,4],[32,4,26,4],[32,5,26,5],[32,6,26,6],[32,8,26,8,"react_1"],[32,15,26,15],[32,16,26,16,"useMemo"],[32,23,26,23],[32,25,26,25],[32,37,26,37],[33,6,27,8],[34,6,28,8],[34,10,28,12,"initialValue"],[34,22,28,24],[34,25,28,27],[34,32,28,34,"initialState"],[34,44,28,46],[34,49,28,51],[34,59,28,61],[34,62,29,14,"initialState"],[34,74,29,26],[34,75,29,27],[34,76,29,28],[34,79,30,14,"initialState"],[34,91,30,26],[35,6,31,8,"valueStore"],[35,16,31,18],[35,17,31,19,"current"],[35,24,31,26],[35,27,31,29,"initialValue"],[35,39,31,41],[36,6,32,8],[37,6,33,8,"onReset"],[37,13,33,15],[37,18,33,20],[37,22,33,24],[37,26,33,28,"onReset"],[37,33,33,35],[37,38,33,40],[37,43,33,45],[37,44,33,46],[37,47,33,49],[37,52,33,54],[37,53,33,55],[37,56,33,58,"onReset"],[37,63,33,65],[37,64,33,66],[37,65,33,67],[38,6,34,8],[39,4,35,4],[39,5,35,5],[39,7,35,7,"deps"],[39,11,35,11],[39,12,35,12],[40,4,36,4],[41,0,37,0],[42,0,38,0],[43,0,39,0],[44,4,40,4],[44,8,40,8,"setStateProxy"],[44,21,40,21],[44,24,40,24],[44,25,40,25],[44,26,40,26],[44,28,40,28,"react_1"],[44,35,40,35],[44,36,40,36,"useCallback"],[44,47,40,47],[44,49,40,49],[44,59,40,59,"newValue"],[44,67,40,67],[44,69,40,69,"skipParentLayout"],[44,85,40,85],[44,87,40,87],[45,6,41,8],[46,6,42,8],[46,10,42,12,"nextState"],[46,19,42,21],[46,22,42,24],[46,29,42,31,"newValue"],[46,37,42,39],[46,42,42,44],[46,52,42,54],[46,55,43,14,"newValue"],[46,63,43,22],[46,64,43,23,"valueStore"],[46,74,43,33],[46,75,43,34,"current"],[46,82,43,41],[46,83,43,42],[46,86,44,14,"newValue"],[46,94,44,22],[47,6,45,8],[48,6,46,8],[48,10,46,12,"nextState"],[48,19,46,21],[48,24,46,26,"valueStore"],[48,34,46,36],[48,35,46,37,"current"],[48,42,46,44],[48,44,46,46],[49,8,47,12,"valueStore"],[49,18,47,22],[49,19,47,23,"current"],[49,26,47,30],[49,29,47,33,"nextState"],[49,38,47,42],[50,8,48,12,"setCounter"],[50,18,48,22],[50,19,48,23],[50,29,48,33,"prev"],[50,33,48,37],[50,35,48,39],[51,10,48,41],[51,17,48,48,"prev"],[51,21,48,52],[51,24,48,55],[51,25,48,56],[52,8,48,58],[52,9,48,59],[52,11,48,61,"skipParentLayout"],[52,27,48,77],[52,28,48,78],[53,6,49,8],[54,4,50,4],[54,5,50,5],[54,7,50,7],[54,8,50,8,"setCounter"],[54,18,50,18],[54,19,50,19],[54,20,50,20],[55,4,51,4],[55,11,51,11],[55,12,51,12,"valueStore"],[55,22,51,22],[55,23,51,23,"current"],[55,30,51,30],[55,32,51,32,"setStateProxy"],[55,45,51,45],[55,46,51,46],[56,2,52,0],[57,0,52,1],[57,3]],"functionMap":{"names":["<global>","useRecyclingState","<anonymous>","setCounter$argument_0"],"mappings":"AAA;ACmB;yBCM;KDS;iDCK;uBCQ,oCD;KDE;CDE"},"hasCjsExports":true},"type":"js/module"}]}