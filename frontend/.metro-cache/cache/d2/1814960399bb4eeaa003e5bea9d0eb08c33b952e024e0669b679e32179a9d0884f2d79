{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.MultiTypeAverageWindow = exports.AverageWindow = void 0;\n  /**\n   * Helper class to calculate running average of the most recent n values\n   */\n  var AverageWindow = /** @class */function () {\n    function AverageWindow(size, startValue) {\n      this.nextIndex = 0;\n      this.inputValues = new Array(Math.max(1, size));\n      this.currentAverage = startValue !== null && startValue !== void 0 ? startValue : 0;\n      this.currentCount = startValue === undefined ? 0 : 1;\n      this.nextIndex = this.currentCount;\n      this.inputValues[0] = startValue;\n    }\n    Object.defineProperty(AverageWindow.prototype, \"currentValue\", {\n      /**\n       * Can be used to get the current average value\n       */\n      get: function () {\n        return this.currentAverage;\n      },\n      enumerable: false,\n      configurable: true\n    });\n    /**\n     *\n     * @param value Add new value to the average window and updated current average\n     */\n    AverageWindow.prototype.addValue = function (value) {\n      var target = this.getNextIndex();\n      var oldValue = this.inputValues[target];\n      var newCount = oldValue === undefined ? this.currentCount + 1 : this.currentCount;\n      this.inputValues[target] = value;\n      this.currentAverage = this.currentAverage * (this.currentCount / newCount) + (value - (oldValue !== null && oldValue !== void 0 ? oldValue : 0)) / newCount;\n      this.currentCount = newCount;\n    };\n    AverageWindow.prototype.getNextIndex = function () {\n      // starts from 0 once we reach end of the array\n      var newTarget = this.nextIndex;\n      this.nextIndex = (this.nextIndex + 1) % this.inputValues.length;\n      return newTarget;\n    };\n    return AverageWindow;\n  }();\n  exports.AverageWindow = AverageWindow;\n  var MultiTypeAverageWindow = /** @class */function () {\n    /**\n     * @param windowSize Size of the average window\n     * @param defaultValue Default value to return if no value is available\n     */\n    function MultiTypeAverageWindow(windowSize, defaultValue) {\n      this.averageWindows = new Map();\n      this.windowSize = windowSize;\n      this.defaultValue = defaultValue;\n    }\n    MultiTypeAverageWindow.prototype.addValue = function (value, type) {\n      var averageWindow = this.averageWindows.get(type);\n      if (!averageWindow) {\n        averageWindow = new AverageWindow(this.windowSize);\n        this.averageWindows.set(type, averageWindow);\n      }\n      averageWindow.addValue(value);\n    };\n    MultiTypeAverageWindow.prototype.getCurrentValue = function (type) {\n      var _a, _b;\n      var averageWindow = this.averageWindows.get(type);\n      return (_b = (_a = averageWindow === null || averageWindow === void 0 ? void 0 : averageWindow.currentValue) !== null && _a !== void 0 ? _a : this.defaultValue) !== null && _b !== void 0 ? _b : 0;\n    };\n    MultiTypeAverageWindow.prototype.reset = function () {\n      this.averageWindows.clear();\n    };\n    return MultiTypeAverageWindow;\n  }();\n  exports.MultiTypeAverageWindow = MultiTypeAverageWindow;\n});","lineCount":80,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"MultiTypeAverageWindow"],[7,32,3,30],[7,35,3,33,"exports"],[7,42,3,40],[7,43,3,41,"AverageWindow"],[7,56,3,54],[7,59,3,57],[7,64,3,62],[7,65,3,63],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,2,7,0],[11,6,7,4,"AverageWindow"],[11,19,7,17],[11,22,7,20],[11,35,7,35],[11,47,7,47],[12,4,8,4],[12,13,8,13,"AverageWindow"],[12,26,8,26,"AverageWindow"],[12,27,8,27,"size"],[12,31,8,31],[12,33,8,33,"startValue"],[12,43,8,43],[12,45,8,45],[13,6,9,8],[13,10,9,12],[13,11,9,13,"nextIndex"],[13,20,9,22],[13,23,9,25],[13,24,9,26],[14,6,10,8],[14,10,10,12],[14,11,10,13,"inputValues"],[14,22,10,24],[14,25,10,27],[14,29,10,31,"Array"],[14,34,10,36],[14,35,10,37,"Math"],[14,39,10,41],[14,40,10,42,"max"],[14,43,10,45],[14,44,10,46],[14,45,10,47],[14,47,10,49,"size"],[14,51,10,53],[14,52,10,54],[14,53,10,55],[15,6,11,8],[15,10,11,12],[15,11,11,13,"currentAverage"],[15,25,11,27],[15,28,11,30,"startValue"],[15,38,11,40],[15,43,11,45],[15,47,11,49],[15,51,11,53,"startValue"],[15,61,11,63],[15,66,11,68],[15,71,11,73],[15,72,11,74],[15,75,11,77,"startValue"],[15,85,11,87],[15,88,11,90],[15,89,11,91],[16,6,12,8],[16,10,12,12],[16,11,12,13,"currentCount"],[16,23,12,25],[16,26,12,28,"startValue"],[16,36,12,38],[16,41,12,43,"undefined"],[16,50,12,52],[16,53,12,55],[16,54,12,56],[16,57,12,59],[16,58,12,60],[17,6,13,8],[17,10,13,12],[17,11,13,13,"nextIndex"],[17,20,13,22],[17,23,13,25],[17,27,13,29],[17,28,13,30,"currentCount"],[17,40,13,42],[18,6,14,8],[18,10,14,12],[18,11,14,13,"inputValues"],[18,22,14,24],[18,23,14,25],[18,24,14,26],[18,25,14,27],[18,28,14,30,"startValue"],[18,38,14,40],[19,4,15,4],[20,4,16,4,"Object"],[20,10,16,10],[20,11,16,11,"defineProperty"],[20,25,16,25],[20,26,16,26,"AverageWindow"],[20,39,16,39],[20,40,16,40,"prototype"],[20,49,16,49],[20,51,16,51],[20,65,16,65],[20,67,16,67],[21,6,17,8],[22,0,18,0],[23,0,19,0],[24,6,20,8,"get"],[24,9,20,11],[24,11,20,13],[24,20,20,13,"get"],[24,21,20,13],[24,23,20,25],[25,8,21,12],[25,15,21,19],[25,19,21,23],[25,20,21,24,"currentAverage"],[25,34,21,38],[26,6,22,8],[26,7,22,9],[27,6,23,8,"enumerable"],[27,16,23,18],[27,18,23,20],[27,23,23,25],[28,6,24,8,"configurable"],[28,18,24,20],[28,20,24,22],[29,4,25,4],[29,5,25,5],[29,6,25,6],[30,4,26,4],[31,0,27,0],[32,0,28,0],[33,0,29,0],[34,4,30,4,"AverageWindow"],[34,17,30,17],[34,18,30,18,"prototype"],[34,27,30,27],[34,28,30,28,"addValue"],[34,36,30,36],[34,39,30,39],[34,49,30,49,"value"],[34,54,30,54],[34,56,30,56],[35,6,31,8],[35,10,31,12,"target"],[35,16,31,18],[35,19,31,21],[35,23,31,25],[35,24,31,26,"getNextIndex"],[35,36,31,38],[35,37,31,39],[35,38,31,40],[36,6,32,8],[36,10,32,12,"oldValue"],[36,18,32,20],[36,21,32,23],[36,25,32,27],[36,26,32,28,"inputValues"],[36,37,32,39],[36,38,32,40,"target"],[36,44,32,46],[36,45,32,47],[37,6,33,8],[37,10,33,12,"newCount"],[37,18,33,20],[37,21,33,23,"oldValue"],[37,29,33,31],[37,34,33,36,"undefined"],[37,43,33,45],[37,46,33,48],[37,50,33,52],[37,51,33,53,"currentCount"],[37,63,33,65],[37,66,33,68],[37,67,33,69],[37,70,33,72],[37,74,33,76],[37,75,33,77,"currentCount"],[37,87,33,89],[38,6,34,8],[38,10,34,12],[38,11,34,13,"inputValues"],[38,22,34,24],[38,23,34,25,"target"],[38,29,34,31],[38,30,34,32],[38,33,34,35,"value"],[38,38,34,40],[39,6,35,8],[39,10,35,12],[39,11,35,13,"currentAverage"],[39,25,35,27],[39,28,36,12],[39,32,36,16],[39,33,36,17,"currentAverage"],[39,47,36,31],[39,51,36,35],[39,55,36,39],[39,56,36,40,"currentCount"],[39,68,36,52],[39,71,36,55,"newCount"],[39,79,36,63],[39,80,36,64],[39,83,37,16],[39,84,37,17,"value"],[39,89,37,22],[39,93,37,26,"oldValue"],[39,101,37,34],[39,106,37,39],[39,110,37,43],[39,114,37,47,"oldValue"],[39,122,37,55],[39,127,37,60],[39,132,37,65],[39,133,37,66],[39,136,37,69,"oldValue"],[39,144,37,77],[39,147,37,80],[39,148,37,81],[39,149,37,82],[39,153,37,86,"newCount"],[39,161,37,94],[40,6,38,8],[40,10,38,12],[40,11,38,13,"currentCount"],[40,23,38,25],[40,26,38,28,"newCount"],[40,34,38,36],[41,4,39,4],[41,5,39,5],[42,4,40,4,"AverageWindow"],[42,17,40,17],[42,18,40,18,"prototype"],[42,27,40,27],[42,28,40,28,"getNextIndex"],[42,40,40,40],[42,43,40,43],[42,55,40,55],[43,6,41,8],[44,6,42,8],[44,10,42,12,"newTarget"],[44,19,42,21],[44,22,42,24],[44,26,42,28],[44,27,42,29,"nextIndex"],[44,36,42,38],[45,6,43,8],[45,10,43,12],[45,11,43,13,"nextIndex"],[45,20,43,22],[45,23,43,25],[45,24,43,26],[45,28,43,30],[45,29,43,31,"nextIndex"],[45,38,43,40],[45,41,43,43],[45,42,43,44],[45,46,43,48],[45,50,43,52],[45,51,43,53,"inputValues"],[45,62,43,64],[45,63,43,65,"length"],[45,69,43,71],[46,6,44,8],[46,13,44,15,"newTarget"],[46,22,44,24],[47,4,45,4],[47,5,45,5],[48,4,46,4],[48,11,46,11,"AverageWindow"],[48,24,46,24],[49,2,47,0],[49,3,47,1],[49,4,47,2],[49,5,47,4],[50,2,48,0,"exports"],[50,9,48,7],[50,10,48,8,"AverageWindow"],[50,23,48,21],[50,26,48,24,"AverageWindow"],[50,39,48,37],[51,2,49,0],[51,6,49,4,"MultiTypeAverageWindow"],[51,28,49,26],[51,31,49,29],[51,44,49,44],[51,56,49,56],[52,4,50,4],[53,0,51,0],[54,0,52,0],[55,0,53,0],[56,4,54,4],[56,13,54,13,"MultiTypeAverageWindow"],[56,35,54,35,"MultiTypeAverageWindow"],[56,36,54,36,"windowSize"],[56,46,54,46],[56,48,54,48,"defaultValue"],[56,60,54,60],[56,62,54,62],[57,6,55,8],[57,10,55,12],[57,11,55,13,"averageWindows"],[57,25,55,27],[57,28,55,30],[57,32,55,34,"Map"],[57,35,55,37],[57,36,55,38],[57,37,55,39],[58,6,56,8],[58,10,56,12],[58,11,56,13,"windowSize"],[58,21,56,23],[58,24,56,26,"windowSize"],[58,34,56,36],[59,6,57,8],[59,10,57,12],[59,11,57,13,"defaultValue"],[59,23,57,25],[59,26,57,28,"defaultValue"],[59,38,57,40],[60,4,58,4],[61,4,59,4,"MultiTypeAverageWindow"],[61,26,59,26],[61,27,59,27,"prototype"],[61,36,59,36],[61,37,59,37,"addValue"],[61,45,59,45],[61,48,59,48],[61,58,59,58,"value"],[61,63,59,63],[61,65,59,65,"type"],[61,69,59,69],[61,71,59,71],[62,6,60,8],[62,10,60,12,"averageWindow"],[62,23,60,25],[62,26,60,28],[62,30,60,32],[62,31,60,33,"averageWindows"],[62,45,60,47],[62,46,60,48,"get"],[62,49,60,51],[62,50,60,52,"type"],[62,54,60,56],[62,55,60,57],[63,6,61,8],[63,10,61,12],[63,11,61,13,"averageWindow"],[63,24,61,26],[63,26,61,28],[64,8,62,12,"averageWindow"],[64,21,62,25],[64,24,62,28],[64,28,62,32,"AverageWindow"],[64,41,62,45],[64,42,62,46],[64,46,62,50],[64,47,62,51,"windowSize"],[64,57,62,61],[64,58,62,62],[65,8,63,12],[65,12,63,16],[65,13,63,17,"averageWindows"],[65,27,63,31],[65,28,63,32,"set"],[65,31,63,35],[65,32,63,36,"type"],[65,36,63,40],[65,38,63,42,"averageWindow"],[65,51,63,55],[65,52,63,56],[66,6,64,8],[67,6,65,8,"averageWindow"],[67,19,65,21],[67,20,65,22,"addValue"],[67,28,65,30],[67,29,65,31,"value"],[67,34,65,36],[67,35,65,37],[68,4,66,4],[68,5,66,5],[69,4,67,4,"MultiTypeAverageWindow"],[69,26,67,26],[69,27,67,27,"prototype"],[69,36,67,36],[69,37,67,37,"getCurrentValue"],[69,52,67,52],[69,55,67,55],[69,65,67,65,"type"],[69,69,67,69],[69,71,67,71],[70,6,68,8],[70,10,68,12,"_a"],[70,12,68,14],[70,14,68,16,"_b"],[70,16,68,18],[71,6,69,8],[71,10,69,12,"averageWindow"],[71,23,69,25],[71,26,69,28],[71,30,69,32],[71,31,69,33,"averageWindows"],[71,45,69,47],[71,46,69,48,"get"],[71,49,69,51],[71,50,69,52,"type"],[71,54,69,56],[71,55,69,57],[72,6,70,8],[72,13,70,15],[72,14,70,16,"_b"],[72,16,70,18],[72,19,70,21],[72,20,70,22,"_a"],[72,22,70,24],[72,25,70,27,"averageWindow"],[72,38,70,40],[72,43,70,45],[72,47,70,49],[72,51,70,53,"averageWindow"],[72,64,70,66],[72,69,70,71],[72,74,70,76],[72,75,70,77],[72,78,70,80],[72,83,70,85],[72,84,70,86],[72,87,70,89,"averageWindow"],[72,100,70,102],[72,101,70,103,"currentValue"],[72,113,70,115],[72,119,70,121],[72,123,70,125],[72,127,70,129,"_a"],[72,129,70,131],[72,134,70,136],[72,139,70,141],[72,140,70,142],[72,143,70,145,"_a"],[72,145,70,147],[72,148,70,150],[72,152,70,154],[72,153,70,155,"defaultValue"],[72,165,70,167],[72,171,70,173],[72,175,70,177],[72,179,70,181,"_b"],[72,181,70,183],[72,186,70,188],[72,191,70,193],[72,192,70,194],[72,195,70,197,"_b"],[72,197,70,199],[72,200,70,202],[72,201,70,203],[73,4,71,4],[73,5,71,5],[74,4,72,4,"MultiTypeAverageWindow"],[74,26,72,26],[74,27,72,27,"prototype"],[74,36,72,36],[74,37,72,37,"reset"],[74,42,72,42],[74,45,72,45],[74,57,72,57],[75,6,73,8],[75,10,73,12],[75,11,73,13,"averageWindows"],[75,25,73,27],[75,26,73,28,"clear"],[75,31,73,33],[75,32,73,34],[75,33,73,35],[76,4,74,4],[76,5,74,5],[77,4,75,4],[77,11,75,11,"MultiTypeAverageWindow"],[77,33,75,33],[78,2,76,0],[78,3,76,1],[78,4,76,2],[78,5,76,4],[79,2,77,0,"exports"],[79,9,77,7],[79,10,77,8,"MultiTypeAverageWindow"],[79,32,77,30],[79,35,77,33,"MultiTypeAverageWindow"],[79,57,77,55],[80,0,77,56],[80,3]],"functionMap":{"names":["<global>","<anonymous>","AverageWindow","Object.defineProperty$argument_2.get","prototype.addValue","prototype.getNextIndex","MultiTypeAverageWindow","MultiTypeAverageWindow.prototype.addValue","MultiTypeAverageWindow.prototype.getCurrentValue","MultiTypeAverageWindow.prototype.reset"],"mappings":"AAA;mCCM;ICC;KDO;aEK;SFE;uCGQ;KHS;2CIC;KJK;CDE;4CCE;IKK;KLI;gDMC;KNO;uDOC;KPI;6CQC;KRE;CDE"},"hasCjsExports":true},"type":"js/module"}]}