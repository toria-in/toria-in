{"dependencies":[{"name":"./assignRef","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":40,"index":40}}],"key":"YFkdemC04xpzOlnEd9pTHe8eLzA=","exportNames":["*"],"imports":1}},{"name":"./useRef","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":41},"end":{"line":2,"column":42,"index":83}}],"key":"zfEgW9zMqp9/GmpjOrNPNu5vyL0=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  exports.useTransformRef = useTransformRef;\n  var _assignRef = require(_dependencyMap[0], \"./assignRef\");\n  var _useRef = require(_dependencyMap[1], \"./useRef\");\n  /**\n   * Create a _lense_ on Ref, making it possible to transform ref value\n   * @param {ReactRef} ref\n   * @param {Function} transformer. ðŸ‘‰ Ref would be __NOT updated__ on `transformer` update.\n   * @returns {RefObject}\n   *\n   * @see https://github.com/theKashey/use-callback-ref#usetransformref-to-replace-reactuseimperativehandle\n   * @example\n   *\n   * const ResizableWithRef = forwardRef((props, ref) =>\n   *  <Resizable {...props} ref={useTransformRef(ref, i => i ? i.resizable : null)}/>\n   * );\n   */\n  function useTransformRef(ref, transformer) {\n    return (0, _useRef.useCallbackRef)(null, function (value) {\n      return (0, _assignRef.assignRef)(ref, transformer(value));\n    });\n  }\n});","lineCount":28,"map":[[7,2,16,0,"exports"],[7,9,16,0],[7,10,16,0,"useTransformRef"],[7,25,16,0],[7,28,16,0,"useTransformRef"],[7,43,16,0],[8,2,1,0],[8,6,1,0,"_assignRef"],[8,16,1,0],[8,19,1,0,"require"],[8,26,1,0],[8,27,1,0,"_dependencyMap"],[8,41,1,0],[9,2,2,0],[9,6,2,0,"_useRef"],[9,13,2,0],[9,16,2,0,"require"],[9,23,2,0],[9,24,2,0,"_dependencyMap"],[9,38,2,0],[10,2,3,0],[11,0,4,0],[12,0,5,0],[13,0,6,0],[14,0,7,0],[15,0,8,0],[16,0,9,0],[17,0,10,0],[18,0,11,0],[19,0,12,0],[20,0,13,0],[21,0,14,0],[22,0,15,0],[23,2,16,7],[23,11,16,16,"useTransformRef"],[23,26,16,31,"useTransformRef"],[23,27,16,32,"ref"],[23,30,16,35],[23,32,16,37,"transformer"],[23,43,16,48],[23,45,16,50],[24,4,17,4],[24,11,17,11],[24,15,17,11,"useCallbackRef"],[24,22,17,25],[24,23,17,25,"useCallbackRef"],[24,37,17,25],[24,39,17,26],[24,43,17,30],[24,45,17,32],[24,55,17,42,"value"],[24,60,17,47],[24,62,17,49],[25,6,17,51],[25,13,17,58],[25,17,17,58,"assignRef"],[25,27,17,67],[25,28,17,67,"assignRef"],[25,37,17,67],[25,39,17,68,"ref"],[25,42,17,71],[25,44,17,73,"transformer"],[25,55,17,84],[25,56,17,85,"value"],[25,61,17,90],[25,62,17,91],[25,63,17,92],[26,4,17,94],[26,5,17,95],[26,6,17,96],[27,2,18,0],[28,0,18,1],[28,3]],"functionMap":{"names":["<global>","useTransformRef","useCallbackRef$argument_1"],"mappings":"AAA;OCe;gCCC,+DD;CDC"},"hasCjsExports":false},"type":"js/module"}]}