{"dependencies":[{"name":"./notifyManager.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":51,"index":75}}],"key":"sE8Jk2BSATSKXEwal1fu77sfV3E=","exportNames":["*"],"imports":1}},{"name":"./mutation.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":41,"index":117}}],"key":"DEeb5DG8JiSOn+k43YR2tCf/fEk=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":118},"end":{"line":4,"column":49,"index":167}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}},{"name":"./subscribable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":168},"end":{"line":5,"column":49,"index":217}}],"key":"f0fxTGZggQRtb//cHMvH9AHIWOw=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"MutationCache\", {\n    enumerable: true,\n    get: function () {\n      return MutationCache;\n    }\n  });\n  var _notifyManagerJs = require(_dependencyMap[0], \"./notifyManager.js\");\n  var _mutationJs = require(_dependencyMap[1], \"./mutation.js\");\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  var _subscribableJs = require(_dependencyMap[3], \"./subscribable.js\");\n  // src/mutationCache.ts\n\n  var MutationCache = class extends _subscribableJs.Subscribable {\n    constructor(config = {}) {\n      super();\n      this.config = config;\n      this.#mutations = /* @__PURE__ */new Set();\n      this.#scopes = /* @__PURE__ */new Map();\n      this.#mutationId = 0;\n    }\n    #mutations;\n    #scopes;\n    #mutationId;\n    build(client, options, state) {\n      const mutation = new _mutationJs.Mutation({\n        client,\n        mutationCache: this,\n        mutationId: ++this.#mutationId,\n        options: client.defaultMutationOptions(options),\n        state\n      });\n      this.add(mutation);\n      return mutation;\n    }\n    add(mutation) {\n      this.#mutations.add(mutation);\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          scopedMutations.push(mutation);\n        } else {\n          this.#scopes.set(scope, [mutation]);\n        }\n      }\n      this.notify({\n        type: \"added\",\n        mutation\n      });\n    }\n    remove(mutation) {\n      if (this.#mutations.delete(mutation)) {\n        const scope = scopeFor(mutation);\n        if (typeof scope === \"string\") {\n          const scopedMutations = this.#scopes.get(scope);\n          if (scopedMutations) {\n            if (scopedMutations.length > 1) {\n              const index = scopedMutations.indexOf(mutation);\n              if (index !== -1) {\n                scopedMutations.splice(index, 1);\n              }\n            } else if (scopedMutations[0] === mutation) {\n              this.#scopes.delete(scope);\n            }\n          }\n        }\n      }\n      this.notify({\n        type: \"removed\",\n        mutation\n      });\n    }\n    canRun(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const mutationsWithSameScope = this.#scopes.get(scope);\n        const firstPendingMutation = mutationsWithSameScope?.find(m => m.state.status === \"pending\");\n        return !firstPendingMutation || firstPendingMutation === mutation;\n      } else {\n        return true;\n      }\n    }\n    runNext(mutation) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const foundMutation = this.#scopes.get(scope)?.find(m => m !== mutation && m.state.isPaused);\n        return foundMutation?.continue() ?? Promise.resolve();\n      } else {\n        return Promise.resolve();\n      }\n    }\n    clear() {\n      _notifyManagerJs.notifyManager.batch(() => {\n        this.#mutations.forEach(mutation => {\n          this.notify({\n            type: \"removed\",\n            mutation\n          });\n        });\n        this.#mutations.clear();\n        this.#scopes.clear();\n      });\n    }\n    getAll() {\n      return Array.from(this.#mutations);\n    }\n    find(filters) {\n      const defaultedFilters = {\n        exact: true,\n        ...filters\n      };\n      return this.getAll().find(mutation => (0, _utilsJs.matchMutation)(defaultedFilters, mutation));\n    }\n    findAll(filters = {}) {\n      return this.getAll().filter(mutation => (0, _utilsJs.matchMutation)(filters, mutation));\n    }\n    notify(event) {\n      _notifyManagerJs.notifyManager.batch(() => {\n        this.listeners.forEach(listener => {\n          listener(event);\n        });\n      });\n    }\n    resumePausedMutations() {\n      const pausedMutations = this.getAll().filter(x => x.state.isPaused);\n      return _notifyManagerJs.notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(_utilsJs.noop))));\n    }\n  };\n  function scopeFor(mutation) {\n    return mutation.options.scope?.id;\n  }\n});","lineCount":138,"map":[[7,2,121,0,"Object"],[7,8,121,0],[7,9,121,0,"defineProperty"],[7,23,121,0],[7,24,121,0,"exports"],[7,31,121,0],[8,4,121,0,"enumerable"],[8,14,121,0],[9,4,121,0,"get"],[9,7,121,0],[9,18,121,0,"get"],[9,19,121,0],[10,6,121,0],[10,13,122,2,"MutationCache"],[10,26,122,15],[11,4,122,15],[12,2,122,15],[13,2,2,0],[13,6,2,0,"_notifyManagerJs"],[13,22,2,0],[13,25,2,0,"require"],[13,32,2,0],[13,33,2,0,"_dependencyMap"],[13,47,2,0],[14,2,3,0],[14,6,3,0,"_mutationJs"],[14,17,3,0],[14,20,3,0,"require"],[14,27,3,0],[14,28,3,0,"_dependencyMap"],[14,42,3,0],[15,2,4,0],[15,6,4,0,"_utilsJs"],[15,14,4,0],[15,17,4,0,"require"],[15,24,4,0],[15,25,4,0,"_dependencyMap"],[15,39,4,0],[16,2,5,0],[16,6,5,0,"_subscribableJs"],[16,21,5,0],[16,24,5,0,"require"],[16,31,5,0],[16,32,5,0,"_dependencyMap"],[16,46,5,0],[17,2,1,0],[19,2,6,0],[19,6,6,4,"MutationCache"],[19,19,6,17],[19,22,6,20],[19,36,6,34,"Subscribable"],[19,51,6,46],[19,52,6,46,"Subscribable"],[19,64,6,46],[19,65,6,47],[20,4,7,2,"constructor"],[20,15,7,13,"constructor"],[20,16,7,14,"config"],[20,22,7,20],[20,25,7,23],[20,26,7,24],[20,27,7,25],[20,29,7,27],[21,6,8,4],[21,11,8,9],[21,12,8,10],[21,13,8,11],[22,6,9,4],[22,10,9,8],[22,11,9,9,"config"],[22,17,9,15],[22,20,9,18,"config"],[22,26,9,24],[23,6,10,4],[23,10,10,8],[23,11,10,9],[23,12,10,10,"mutations"],[23,21,10,19],[23,24,10,22],[23,39,10,38],[23,43,10,42,"Set"],[23,46,10,45],[23,47,10,46],[23,48,10,47],[24,6,11,4],[24,10,11,8],[24,11,11,9],[24,12,11,10,"scopes"],[24,18,11,16],[24,21,11,19],[24,36,11,35],[24,40,11,39,"Map"],[24,43,11,42],[24,44,11,43],[24,45,11,44],[25,6,12,4],[25,10,12,8],[25,11,12,9],[25,12,12,10,"mutationId"],[25,22,12,20],[25,25,12,23],[25,26,12,24],[26,4,13,2],[27,4,14,2],[27,5,14,3,"mutations"],[27,14,14,12],[28,4,15,2],[28,5,15,3,"scopes"],[28,11,15,9],[29,4,16,2],[29,5,16,3,"mutationId"],[29,15,16,13],[30,4,17,2,"build"],[30,9,17,7,"build"],[30,10,17,8,"client"],[30,16,17,14],[30,18,17,16,"options"],[30,25,17,23],[30,27,17,25,"state"],[30,32,17,30],[30,34,17,32],[31,6,18,4],[31,12,18,10,"mutation"],[31,20,18,18],[31,23,18,21],[31,27,18,25,"Mutation"],[31,38,18,33],[31,39,18,33,"Mutation"],[31,47,18,33],[31,48,18,34],[32,8,19,6,"client"],[32,14,19,12],[33,8,20,6,"mutationCache"],[33,21,20,19],[33,23,20,21],[33,27,20,25],[34,8,21,6,"mutationId"],[34,18,21,16],[34,20,21,18],[34,22,21,20],[34,26,21,24],[34,27,21,25],[34,28,21,26,"mutationId"],[34,38,21,36],[35,8,22,6,"options"],[35,15,22,13],[35,17,22,15,"client"],[35,23,22,21],[35,24,22,22,"defaultMutationOptions"],[35,46,22,44],[35,47,22,45,"options"],[35,54,22,52],[35,55,22,53],[36,8,23,6,"state"],[37,6,24,4],[37,7,24,5],[37,8,24,6],[38,6,25,4],[38,10,25,8],[38,11,25,9,"add"],[38,14,25,12],[38,15,25,13,"mutation"],[38,23,25,21],[38,24,25,22],[39,6,26,4],[39,13,26,11,"mutation"],[39,21,26,19],[40,4,27,2],[41,4,28,2,"add"],[41,7,28,5,"add"],[41,8,28,6,"mutation"],[41,16,28,14],[41,18,28,16],[42,6,29,4],[42,10,29,8],[42,11,29,9],[42,12,29,10,"mutations"],[42,21,29,19],[42,22,29,20,"add"],[42,25,29,23],[42,26,29,24,"mutation"],[42,34,29,32],[42,35,29,33],[43,6,30,4],[43,12,30,10,"scope"],[43,17,30,15],[43,20,30,18,"scopeFor"],[43,28,30,26],[43,29,30,27,"mutation"],[43,37,30,35],[43,38,30,36],[44,6,31,4],[44,10,31,8],[44,17,31,15,"scope"],[44,22,31,20],[44,27,31,25],[44,35,31,33],[44,37,31,35],[45,8,32,6],[45,14,32,12,"scopedMutations"],[45,29,32,27],[45,32,32,30],[45,36,32,34],[45,37,32,35],[45,38,32,36,"scopes"],[45,44,32,42],[45,45,32,43,"get"],[45,48,32,46],[45,49,32,47,"scope"],[45,54,32,52],[45,55,32,53],[46,8,33,6],[46,12,33,10,"scopedMutations"],[46,27,33,25],[46,29,33,27],[47,10,34,8,"scopedMutations"],[47,25,34,23],[47,26,34,24,"push"],[47,30,34,28],[47,31,34,29,"mutation"],[47,39,34,37],[47,40,34,38],[48,8,35,6],[48,9,35,7],[48,15,35,13],[49,10,36,8],[49,14,36,12],[49,15,36,13],[49,16,36,14,"scopes"],[49,22,36,20],[49,23,36,21,"set"],[49,26,36,24],[49,27,36,25,"scope"],[49,32,36,30],[49,34,36,32],[49,35,36,33,"mutation"],[49,43,36,41],[49,44,36,42],[49,45,36,43],[50,8,37,6],[51,6,38,4],[52,6,39,4],[52,10,39,8],[52,11,39,9,"notify"],[52,17,39,15],[52,18,39,16],[53,8,39,18,"type"],[53,12,39,22],[53,14,39,24],[53,21,39,31],[54,8,39,33,"mutation"],[55,6,39,42],[55,7,39,43],[55,8,39,44],[56,4,40,2],[57,4,41,2,"remove"],[57,10,41,8,"remove"],[57,11,41,9,"mutation"],[57,19,41,17],[57,21,41,19],[58,6,42,4],[58,10,42,8],[58,14,42,12],[58,15,42,13],[58,16,42,14,"mutations"],[58,25,42,23],[58,26,42,24,"delete"],[58,32,42,30],[58,33,42,31,"mutation"],[58,41,42,39],[58,42,42,40],[58,44,42,42],[59,8,43,6],[59,14,43,12,"scope"],[59,19,43,17],[59,22,43,20,"scopeFor"],[59,30,43,28],[59,31,43,29,"mutation"],[59,39,43,37],[59,40,43,38],[60,8,44,6],[60,12,44,10],[60,19,44,17,"scope"],[60,24,44,22],[60,29,44,27],[60,37,44,35],[60,39,44,37],[61,10,45,8],[61,16,45,14,"scopedMutations"],[61,31,45,29],[61,34,45,32],[61,38,45,36],[61,39,45,37],[61,40,45,38,"scopes"],[61,46,45,44],[61,47,45,45,"get"],[61,50,45,48],[61,51,45,49,"scope"],[61,56,45,54],[61,57,45,55],[62,10,46,8],[62,14,46,12,"scopedMutations"],[62,29,46,27],[62,31,46,29],[63,12,47,10],[63,16,47,14,"scopedMutations"],[63,31,47,29],[63,32,47,30,"length"],[63,38,47,36],[63,41,47,39],[63,42,47,40],[63,44,47,42],[64,14,48,12],[64,20,48,18,"index"],[64,25,48,23],[64,28,48,26,"scopedMutations"],[64,43,48,41],[64,44,48,42,"indexOf"],[64,51,48,49],[64,52,48,50,"mutation"],[64,60,48,58],[64,61,48,59],[65,14,49,12],[65,18,49,16,"index"],[65,23,49,21],[65,28,49,26],[65,29,49,27],[65,30,49,28],[65,32,49,30],[66,16,50,14,"scopedMutations"],[66,31,50,29],[66,32,50,30,"splice"],[66,38,50,36],[66,39,50,37,"index"],[66,44,50,42],[66,46,50,44],[66,47,50,45],[66,48,50,46],[67,14,51,12],[68,12,52,10],[68,13,52,11],[68,19,52,17],[68,23,52,21,"scopedMutations"],[68,38,52,36],[68,39,52,37],[68,40,52,38],[68,41,52,39],[68,46,52,44,"mutation"],[68,54,52,52],[68,56,52,54],[69,14,53,12],[69,18,53,16],[69,19,53,17],[69,20,53,18,"scopes"],[69,26,53,24],[69,27,53,25,"delete"],[69,33,53,31],[69,34,53,32,"scope"],[69,39,53,37],[69,40,53,38],[70,12,54,10],[71,10,55,8],[72,8,56,6],[73,6,57,4],[74,6,58,4],[74,10,58,8],[74,11,58,9,"notify"],[74,17,58,15],[74,18,58,16],[75,8,58,18,"type"],[75,12,58,22],[75,14,58,24],[75,23,58,33],[76,8,58,35,"mutation"],[77,6,58,44],[77,7,58,45],[77,8,58,46],[78,4,59,2],[79,4,60,2,"canRun"],[79,10,60,8,"canRun"],[79,11,60,9,"mutation"],[79,19,60,17],[79,21,60,19],[80,6,61,4],[80,12,61,10,"scope"],[80,17,61,15],[80,20,61,18,"scopeFor"],[80,28,61,26],[80,29,61,27,"mutation"],[80,37,61,35],[80,38,61,36],[81,6,62,4],[81,10,62,8],[81,17,62,15,"scope"],[81,22,62,20],[81,27,62,25],[81,35,62,33],[81,37,62,35],[82,8,63,6],[82,14,63,12,"mutationsWithSameScope"],[82,36,63,34],[82,39,63,37],[82,43,63,41],[82,44,63,42],[82,45,63,43,"scopes"],[82,51,63,49],[82,52,63,50,"get"],[82,55,63,53],[82,56,63,54,"scope"],[82,61,63,59],[82,62,63,60],[83,8,64,6],[83,14,64,12,"firstPendingMutation"],[83,34,64,32],[83,37,64,35,"mutationsWithSameScope"],[83,59,64,57],[83,61,64,59,"find"],[83,65,64,63],[83,66,65,9,"m"],[83,67,65,10],[83,71,65,15,"m"],[83,72,65,16],[83,73,65,17,"state"],[83,78,65,22],[83,79,65,23,"status"],[83,85,65,29],[83,90,65,34],[83,99,66,6],[83,100,66,7],[84,8,67,6],[84,15,67,13],[84,16,67,14,"firstPendingMutation"],[84,36,67,34],[84,40,67,38,"firstPendingMutation"],[84,60,67,58],[84,65,67,63,"mutation"],[84,73,67,71],[85,6,68,4],[85,7,68,5],[85,13,68,11],[86,8,69,6],[86,15,69,13],[86,19,69,17],[87,6,70,4],[88,4,71,2],[89,4,72,2,"runNext"],[89,11,72,9,"runNext"],[89,12,72,10,"mutation"],[89,20,72,18],[89,22,72,20],[90,6,73,4],[90,12,73,10,"scope"],[90,17,73,15],[90,20,73,18,"scopeFor"],[90,28,73,26],[90,29,73,27,"mutation"],[90,37,73,35],[90,38,73,36],[91,6,74,4],[91,10,74,8],[91,17,74,15,"scope"],[91,22,74,20],[91,27,74,25],[91,35,74,33],[91,37,74,35],[92,8,75,6],[92,14,75,12,"foundMutation"],[92,27,75,25],[92,30,75,28],[92,34,75,32],[92,35,75,33],[92,36,75,34,"scopes"],[92,42,75,40],[92,43,75,41,"get"],[92,46,75,44],[92,47,75,45,"scope"],[92,52,75,50],[92,53,75,51],[92,55,75,53,"find"],[92,59,75,57],[92,60,75,59,"m"],[92,61,75,60],[92,65,75,65,"m"],[92,66,75,66],[92,71,75,71,"mutation"],[92,79,75,79],[92,83,75,83,"m"],[92,84,75,84],[92,85,75,85,"state"],[92,90,75,90],[92,91,75,91,"isPaused"],[92,99,75,99],[92,100,75,100],[93,8,76,6],[93,15,76,13,"foundMutation"],[93,28,76,26],[93,30,76,28,"continue"],[93,38,76,36],[93,39,76,37],[93,40,76,38],[93,44,76,42,"Promise"],[93,51,76,49],[93,52,76,50,"resolve"],[93,59,76,57],[93,60,76,58],[93,61,76,59],[94,6,77,4],[94,7,77,5],[94,13,77,11],[95,8,78,6],[95,15,78,13,"Promise"],[95,22,78,20],[95,23,78,21,"resolve"],[95,30,78,28],[95,31,78,29],[95,32,78,30],[96,6,79,4],[97,4,80,2],[98,4,81,2,"clear"],[98,9,81,7,"clear"],[98,10,81,7],[98,12,81,10],[99,6,82,4,"notifyManager"],[99,22,82,17],[99,23,82,17,"notifyManager"],[99,36,82,17],[99,37,82,18,"batch"],[99,42,82,23],[99,43,82,24],[99,49,82,30],[100,8,83,6],[100,12,83,10],[100,13,83,11],[100,14,83,12,"mutations"],[100,23,83,21],[100,24,83,22,"forEach"],[100,31,83,29],[100,32,83,31,"mutation"],[100,40,83,39],[100,44,83,44],[101,10,84,8],[101,14,84,12],[101,15,84,13,"notify"],[101,21,84,19],[101,22,84,20],[102,12,84,22,"type"],[102,16,84,26],[102,18,84,28],[102,27,84,37],[103,12,84,39,"mutation"],[104,10,84,48],[104,11,84,49],[104,12,84,50],[105,8,85,6],[105,9,85,7],[105,10,85,8],[106,8,86,6],[106,12,86,10],[106,13,86,11],[106,14,86,12,"mutations"],[106,23,86,21],[106,24,86,22,"clear"],[106,29,86,27],[106,30,86,28],[106,31,86,29],[107,8,87,6],[107,12,87,10],[107,13,87,11],[107,14,87,12,"scopes"],[107,20,87,18],[107,21,87,19,"clear"],[107,26,87,24],[107,27,87,25],[107,28,87,26],[108,6,88,4],[108,7,88,5],[108,8,88,6],[109,4,89,2],[110,4,90,2,"getAll"],[110,10,90,8,"getAll"],[110,11,90,8],[110,13,90,11],[111,6,91,4],[111,13,91,11,"Array"],[111,18,91,16],[111,19,91,17,"from"],[111,23,91,21],[111,24,91,22],[111,28,91,26],[111,29,91,27],[111,30,91,28,"mutations"],[111,39,91,37],[111,40,91,38],[112,4,92,2],[113,4,93,2,"find"],[113,8,93,6,"find"],[113,9,93,7,"filters"],[113,16,93,14],[113,18,93,16],[114,6,94,4],[114,12,94,10,"defaultedFilters"],[114,28,94,26],[114,31,94,29],[115,8,94,31,"exact"],[115,13,94,36],[115,15,94,38],[115,19,94,42],[116,8,94,44],[116,11,94,47,"filters"],[117,6,94,55],[117,7,94,56],[118,6,95,4],[118,13,95,11],[118,17,95,15],[118,18,95,16,"getAll"],[118,24,95,22],[118,25,95,23],[118,26,95,24],[118,27,95,25,"find"],[118,31,95,29],[118,32,96,7,"mutation"],[118,40,96,15],[118,44,96,20],[118,48,96,20,"matchMutation"],[118,56,96,33],[118,57,96,33,"matchMutation"],[118,70,96,33],[118,72,96,34,"defaultedFilters"],[118,88,96,50],[118,90,96,52,"mutation"],[118,98,96,60],[118,99,97,4],[118,100,97,5],[119,4,98,2],[120,4,99,2,"findAll"],[120,11,99,9,"findAll"],[120,12,99,10,"filters"],[120,19,99,17],[120,22,99,20],[120,23,99,21],[120,24,99,22],[120,26,99,24],[121,6,100,4],[121,13,100,11],[121,17,100,15],[121,18,100,16,"getAll"],[121,24,100,22],[121,25,100,23],[121,26,100,24],[121,27,100,25,"filter"],[121,33,100,31],[121,34,100,33,"mutation"],[121,42,100,41],[121,46,100,46],[121,50,100,46,"matchMutation"],[121,58,100,59],[121,59,100,59,"matchMutation"],[121,72,100,59],[121,74,100,60,"filters"],[121,81,100,67],[121,83,100,69,"mutation"],[121,91,100,77],[121,92,100,78],[121,93,100,79],[122,4,101,2],[123,4,102,2,"notify"],[123,10,102,8,"notify"],[123,11,102,9,"event"],[123,16,102,14],[123,18,102,16],[124,6,103,4,"notifyManager"],[124,22,103,17],[124,23,103,17,"notifyManager"],[124,36,103,17],[124,37,103,18,"batch"],[124,42,103,23],[124,43,103,24],[124,49,103,30],[125,8,104,6],[125,12,104,10],[125,13,104,11,"listeners"],[125,22,104,20],[125,23,104,21,"forEach"],[125,30,104,28],[125,31,104,30,"listener"],[125,39,104,38],[125,43,104,43],[126,10,105,8,"listener"],[126,18,105,16],[126,19,105,17,"event"],[126,24,105,22],[126,25,105,23],[127,8,106,6],[127,9,106,7],[127,10,106,8],[128,6,107,4],[128,7,107,5],[128,8,107,6],[129,4,108,2],[130,4,109,2,"resumePausedMutations"],[130,25,109,23,"resumePausedMutations"],[130,26,109,23],[130,28,109,26],[131,6,110,4],[131,12,110,10,"pausedMutations"],[131,27,110,25],[131,30,110,28],[131,34,110,32],[131,35,110,33,"getAll"],[131,41,110,39],[131,42,110,40],[131,43,110,41],[131,44,110,42,"filter"],[131,50,110,48],[131,51,110,50,"x"],[131,52,110,51],[131,56,110,56,"x"],[131,57,110,57],[131,58,110,58,"state"],[131,63,110,63],[131,64,110,64,"isPaused"],[131,72,110,72],[131,73,110,73],[132,6,111,4],[132,13,111,11,"notifyManager"],[132,29,111,24],[132,30,111,24,"notifyManager"],[132,43,111,24],[132,44,111,25,"batch"],[132,49,111,30],[132,50,112,6],[132,56,112,12,"Promise"],[132,63,112,19],[132,64,112,20,"all"],[132,67,112,23],[132,68,113,8,"pausedMutations"],[132,83,113,23],[132,84,113,24,"map"],[132,87,113,27],[132,88,113,29,"mutation"],[132,96,113,37],[132,100,113,42,"mutation"],[132,108,113,50],[132,109,113,51,"continue"],[132,117,113,59],[132,118,113,60],[132,119,113,61],[132,120,113,62,"catch"],[132,125,113,67],[132,126,113,68,"noop"],[132,134,113,72],[132,135,113,72,"noop"],[132,139,113,72],[132,140,113,73],[132,141,114,6],[132,142,115,4],[132,143,115,5],[133,4,116,2],[134,2,117,0],[134,3,117,1],[135,2,118,0],[135,11,118,9,"scopeFor"],[135,19,118,17,"scopeFor"],[135,20,118,18,"mutation"],[135,28,118,26],[135,30,118,28],[136,4,119,2],[136,11,119,9,"mutation"],[136,19,119,17],[136,20,119,18,"options"],[136,27,119,25],[136,28,119,26,"scope"],[136,33,119,31],[136,35,119,33,"id"],[136,37,119,35],[137,2,120,0],[138,0,120,1],[138,3]],"functionMap":{"names":["<global>","MutationCache","MutationCache#constructor","MutationCache#build","MutationCache#add","MutationCache#remove","MutationCache#canRun","mutationsWithSameScope.find$argument_0","MutationCache#runNext","get.find$argument_0","MutationCache#clear","notifyManager.batch$argument_0","forEach$argument_0","MutationCache#getAll","MutationCache#find","getAll.find$argument_0","MutationCache#findAll","getAll.filter$argument_0","MutationCache#notify","listeners.forEach$argument_0","MutationCache#resumePausedMutations","pausedMutations.map$argument_0","scopeFor"],"mappings":"AAA;oBCK;ECC;GDM;EEI;GFU;EGC;GHY;EIC;GJkB;EKC;QCK,mCD;GLM;EOC;0DCG,yCD;GPK;ESC;wBCC;8BCC;ODE;KDG;GTC;EYC;GZE;EaC;MCG,uDD;GbE;EeC;gCCC,8CD;GfC;EiBC;wBPC;6BQC;ORE;KOC;GjBC;EmBC;iDHC,uBG;MTE;4BUC,6CV;OSC;GnBE;CDC;AsBC;CtBE"},"hasCjsExports":false},"type":"js/module"}]}