{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":47,"index":47}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"../utils","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":48},"end":{"line":2,"column":38,"index":86}}],"key":"mL7nJyZhzUYx+zMcIt1cBzVuRps=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"default\", {\n    enumerable: true,\n    get: function () {\n      return _default;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var _utils = require(_dependencyMap[1], \"../utils\");\n  const useRows = ({\n    data,\n    itemsPerRow,\n    invertedRow,\n    keyExtractor,\n    onItemsPerRowChange\n  }) => {\n    let rows = (0, _utils.chunkArray)(data, itemsPerRow); // Splitting the data into rows\n\n    if (invertedRow) {\n      rows = rows.map(r => r.reverse());\n    }\n    const localKeyExtractor = (0, _react.useCallback)((rowItems, index) => {\n      if (keyExtractor) {\n        return rowItems.map((rowItem, rowItemIndex) => keyExtractor(rowItem, rowItemIndex)).join('_');\n      }\n      return `row_${index}`;\n    }, [keyExtractor]);\n    (0, _react.useEffect)(() => {\n      if (onItemsPerRowChange) {\n        onItemsPerRowChange(itemsPerRow);\n      }\n    }, [itemsPerRow]);\n    return {\n      rows,\n      keyExtractor: localKeyExtractor\n    };\n  };\n  var _default = useRows;\n});","lineCount":44,"map":[[7,2,34,0,"Object"],[7,8,34,0],[7,9,34,0,"defineProperty"],[7,23,34,0],[7,24,34,0,"exports"],[7,31,34,0],[8,4,34,0,"enumerable"],[8,14,34,0],[9,4,34,0,"get"],[9,7,34,0],[9,18,34,0,"get"],[9,19,34,0],[10,6,34,0],[10,13,34,0,"_default"],[10,21,34,0],[11,4,34,0],[12,2,34,0],[13,2,1,0],[13,6,1,0,"_react"],[13,12,1,0],[13,15,1,0,"require"],[13,22,1,0],[13,23,1,0,"_dependencyMap"],[13,37,1,0],[14,2,2,0],[14,6,2,0,"_utils"],[14,12,2,0],[14,15,2,0,"require"],[14,22,2,0],[14,23,2,0,"_dependencyMap"],[14,37,2,0],[15,2,4,0],[15,8,4,6,"useRows"],[15,15,4,13],[15,18,4,16,"useRows"],[15,19,4,17],[16,4,5,2,"data"],[16,8,5,6],[17,4,5,8,"itemsPerRow"],[17,15,5,19],[18,4,5,21,"invertedRow"],[18,15,5,32],[19,4,5,34,"keyExtractor"],[19,16,5,46],[20,4,5,48,"onItemsPerRowChange"],[21,2,6,0],[21,3,6,1],[21,8,6,6],[22,4,7,2],[22,8,7,6,"rows"],[22,12,7,10],[22,15,7,13],[22,19,7,13,"chunkArray"],[22,25,7,23],[22,26,7,23,"chunkArray"],[22,36,7,23],[22,38,7,24,"data"],[22,42,7,28],[22,44,7,30,"itemsPerRow"],[22,55,7,41],[22,56,7,42],[22,57,7,43],[22,58,7,44],[24,4,9,2],[24,8,9,6,"invertedRow"],[24,19,9,17],[24,21,9,19],[25,6,10,4,"rows"],[25,10,10,8],[25,13,10,11,"rows"],[25,17,10,15],[25,18,10,16,"map"],[25,21,10,19],[25,22,10,21,"r"],[25,23,10,22],[25,27,10,27,"r"],[25,28,10,28],[25,29,10,29,"reverse"],[25,36,10,36],[25,37,10,37],[25,38,10,38],[25,39,10,39],[26,4,11,2],[27,4,13,2],[27,10,13,8,"localKeyExtractor"],[27,27,13,25],[27,30,13,28],[27,34,13,28,"useCallback"],[27,40,13,39],[27,41,13,39,"useCallback"],[27,52,13,39],[27,54,14,4],[27,55,14,5,"rowItems"],[27,63,14,13],[27,65,14,15,"index"],[27,70,14,20],[27,75,14,25],[28,6,15,6],[28,10,15,10,"keyExtractor"],[28,22,15,22],[28,24,15,24],[29,8,16,8],[29,15,16,15,"rowItems"],[29,23,16,23],[29,24,17,11,"map"],[29,27,17,14],[29,28,17,15],[29,29,17,16,"rowItem"],[29,36,17,23],[29,38,17,25,"rowItemIndex"],[29,50,17,37],[29,55,17,42,"keyExtractor"],[29,67,17,54],[29,68,17,55,"rowItem"],[29,75,17,62],[29,77,17,64,"rowItemIndex"],[29,89,17,76],[29,90,17,77],[29,91,17,78],[29,92,18,11,"join"],[29,96,18,15],[29,97,18,16],[29,100,18,19],[29,101,18,20],[30,6,19,6],[31,6,20,6],[31,13,20,13],[31,20,20,20,"index"],[31,25,20,25],[31,27,20,27],[32,4,21,4],[32,5,21,5],[32,7,22,4],[32,8,22,5,"keyExtractor"],[32,20,22,17],[32,21,23,2],[32,22,23,3],[33,4,25,2],[33,8,25,2,"useEffect"],[33,14,25,11],[33,15,25,11,"useEffect"],[33,24,25,11],[33,26,25,12],[33,32,25,18],[34,6,26,4],[34,10,26,8,"onItemsPerRowChange"],[34,29,26,27],[34,31,26,29],[35,8,27,6,"onItemsPerRowChange"],[35,27,27,25],[35,28,27,26,"itemsPerRow"],[35,39,27,37],[35,40,27,38],[36,6,28,4],[37,4,29,2],[37,5,29,3],[37,7,29,5],[37,8,29,6,"itemsPerRow"],[37,19,29,17],[37,20,29,18],[37,21,29,19],[38,4,31,2],[38,11,31,9],[39,6,31,11,"rows"],[39,10,31,15],[40,6,31,17,"keyExtractor"],[40,18,31,29],[40,20,31,31,"localKeyExtractor"],[41,4,31,49],[41,5,31,50],[42,2,32,0],[42,3,32,1],[43,2,34,0],[43,6,34,0,"_default"],[43,14,34,0],[43,17,34,15,"useRows"],[43,24,34,22],[44,0,34,23],[44,3]],"functionMap":{"names":["<global>","useRows","rows.map$argument_0","localKeyExtractor","rowItems.map$argument_0","useEffect$argument_0"],"mappings":"AAA;gBCG;oBCM,kBD;IEI;eCG,8DD;KFI;YII;GJI;CDG"},"hasCjsExports":false},"type":"js/module"}]}