{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":38},"end":{"line":4,"column":31,"index":69}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":70},"end":{"line":5,"column":69,"index":139}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"],"imports":1}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":6,"column":0,"index":140},"end":{"line":6,"column":58,"index":198}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"],"imports":1}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":199},"end":{"line":7,"column":74,"index":273}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"],"imports":1}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":8,"column":0,"index":274},"end":{"line":12,"column":33,"index":395}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"],"imports":1}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":396},"end":{"line":13,"column":58,"index":454}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"],"imports":1}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":455},"end":{"line":19,"column":23,"index":559}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useBaseQuery.ts\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useBaseQuery\", {\n    enumerable: true,\n    get: function () {\n      return useBaseQuery;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _tanstackQueryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProviderJs = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var _QueryErrorResetBoundaryJs = require(_dependencyMap[3], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtilsJs = require(_dependencyMap[4], \"./errorBoundaryUtils.js\");\n  var _IsRestoringProviderJs = require(_dependencyMap[5], \"./IsRestoringProvider.js\");\n  var _suspenseJs = require(_dependencyMap[6], \"./suspense.js\");\n  function useBaseQuery(options, Observer, queryClient) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof options !== \"object\" || Array.isArray(options)) {\n        throw new Error('Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object');\n      }\n    }\n    const isRestoring = (0, _IsRestoringProviderJs.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundaryJs.useQueryErrorResetBoundary)();\n    const client = (0, _QueryClientProviderJs.useQueryClient)(queryClient);\n    const defaultedOptions = client.defaultQueryOptions(options);\n    client.getDefaultOptions().queries?._experimental_beforeQuery?.(defaultedOptions);\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!defaultedOptions.queryFn) {\n        console.error(`[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`);\n      }\n    }\n    defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n    (0, _suspenseJs.ensureSuspenseTimers)(defaultedOptions);\n    (0, _errorBoundaryUtilsJs.ensurePreventErrorBoundaryRetry)(defaultedOptions, errorResetBoundary);\n    (0, _errorBoundaryUtilsJs.useClearResetErrorBoundary)(errorResetBoundary);\n    const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n    const [observer] = React.useState(() => new Observer(client, defaultedOptions));\n    const result = observer.getOptimisticResult(defaultedOptions);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => {\n      const unsubscribe = shouldSubscribe ? observer.subscribe(_tanstackQueryCore.notifyManager.batchCalls(onStoreChange)) : _tanstackQueryCore.noop;\n      observer.updateResult();\n      return unsubscribe;\n    }, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setOptions(defaultedOptions);\n    }, [defaultedOptions, observer]);\n    if ((0, _suspenseJs.shouldSuspend)(defaultedOptions, result)) {\n      throw (0, _suspenseJs.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary);\n    }\n    if ((0, _errorBoundaryUtilsJs.getHasError)({\n      result,\n      errorResetBoundary,\n      throwOnError: defaultedOptions.throwOnError,\n      query: client.getQueryCache().get(defaultedOptions.queryHash),\n      suspense: defaultedOptions.suspense\n    })) {\n      throw result.error;\n    }\n    ;\n    client.getDefaultOptions().queries?._experimental_afterQuery?.(defaultedOptions, result);\n    if (defaultedOptions.experimental_prefetchInRender && !_tanstackQueryCore.isServer && (0, _suspenseJs.willFetch)(result, isRestoring)) {\n      const promise = isNewCacheEntry ?\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      (0, _suspenseJs.fetchOptimistic)(defaultedOptions, observer, errorResetBoundary) :\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise;\n      promise?.catch(_tanstackQueryCore.noop).finally(() => {\n        observer.updateResult();\n      });\n    }\n    return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n  }\n});","lineCount":97,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopNamespace"],[10,29,3,0,"e"],[10,30,3,0],[11,4,3,0],[11,8,3,0,"e"],[11,9,3,0],[11,13,3,0,"e"],[11,14,3,0],[11,15,3,0,"__esModule"],[11,25,3,0],[11,34,3,0,"e"],[11,35,3,0],[12,4,3,0],[12,8,3,0,"n"],[12,9,3,0],[13,4,3,0],[13,8,3,0,"e"],[13,9,3,0],[13,11,3,0,"Object"],[13,17,3,0],[13,18,3,0,"keys"],[13,22,3,0],[13,23,3,0,"e"],[13,24,3,0],[13,26,3,0,"forEach"],[13,33,3,0],[13,44,3,0,"k"],[13,45,3,0],[14,6,3,0],[14,10,3,0,"d"],[14,11,3,0],[14,14,3,0,"Object"],[14,20,3,0],[14,21,3,0,"getOwnPropertyDescriptor"],[14,45,3,0],[14,46,3,0,"e"],[14,47,3,0],[14,49,3,0,"k"],[14,50,3,0],[15,6,3,0,"Object"],[15,12,3,0],[15,13,3,0,"defineProperty"],[15,27,3,0],[15,28,3,0,"n"],[15,29,3,0],[15,31,3,0,"k"],[15,32,3,0],[15,34,3,0,"d"],[15,35,3,0],[15,36,3,0,"get"],[15,39,3,0],[15,42,3,0,"d"],[15,43,3,0],[16,8,3,0,"enumerable"],[16,18,3,0],[17,8,3,0,"get"],[17,11,3,0],[17,22,3,0,"get"],[17,23,3,0],[18,10,3,0],[18,17,3,0,"e"],[18,18,3,0],[18,19,3,0,"k"],[18,20,3,0],[19,8,3,0],[20,6,3,0],[21,4,3,0],[22,4,3,0,"n"],[22,5,3,0],[22,6,3,0,"default"],[22,13,3,0],[22,16,3,0,"e"],[22,17,3,0],[23,4,3,0],[23,11,3,0,"n"],[23,12,3,0],[24,2,3,0],[25,2,101,0,"Object"],[25,8,101,0],[25,9,101,0,"defineProperty"],[25,23,101,0],[25,24,101,0,"exports"],[25,31,101,0],[26,4,101,0,"enumerable"],[26,14,101,0],[27,4,101,0,"get"],[27,7,101,0],[27,18,101,0,"get"],[27,19,101,0],[28,6,101,0],[28,13,102,2,"useBaseQuery"],[28,25,102,14],[29,4,102,14],[30,2,102,14],[31,2,4,0],[31,6,4,0,"_react"],[31,12,4,0],[31,15,4,0,"require"],[31,22,4,0],[31,23,4,0,"_dependencyMap"],[31,37,4,0],[32,2,4,0],[32,6,4,0,"React"],[32,11,4,0],[32,14,4,0,"_interopNamespace"],[32,31,4,0],[32,32,4,0,"_react"],[32,38,4,0],[33,2,5,0],[33,6,5,0,"_tanstackQueryCore"],[33,24,5,0],[33,27,5,0,"require"],[33,34,5,0],[33,35,5,0,"_dependencyMap"],[33,49,5,0],[34,2,6,0],[34,6,6,0,"_QueryClientProviderJs"],[34,28,6,0],[34,31,6,0,"require"],[34,38,6,0],[34,39,6,0,"_dependencyMap"],[34,53,6,0],[35,2,7,0],[35,6,7,0,"_QueryErrorResetBoundaryJs"],[35,32,7,0],[35,35,7,0,"require"],[35,42,7,0],[35,43,7,0,"_dependencyMap"],[35,57,7,0],[36,2,8,0],[36,6,8,0,"_errorBoundaryUtilsJs"],[36,27,8,0],[36,30,8,0,"require"],[36,37,8,0],[36,38,8,0,"_dependencyMap"],[36,52,8,0],[37,2,13,0],[37,6,13,0,"_IsRestoringProviderJs"],[37,28,13,0],[37,31,13,0,"require"],[37,38,13,0],[37,39,13,0,"_dependencyMap"],[37,53,13,0],[38,2,14,0],[38,6,14,0,"_suspenseJs"],[38,17,14,0],[38,20,14,0,"require"],[38,27,14,0],[38,28,14,0,"_dependencyMap"],[38,42,14,0],[39,2,20,0],[39,11,20,9,"useBaseQuery"],[39,23,20,21,"useBaseQuery"],[39,24,20,22,"options"],[39,31,20,29],[39,33,20,31,"Observer"],[39,41,20,39],[39,43,20,41,"queryClient"],[39,54,20,52],[39,56,20,54],[40,4,21,2],[40,8,21,6,"process"],[40,15,21,13],[40,16,21,14,"env"],[40,19,21,17],[40,20,21,18,"NODE_ENV"],[40,28,21,26],[40,33,21,31],[40,45,21,43],[40,47,21,45],[41,6,22,4],[41,10,22,8],[41,17,22,15,"options"],[41,24,22,22],[41,29,22,27],[41,37,22,35],[41,41,22,39,"Array"],[41,46,22,44],[41,47,22,45,"isArray"],[41,54,22,52],[41,55,22,53,"options"],[41,62,22,60],[41,63,22,61],[41,65,22,63],[42,8,23,6],[42,14,23,12],[42,18,23,16,"Error"],[42,23,23,21],[42,24,24,8],[42,310,25,6],[42,311,25,7],[43,6,26,4],[44,4,27,2],[45,4,28,2],[45,10,28,8,"isRestoring"],[45,21,28,19],[45,24,28,22],[45,28,28,22,"useIsRestoring"],[45,50,28,36],[45,51,28,36,"useIsRestoring"],[45,65,28,36],[45,67,28,37],[45,68,28,38],[46,4,29,2],[46,10,29,8,"errorResetBoundary"],[46,28,29,26],[46,31,29,29],[46,35,29,29,"useQueryErrorResetBoundary"],[46,61,29,55],[46,62,29,55,"useQueryErrorResetBoundary"],[46,88,29,55],[46,90,29,56],[46,91,29,57],[47,4,30,2],[47,10,30,8,"client"],[47,16,30,14],[47,19,30,17],[47,23,30,17,"useQueryClient"],[47,45,30,31],[47,46,30,31,"useQueryClient"],[47,60,30,31],[47,62,30,32,"queryClient"],[47,73,30,43],[47,74,30,44],[48,4,31,2],[48,10,31,8,"defaultedOptions"],[48,26,31,24],[48,29,31,27,"client"],[48,35,31,33],[48,36,31,34,"defaultQueryOptions"],[48,55,31,53],[48,56,31,54,"options"],[48,63,31,61],[48,64,31,62],[49,4,32,2,"client"],[49,10,32,8],[49,11,32,9,"getDefaultOptions"],[49,28,32,26],[49,29,32,27],[49,30,32,28],[49,31,32,29,"queries"],[49,38,32,36],[49,40,32,38,"_experimental_beforeQuery"],[49,65,32,63],[49,68,33,4,"defaultedOptions"],[49,84,34,2],[49,85,34,3],[50,4,35,2],[50,8,35,6,"process"],[50,15,35,13],[50,16,35,14,"env"],[50,19,35,17],[50,20,35,18,"NODE_ENV"],[50,28,35,26],[50,33,35,31],[50,45,35,43],[50,47,35,45],[51,6,36,4],[51,10,36,8],[51,11,36,9,"defaultedOptions"],[51,27,36,25],[51,28,36,26,"queryFn"],[51,35,36,33],[51,37,36,35],[52,8,37,6,"console"],[52,15,37,13],[52,16,37,14,"error"],[52,21,37,19],[52,22,38,8],[52,26,38,12,"defaultedOptions"],[52,42,38,28],[52,43,38,29,"queryHash"],[52,52,38,38],[52,296,39,6],[52,297,39,7],[53,6,40,4],[54,4,41,2],[55,4,42,2,"defaultedOptions"],[55,20,42,18],[55,21,42,19,"_optimisticResults"],[55,39,42,37],[55,42,42,40,"isRestoring"],[55,53,42,51],[55,56,42,54],[55,69,42,67],[55,72,42,70],[55,84,42,82],[56,4,43,2],[56,8,43,2,"ensureSuspenseTimers"],[56,19,43,22],[56,20,43,22,"ensureSuspenseTimers"],[56,40,43,22],[56,42,43,23,"defaultedOptions"],[56,58,43,39],[56,59,43,40],[57,4,44,2],[57,8,44,2,"ensurePreventErrorBoundaryRetry"],[57,29,44,33],[57,30,44,33,"ensurePreventErrorBoundaryRetry"],[57,61,44,33],[57,63,44,34,"defaultedOptions"],[57,79,44,50],[57,81,44,52,"errorResetBoundary"],[57,99,44,70],[57,100,44,71],[58,4,45,2],[58,8,45,2,"useClearResetErrorBoundary"],[58,29,45,28],[58,30,45,28,"useClearResetErrorBoundary"],[58,56,45,28],[58,58,45,29,"errorResetBoundary"],[58,76,45,47],[58,77,45,48],[59,4,46,2],[59,10,46,8,"isNewCacheEntry"],[59,25,46,23],[59,28,46,26],[59,29,46,27,"client"],[59,35,46,33],[59,36,46,34,"getQueryCache"],[59,49,46,47],[59,50,46,48],[59,51,46,49],[59,52,46,50,"get"],[59,55,46,53],[59,56,46,54,"defaultedOptions"],[59,72,46,70],[59,73,46,71,"queryHash"],[59,82,46,80],[59,83,46,81],[60,4,47,2],[60,10,47,8],[60,11,47,9,"observer"],[60,19,47,17],[60,20,47,18],[60,23,47,21,"React"],[60,28,47,26],[60,29,47,27,"useState"],[60,37,47,35],[60,38,48,4],[60,44,48,10],[60,48,48,14,"Observer"],[60,56,48,22],[60,57,49,6,"client"],[60,63,49,12],[60,65,50,6,"defaultedOptions"],[60,81,51,4],[60,82,52,2],[60,83,52,3],[61,4,53,2],[61,10,53,8,"result"],[61,16,53,14],[61,19,53,17,"observer"],[61,27,53,25],[61,28,53,26,"getOptimisticResult"],[61,47,53,45],[61,48,53,46,"defaultedOptions"],[61,64,53,62],[61,65,53,63],[62,4,54,2],[62,10,54,8,"shouldSubscribe"],[62,25,54,23],[62,28,54,26],[62,29,54,27,"isRestoring"],[62,40,54,38],[62,44,54,42,"options"],[62,51,54,49],[62,52,54,50,"subscribed"],[62,62,54,60],[62,67,54,65],[62,72,54,70],[63,4,55,2,"React"],[63,9,55,7],[63,10,55,8,"useSyncExternalStore"],[63,30,55,28],[63,31,56,4,"React"],[63,36,56,9],[63,37,56,10,"useCallback"],[63,48,56,21],[63,49,57,7,"onStoreChange"],[63,62,57,20],[63,66,57,25],[64,6,58,8],[64,12,58,14,"unsubscribe"],[64,23,58,25],[64,26,58,28,"shouldSubscribe"],[64,41,58,43],[64,44,58,46,"observer"],[64,52,58,54],[64,53,58,55,"subscribe"],[64,62,58,64],[64,63,58,65,"notifyManager"],[64,81,58,78],[64,82,58,78,"notifyManager"],[64,95,58,78],[64,96,58,79,"batchCalls"],[64,106,58,89],[64,107,58,90,"onStoreChange"],[64,120,58,103],[64,121,58,104],[64,122,58,105],[64,125,58,108,"noop"],[64,143,58,112],[64,144,58,112,"noop"],[64,148,58,112],[65,6,59,8,"observer"],[65,14,59,16],[65,15,59,17,"updateResult"],[65,27,59,29],[65,28,59,30],[65,29,59,31],[66,6,60,8],[66,13,60,15,"unsubscribe"],[66,24,60,26],[67,4,61,6],[67,5,61,7],[67,7,62,6],[67,8,62,7,"observer"],[67,16,62,15],[67,18,62,17,"shouldSubscribe"],[67,33,62,32],[67,34,63,4],[67,35,63,5],[67,37,64,4],[67,43,64,10,"observer"],[67,51,64,18],[67,52,64,19,"getCurrentResult"],[67,68,64,35],[67,69,64,36],[67,70,64,37],[67,72,65,4],[67,78,65,10,"observer"],[67,86,65,18],[67,87,65,19,"getCurrentResult"],[67,103,65,35],[67,104,65,36],[67,105,66,2],[67,106,66,3],[68,4,67,2,"React"],[68,9,67,7],[68,10,67,8,"useEffect"],[68,19,67,17],[68,20,67,18],[68,26,67,24],[69,6,68,4,"observer"],[69,14,68,12],[69,15,68,13,"setOptions"],[69,25,68,23],[69,26,68,24,"defaultedOptions"],[69,42,68,40],[69,43,68,41],[70,4,69,2],[70,5,69,3],[70,7,69,5],[70,8,69,6,"defaultedOptions"],[70,24,69,22],[70,26,69,24,"observer"],[70,34,69,32],[70,35,69,33],[70,36,69,34],[71,4,70,2],[71,8,70,6],[71,12,70,6,"shouldSuspend"],[71,23,70,19],[71,24,70,19,"shouldSuspend"],[71,37,70,19],[71,39,70,20,"defaultedOptions"],[71,55,70,36],[71,57,70,38,"result"],[71,63,70,44],[71,64,70,45],[71,66,70,47],[72,6,71,4],[72,12,71,10],[72,16,71,10,"fetchOptimistic"],[72,27,71,25],[72,28,71,25,"fetchOptimistic"],[72,43,71,25],[72,45,71,26,"defaultedOptions"],[72,61,71,42],[72,63,71,44,"observer"],[72,71,71,52],[72,73,71,54,"errorResetBoundary"],[72,91,71,72],[72,92,71,73],[73,4,72,2],[74,4,73,2],[74,8,73,6],[74,12,73,6,"getHasError"],[74,33,73,17],[74,34,73,17,"getHasError"],[74,45,73,17],[74,47,73,18],[75,6,74,4,"result"],[75,12,74,10],[76,6,75,4,"errorResetBoundary"],[76,24,75,22],[77,6,76,4,"throwOnError"],[77,18,76,16],[77,20,76,18,"defaultedOptions"],[77,36,76,34],[77,37,76,35,"throwOnError"],[77,49,76,47],[78,6,77,4,"query"],[78,11,77,9],[78,13,77,11,"client"],[78,19,77,17],[78,20,77,18,"getQueryCache"],[78,33,77,31],[78,34,77,32],[78,35,77,33],[78,36,77,34,"get"],[78,39,77,37],[78,40,77,38,"defaultedOptions"],[78,56,77,54],[78,57,77,55,"queryHash"],[78,66,77,64],[78,67,77,65],[79,6,78,4,"suspense"],[79,14,78,12],[79,16,78,14,"defaultedOptions"],[79,32,78,30],[79,33,78,31,"suspense"],[80,4,79,2],[80,5,79,3],[80,6,79,4],[80,8,79,6],[81,6,80,4],[81,12,80,10,"result"],[81,18,80,16],[81,19,80,17,"error"],[81,24,80,22],[82,4,81,2],[83,4,82,2],[84,4,83,2,"client"],[84,10,83,8],[84,11,83,9,"getDefaultOptions"],[84,28,83,26],[84,29,83,27],[84,30,83,28],[84,31,83,29,"queries"],[84,38,83,36],[84,40,83,38,"_experimental_afterQuery"],[84,64,83,62],[84,67,84,4,"defaultedOptions"],[84,83,84,20],[84,85,85,4,"result"],[84,91,86,2],[84,92,86,3],[85,4,87,2],[85,8,87,6,"defaultedOptions"],[85,24,87,22],[85,25,87,23,"experimental_prefetchInRender"],[85,54,87,52],[85,58,87,56],[85,59,87,57,"isServer"],[85,77,87,65],[85,78,87,65,"isServer"],[85,86,87,65],[85,90,87,69],[85,94,87,69,"willFetch"],[85,105,87,78],[85,106,87,78,"willFetch"],[85,115,87,78],[85,117,87,79,"result"],[85,123,87,85],[85,125,87,87,"isRestoring"],[85,136,87,98],[85,137,87,99],[85,139,87,101],[86,6,88,4],[86,12,88,10,"promise"],[86,19,88,17],[86,22,88,20,"isNewCacheEntry"],[86,37,88,35],[87,6,89,6],[88,6,90,6],[88,10,90,6,"fetchOptimistic"],[88,21,90,21],[88,22,90,21,"fetchOptimistic"],[88,37,90,21],[88,39,90,22,"defaultedOptions"],[88,55,90,38],[88,57,90,40,"observer"],[88,65,90,48],[88,67,90,50,"errorResetBoundary"],[88,85,90,68],[88,86,90,69],[89,6,92,6],[90,6,93,6,"client"],[90,12,93,12],[90,13,93,13,"getQueryCache"],[90,26,93,26],[90,27,93,27],[90,28,93,28],[90,29,93,29,"get"],[90,32,93,32],[90,33,93,33,"defaultedOptions"],[90,49,93,49],[90,50,93,50,"queryHash"],[90,59,93,59],[90,60,93,60],[90,62,93,62,"promise"],[90,69,94,5],[91,6,95,4,"promise"],[91,13,95,11],[91,15,95,13,"catch"],[91,20,95,18],[91,21,95,19,"noop"],[91,39,95,23],[91,40,95,23,"noop"],[91,44,95,23],[91,45,95,24],[91,46,95,25,"finally"],[91,53,95,32],[91,54,95,33],[91,60,95,39],[92,8,96,6,"observer"],[92,16,96,14],[92,17,96,15,"updateResult"],[92,29,96,27],[92,30,96,28],[92,31,96,29],[93,6,97,4],[93,7,97,5],[93,8,97,6],[94,4,98,2],[95,4,99,2],[95,11,99,9],[95,12,99,10,"defaultedOptions"],[95,28,99,26],[95,29,99,27,"notifyOnChangeProps"],[95,48,99,46],[95,51,99,49,"observer"],[95,59,99,57],[95,60,99,58,"trackResult"],[95,71,99,69],[95,72,99,70,"result"],[95,78,99,76],[95,79,99,77],[95,82,99,80,"result"],[95,88,99,86],[96,2,100,0],[97,0,100,1],[97,3]],"functionMap":{"names":["<global>","useBaseQuery","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","promise._catch._finally$argument_0"],"mappings":"AAA;ACmB;IC4B;KDG;MEM;OFI;IGG,iCH;IIC,iCJ;kBKE;GLE;iCM0B;KNE;CDG"},"hasCjsExports":false},"type":"js/module"}]}