{"dependencies":[{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":38,"index":62}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"streamedQuery\", {\n    enumerable: true,\n    get: function () {\n      return streamedQuery;\n    }\n  });\n  var _utilsJs = require(_dependencyMap[0], \"./utils.js\");\n  // src/streamedQuery.ts\n\n  function streamedQuery({\n    streamFn,\n    refetchMode = \"reset\",\n    reducer = (items, chunk) => (0, _utilsJs.addToEnd)(items, chunk),\n    initialValue = []\n  }) {\n    return async context => {\n      const query = context.client.getQueryCache().find({\n        queryKey: context.queryKey,\n        exact: true\n      });\n      const isRefetch = !!query && query.state.data !== void 0;\n      if (isRefetch && refetchMode === \"reset\") {\n        query.setState({\n          status: \"pending\",\n          data: void 0,\n          error: null,\n          fetchStatus: \"fetching\"\n        });\n      }\n      let result = initialValue;\n      const stream = await streamFn(context);\n      for await (const chunk of stream) {\n        if (context.signal.aborted) {\n          break;\n        }\n        if (!isRefetch || refetchMode !== \"replace\") {\n          context.client.setQueryData(context.queryKey, prev => reducer(prev === void 0 ? initialValue : prev, chunk));\n        }\n        result = reducer(result, chunk);\n      }\n      if (isRefetch && refetchMode === \"replace\" && !context.signal.aborted) {\n        context.client.setQueryData(context.queryKey, result);\n      }\n      return context.client.getQueryData(context.queryKey);\n    };\n  }\n});","lineCount":53,"map":[[7,2,40,0,"Object"],[7,8,40,0],[7,9,40,0,"defineProperty"],[7,23,40,0],[7,24,40,0,"exports"],[7,31,40,0],[8,4,40,0,"enumerable"],[8,14,40,0],[9,4,40,0,"get"],[9,7,40,0],[9,18,40,0,"get"],[9,19,40,0],[10,6,40,0],[10,13,41,2,"streamedQuery"],[10,26,41,15],[11,4,41,15],[12,2,41,15],[13,2,2,0],[13,6,2,0,"_utilsJs"],[13,14,2,0],[13,17,2,0,"require"],[13,24,2,0],[13,25,2,0,"_dependencyMap"],[13,39,2,0],[14,2,1,0],[16,2,3,0],[16,11,3,9,"streamedQuery"],[16,24,3,22,"streamedQuery"],[16,25,3,23],[17,4,4,2,"streamFn"],[17,12,4,10],[18,4,5,2,"refetchMode"],[18,15,5,13],[18,18,5,16],[18,25,5,23],[19,4,6,2,"reducer"],[19,11,6,9],[19,14,6,12,"reducer"],[19,15,6,13,"items"],[19,20,6,18],[19,22,6,20,"chunk"],[19,27,6,25],[19,32,6,30],[19,36,6,30,"addToEnd"],[19,44,6,38],[19,45,6,38,"addToEnd"],[19,53,6,38],[19,55,6,39,"items"],[19,60,6,44],[19,62,6,46,"chunk"],[19,67,6,51],[19,68,6,52],[20,4,7,2,"initialValue"],[20,16,7,14],[20,19,7,17],[21,2,8,0],[21,3,8,1],[21,5,8,3],[22,4,9,2],[22,11,9,9],[22,17,9,16,"context"],[22,24,9,23],[22,28,9,28],[23,6,10,4],[23,12,10,10,"query"],[23,17,10,15],[23,20,10,18,"context"],[23,27,10,25],[23,28,10,26,"client"],[23,34,10,32],[23,35,10,33,"getQueryCache"],[23,48,10,46],[23,49,10,47],[23,50,10,48],[23,51,10,49,"find"],[23,55,10,53],[23,56,10,54],[24,8,10,56,"queryKey"],[24,16,10,64],[24,18,10,66,"context"],[24,25,10,73],[24,26,10,74,"queryKey"],[24,34,10,82],[25,8,10,84,"exact"],[25,13,10,89],[25,15,10,91],[26,6,10,96],[26,7,10,97],[26,8,10,98],[27,6,11,4],[27,12,11,10,"isRefetch"],[27,21,11,19],[27,24,11,22],[27,25,11,23],[27,26,11,24,"query"],[27,31,11,29],[27,35,11,33,"query"],[27,40,11,38],[27,41,11,39,"state"],[27,46,11,44],[27,47,11,45,"data"],[27,51,11,49],[27,56,11,54],[27,61,11,59],[27,62,11,60],[28,6,12,4],[28,10,12,8,"isRefetch"],[28,19,12,17],[28,23,12,21,"refetchMode"],[28,34,12,32],[28,39,12,37],[28,46,12,44],[28,48,12,46],[29,8,13,6,"query"],[29,13,13,11],[29,14,13,12,"setState"],[29,22,13,20],[29,23,13,21],[30,10,14,8,"status"],[30,16,14,14],[30,18,14,16],[30,27,14,25],[31,10,15,8,"data"],[31,14,15,12],[31,16,15,14],[31,21,15,19],[31,22,15,20],[32,10,16,8,"error"],[32,15,16,13],[32,17,16,15],[32,21,16,19],[33,10,17,8,"fetchStatus"],[33,21,17,19],[33,23,17,21],[34,8,18,6],[34,9,18,7],[34,10,18,8],[35,6,19,4],[36,6,20,4],[36,10,20,8,"result"],[36,16,20,14],[36,19,20,17,"initialValue"],[36,31,20,29],[37,6,21,4],[37,12,21,10,"stream"],[37,18,21,16],[37,21,21,19],[37,27,21,25,"streamFn"],[37,35,21,33],[37,36,21,34,"context"],[37,43,21,41],[37,44,21,42],[38,6,22,4],[38,17,22,15],[38,23,22,21,"chunk"],[38,28,22,26],[38,32,22,30,"stream"],[38,38,22,36],[38,40,22,38],[39,8,23,6],[39,12,23,10,"context"],[39,19,23,17],[39,20,23,18,"signal"],[39,26,23,24],[39,27,23,25,"aborted"],[39,34,23,32],[39,36,23,34],[40,10,24,8],[41,8,25,6],[42,8,26,6],[42,12,26,10],[42,13,26,11,"isRefetch"],[42,22,26,20],[42,26,26,24,"refetchMode"],[42,37,26,35],[42,42,26,40],[42,51,26,49],[42,53,26,51],[43,10,27,8,"context"],[43,17,27,15],[43,18,27,16,"client"],[43,24,27,22],[43,25,27,23,"setQueryData"],[43,37,27,35],[43,38,28,10,"context"],[43,45,28,17],[43,46,28,18,"queryKey"],[43,54,28,26],[43,56,29,11,"prev"],[43,60,29,15],[43,64,29,20,"reducer"],[43,71,29,27],[43,72,29,28,"prev"],[43,76,29,32],[43,81,29,37],[43,86,29,42],[43,87,29,43],[43,90,29,46,"initialValue"],[43,102,29,58],[43,105,29,61,"prev"],[43,109,29,65],[43,111,29,67,"chunk"],[43,116,29,72],[43,117,30,8],[43,118,30,9],[44,8,31,6],[45,8,32,6,"result"],[45,14,32,12],[45,17,32,15,"reducer"],[45,24,32,22],[45,25,32,23,"result"],[45,31,32,29],[45,33,32,31,"chunk"],[45,38,32,36],[45,39,32,37],[46,6,33,4],[47,6,34,4],[47,10,34,8,"isRefetch"],[47,19,34,17],[47,23,34,21,"refetchMode"],[47,34,34,32],[47,39,34,37],[47,48,34,46],[47,52,34,50],[47,53,34,51,"context"],[47,60,34,58],[47,61,34,59,"signal"],[47,67,34,65],[47,68,34,66,"aborted"],[47,75,34,73],[47,77,34,75],[48,8,35,6,"context"],[48,15,35,13],[48,16,35,14,"client"],[48,22,35,20],[48,23,35,21,"setQueryData"],[48,35,35,33],[48,36,35,34,"context"],[48,43,35,41],[48,44,35,42,"queryKey"],[48,52,35,50],[48,54,35,52,"result"],[48,60,35,58],[48,61,35,59],[49,6,36,4],[50,6,37,4],[50,13,37,11,"context"],[50,20,37,18],[50,21,37,19,"client"],[50,27,37,25],[50,28,37,26,"getQueryData"],[50,40,37,38],[50,41,37,39,"context"],[50,48,37,46],[50,49,37,47,"queryKey"],[50,57,37,55],[50,58,37,56],[51,4,38,2],[51,5,38,3],[52,2,39,0],[53,0,39,1],[53,3]],"functionMap":{"names":["<global>","streamedQuery","<anonymous>","context.client.setQueryData$argument_1"],"mappings":"AAA;ACE;YCG,wCD;SCG;UCoB,+DD;GDS;CDC"},"hasCjsExports":false},"type":"js/module"}]}