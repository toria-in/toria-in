{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.findFirstVisibleIndex = findFirstVisibleIndex;\n  exports.findLastVisibleIndex = findLastVisibleIndex;\n  /**\n   * A helper function to perform binary search for the first or last visible index.\n   * This function efficiently finds items that are visible within a viewport by using\n   * a binary search algorithm on sorted layouts.\n   *\n   * @param layouts - The sorted array of RVLayout objects, sorted by either x or y position\n   * @param threshold - The threshold value to determine visibility (viewport boundary)\n   * @param isSortedByX - A boolean indicating if the array is sorted by x (true) or y (false)\n   * @param findFirst - A boolean indicating whether to find the first (true) or last (false) visible index\n   * @returns The index of the visible layout or -1 if none are visible\n   *\n   * @remarks\n   * The binary search implementation ensures O(log n) time complexity for finding visible items.\n   * The function assumes the layouts array is pre-sorted by the relevant dimension (x or y).\n   */\n  function binarySearchVisibleIndex(layouts, threshold, isSortedByX, findFirst) {\n    var left = 0;\n    var right = layouts.length - 1;\n    var visibleIndex = -1;\n    while (left <= right) {\n      var mid = Math.floor((left + right) / 2);\n      var layout = layouts[mid];\n      // Check visibility based on the sorting criteria\n      var position = isSortedByX ? layout.x : layout.y;\n      var size = isSortedByX ? layout.width : layout.height;\n      if (findFirst) {\n        // Logic for finding the first visible index\n        if (position >= threshold || position + size > threshold) {\n          // Potential visible index found, continue searching left for earlier visible items\n          visibleIndex = mid;\n          right = mid - 1;\n        } else {\n          // Search in the right half for visible items\n          left = mid + 1;\n        }\n      } else if (position <= threshold) {\n        // Potential visible index found, continue searching right for later visible items\n        visibleIndex = mid;\n        left = mid + 1;\n      } else {\n        // Search in the left half for visible items\n        right = mid - 1;\n      }\n    }\n    return visibleIndex;\n  }\n  /**\n   * Finds the first visible index in a sorted array of RVLayout objects.\n   * This is a wrapper around binarySearchVisibleIndex that specifically finds\n   * the first item that becomes visible in the viewport.\n   *\n   * @param layouts - The sorted array of RVLayout objects\n   * @param threshold - The threshold value to determine visibility\n   * @param isSortedByX - A boolean indicating if the array is sorted by x (true) or y (false)\n   * @returns The index of the first visible layout or -1 if none are visible\n   */\n  function findFirstVisibleIndex(layouts, threshold, isSortedByX) {\n    return binarySearchVisibleIndex(layouts, threshold, isSortedByX, true);\n  }\n  /**\n   * Finds the last visible index in a sorted array of RVLayout objects.\n   * This is a wrapper around binarySearchVisibleIndex that specifically finds\n   * the last item that remains visible in the viewport.\n   *\n   * @param layouts - The sorted array of RVLayout objects\n   * @param threshold - The threshold value to determine visibility\n   * @param isSortedByX - A boolean indicating if the array is sorted by x (true) or y (false)\n   * @returns The index of the last visible layout or -1 if none are visible\n   */\n  function findLastVisibleIndex(layouts, threshold, isSortedByX) {\n    return binarySearchVisibleIndex(layouts, threshold, isSortedByX, false);\n  }\n});","lineCount":81,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"findFirstVisibleIndex"],[7,31,3,29],[7,34,3,32,"findFirstVisibleIndex"],[7,55,3,53],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"findLastVisibleIndex"],[8,30,4,28],[8,33,4,31,"findLastVisibleIndex"],[8,53,4,51],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,0,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,2,20,0],[24,11,20,9,"binarySearchVisibleIndex"],[24,35,20,33,"binarySearchVisibleIndex"],[24,36,20,34,"layouts"],[24,43,20,41],[24,45,20,43,"threshold"],[24,54,20,52],[24,56,20,54,"isSortedByX"],[24,67,20,65],[24,69,20,67,"findFirst"],[24,78,20,76],[24,80,20,78],[25,4,21,4],[25,8,21,8,"left"],[25,12,21,12],[25,15,21,15],[25,16,21,16],[26,4,22,4],[26,8,22,8,"right"],[26,13,22,13],[26,16,22,16,"layouts"],[26,23,22,23],[26,24,22,24,"length"],[26,30,22,30],[26,33,22,33],[26,34,22,34],[27,4,23,4],[27,8,23,8,"visibleIndex"],[27,20,23,20],[27,23,23,23],[27,24,23,24],[27,25,23,25],[28,4,24,4],[28,11,24,11,"left"],[28,15,24,15],[28,19,24,19,"right"],[28,24,24,24],[28,26,24,26],[29,6,25,8],[29,10,25,12,"mid"],[29,13,25,15],[29,16,25,18,"Math"],[29,20,25,22],[29,21,25,23,"floor"],[29,26,25,28],[29,27,25,29],[29,28,25,30,"left"],[29,32,25,34],[29,35,25,37,"right"],[29,40,25,42],[29,44,25,46],[29,45,25,47],[29,46,25,48],[30,6,26,8],[30,10,26,12,"layout"],[30,16,26,18],[30,19,26,21,"layouts"],[30,26,26,28],[30,27,26,29,"mid"],[30,30,26,32],[30,31,26,33],[31,6,27,8],[32,6,28,8],[32,10,28,12,"position"],[32,18,28,20],[32,21,28,23,"isSortedByX"],[32,32,28,34],[32,35,28,37,"layout"],[32,41,28,43],[32,42,28,44,"x"],[32,43,28,45],[32,46,28,48,"layout"],[32,52,28,54],[32,53,28,55,"y"],[32,54,28,56],[33,6,29,8],[33,10,29,12,"size"],[33,14,29,16],[33,17,29,19,"isSortedByX"],[33,28,29,30],[33,31,29,33,"layout"],[33,37,29,39],[33,38,29,40,"width"],[33,43,29,45],[33,46,29,48,"layout"],[33,52,29,54],[33,53,29,55,"height"],[33,59,29,61],[34,6,30,8],[34,10,30,12,"findFirst"],[34,19,30,21],[34,21,30,23],[35,8,31,12],[36,8,32,12],[36,12,32,16,"position"],[36,20,32,24],[36,24,32,28,"threshold"],[36,33,32,37],[36,37,32,41,"position"],[36,45,32,49],[36,48,32,52,"size"],[36,52,32,56],[36,55,32,59,"threshold"],[36,64,32,68],[36,66,32,70],[37,10,33,16],[38,10,34,16,"visibleIndex"],[38,22,34,28],[38,25,34,31,"mid"],[38,28,34,34],[39,10,35,16,"right"],[39,15,35,21],[39,18,35,24,"mid"],[39,21,35,27],[39,24,35,30],[39,25,35,31],[40,8,36,12],[40,9,36,13],[40,15,37,17],[41,10,38,16],[42,10,39,16,"left"],[42,14,39,20],[42,17,39,23,"mid"],[42,20,39,26],[42,23,39,29],[42,24,39,30],[43,8,40,12],[44,6,41,8],[44,7,41,9],[44,13,42,13],[44,17,42,17,"position"],[44,25,42,25],[44,29,42,29,"threshold"],[44,38,42,38],[44,40,42,40],[45,8,43,12],[46,8,44,12,"visibleIndex"],[46,20,44,24],[46,23,44,27,"mid"],[46,26,44,30],[47,8,45,12,"left"],[47,12,45,16],[47,15,45,19,"mid"],[47,18,45,22],[47,21,45,25],[47,22,45,26],[48,6,46,8],[48,7,46,9],[48,13,47,13],[49,8,48,12],[50,8,49,12,"right"],[50,13,49,17],[50,16,49,20,"mid"],[50,19,49,23],[50,22,49,26],[50,23,49,27],[51,6,50,8],[52,4,51,4],[53,4,52,4],[53,11,52,11,"visibleIndex"],[53,23,52,23],[54,2,53,0],[55,2,54,0],[56,0,55,0],[57,0,56,0],[58,0,57,0],[59,0,58,0],[60,0,59,0],[61,0,60,0],[62,0,61,0],[63,0,62,0],[64,0,63,0],[65,2,64,0],[65,11,64,9,"findFirstVisibleIndex"],[65,32,64,30,"findFirstVisibleIndex"],[65,33,64,31,"layouts"],[65,40,64,38],[65,42,64,40,"threshold"],[65,51,64,49],[65,53,64,51,"isSortedByX"],[65,64,64,62],[65,66,64,64],[66,4,65,4],[66,11,65,11,"binarySearchVisibleIndex"],[66,35,65,35],[66,36,65,36,"layouts"],[66,43,65,43],[66,45,65,45,"threshold"],[66,54,65,54],[66,56,65,56,"isSortedByX"],[66,67,65,67],[66,69,65,69],[66,73,65,73],[66,74,65,74],[67,2,66,0],[68,2,67,0],[69,0,68,0],[70,0,69,0],[71,0,70,0],[72,0,71,0],[73,0,72,0],[74,0,73,0],[75,0,74,0],[76,0,75,0],[77,0,76,0],[78,2,77,0],[78,11,77,9,"findLastVisibleIndex"],[78,31,77,29,"findLastVisibleIndex"],[78,32,77,30,"layouts"],[78,39,77,37],[78,41,77,39,"threshold"],[78,50,77,48],[78,52,77,50,"isSortedByX"],[78,63,77,61],[78,65,77,63],[79,4,78,4],[79,11,78,11,"binarySearchVisibleIndex"],[79,35,78,35],[79,36,78,36,"layouts"],[79,43,78,43],[79,45,78,45,"threshold"],[79,54,78,54],[79,56,78,56,"isSortedByX"],[79,67,78,67],[79,69,78,69],[79,74,78,74],[79,75,78,75],[80,2,79,0],[81,0,79,1],[81,3]],"functionMap":{"names":["<global>","binarySearchVisibleIndex","findFirstVisibleIndex","findLastVisibleIndex"],"mappings":"AAA;ACmB;CDiC;AEW;CFE;AGW;CHE"},"hasCjsExports":true},"type":"js/module"}]}