{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":29,"index":254},"end":{"line":13,"column":84,"index":309}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"./PressResponder","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":16,"column":45,"index":425},"end":{"line":16,"column":72,"index":452}}],"key":"XbJYeFPlf+jGFVUUkFg9qA50Tw4=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":17,"column":13,"index":468},"end":{"line":17,"column":29,"index":484}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  'use strict';\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.default = usePressEvents;\n  var _PressResponder = _interopRequireDefault(require(_dependencyMap[1], \"./PressResponder\"));\n  var _react = require(_dependencyMap[2], \"react\");\n  function usePressEvents(hostRef, config) {\n    var pressResponderRef = (0, _react.useRef)(null);\n    if (pressResponderRef.current == null) {\n      pressResponderRef.current = new _PressResponder.default(config);\n    }\n    var pressResponder = pressResponderRef.current;\n\n    // Re-configure to use the current node and configuration.\n    (0, _react.useEffect)(() => {\n      pressResponder.configure(config);\n    }, [config, pressResponder]);\n\n    // Reset the `pressResponder` when cleanup needs to occur. This is\n    // a separate effect because we do not want to rest the responder when `config` changes.\n    (0, _react.useEffect)(() => {\n      return () => {\n        pressResponder.reset();\n      };\n    }, [pressResponder]);\n    (0, _react.useDebugValue)(config);\n    return pressResponder.getEventHandlers();\n  }\n  module.exports = exports.default;\n});","lineCount":42,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[14,6,13,4,"_interopRequireDefault"],[14,28,13,26],[14,31,13,29,"require"],[14,38,13,36],[14,39,13,36,"_dependencyMap"],[14,53,13,36],[14,104,13,83],[14,105,13,84],[14,106,13,85,"default"],[14,113,13,92],[15,2,14,0,"exports"],[15,9,14,7],[15,10,14,8,"__esModule"],[15,20,14,18],[15,23,14,21],[15,27,14,25],[16,2,15,0,"exports"],[16,9,15,7],[16,10,15,8,"default"],[16,17,15,15],[16,20,15,18,"usePressEvents"],[16,34,15,32],[17,2,16,0],[17,6,16,4,"_PressResponder"],[17,21,16,19],[17,24,16,22,"_interopRequireDefault"],[17,46,16,44],[17,47,16,45,"require"],[17,54,16,52],[17,55,16,52,"_dependencyMap"],[17,69,16,52],[17,92,16,71],[17,93,16,72],[17,94,16,73],[18,2,17,0],[18,6,17,4,"_react"],[18,12,17,10],[18,15,17,13,"require"],[18,22,17,20],[18,23,17,20,"_dependencyMap"],[18,37,17,20],[18,49,17,28],[18,50,17,29],[19,2,18,0],[19,11,18,9,"usePressEvents"],[19,25,18,23,"usePressEvents"],[19,26,18,24,"hostRef"],[19,33,18,31],[19,35,18,33,"config"],[19,41,18,39],[19,43,18,41],[20,4,19,2],[20,8,19,6,"pressResponderRef"],[20,25,19,23],[20,28,19,26],[20,29,19,27],[20,30,19,28],[20,32,19,30,"_react"],[20,38,19,36],[20,39,19,37,"useRef"],[20,45,19,43],[20,47,19,45],[20,51,19,49],[20,52,19,50],[21,4,20,2],[21,8,20,6,"pressResponderRef"],[21,25,20,23],[21,26,20,24,"current"],[21,33,20,31],[21,37,20,35],[21,41,20,39],[21,43,20,41],[22,6,21,4,"pressResponderRef"],[22,23,21,21],[22,24,21,22,"current"],[22,31,21,29],[22,34,21,32],[22,38,21,36,"_PressResponder"],[22,53,21,51],[22,54,21,52,"default"],[22,61,21,59],[22,62,21,60,"config"],[22,68,21,66],[22,69,21,67],[23,4,22,2],[24,4,23,2],[24,8,23,6,"pressResponder"],[24,22,23,20],[24,25,23,23,"pressResponderRef"],[24,42,23,40],[24,43,23,41,"current"],[24,50,23,48],[26,4,25,2],[27,4,26,2],[27,5,26,3],[27,6,26,4],[27,8,26,6,"_react"],[27,14,26,12],[27,15,26,13,"useEffect"],[27,24,26,22],[27,26,26,24],[27,32,26,30],[28,6,27,4,"pressResponder"],[28,20,27,18],[28,21,27,19,"configure"],[28,30,27,28],[28,31,27,29,"config"],[28,37,27,35],[28,38,27,36],[29,4,28,2],[29,5,28,3],[29,7,28,5],[29,8,28,6,"config"],[29,14,28,12],[29,16,28,14,"pressResponder"],[29,30,28,28],[29,31,28,29],[29,32,28,30],[31,4,30,2],[32,4,31,2],[33,4,32,2],[33,5,32,3],[33,6,32,4],[33,8,32,6,"_react"],[33,14,32,12],[33,15,32,13,"useEffect"],[33,24,32,22],[33,26,32,24],[33,32,32,30],[34,6,33,4],[34,13,33,11],[34,19,33,17],[35,8,34,6,"pressResponder"],[35,22,34,20],[35,23,34,21,"reset"],[35,28,34,26],[35,29,34,27],[35,30,34,28],[36,6,35,4],[36,7,35,5],[37,4,36,2],[37,5,36,3],[37,7,36,5],[37,8,36,6,"pressResponder"],[37,22,36,20],[37,23,36,21],[37,24,36,22],[38,4,37,2],[38,5,37,3],[38,6,37,4],[38,8,37,6,"_react"],[38,14,37,12],[38,15,37,13,"useDebugValue"],[38,28,37,26],[38,30,37,28,"config"],[38,36,37,34],[38,37,37,35],[39,4,38,2],[39,11,38,9,"pressResponder"],[39,25,38,23],[39,26,38,24,"getEventHandlers"],[39,42,38,40],[39,43,38,41],[39,44,38,42],[40,2,39,0],[41,2,40,0,"module"],[41,8,40,6],[41,9,40,7,"exports"],[41,16,40,14],[41,19,40,17,"exports"],[41,26,40,24],[41,27,40,25,"default"],[41,34,40,32],[42,0,40,33],[42,3]],"functionMap":{"names":["<global>","usePressEvents","<anonymous>"],"mappings":"AAA;ACiB;wBCQ;GDE;wBCI;GDI;CDG"},"hasCjsExports":true},"type":"js/module"}]}