{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":29,"index":44},"end":{"line":3,"column":84,"index":99}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"../Dimensions","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":41,"index":203},"end":{"line":6,"column":65,"index":227}}],"key":"NzQ/ZBeFQUse/+BTezVLDhq4bGU=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.default = void 0;\n  var _Dimensions = _interopRequireDefault(require(_dependencyMap[1], \"../Dimensions\"));\n  /**\n   * Copyright (c) Nicolas Gallagher.\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  /**\n   * PixelRatio gives access to the device pixel density.\n   */\n  class PixelRatio {\n    /**\n     * Returns the device pixel density.\n     */\n    static get() {\n      return _Dimensions.default.get('window').scale;\n    }\n\n    /**\n     * No equivalent for Web\n     */\n    static getFontScale() {\n      return _Dimensions.default.get('window').fontScale || PixelRatio.get();\n    }\n\n    /**\n     * Converts a layout size (dp) to pixel size (px).\n     * Guaranteed to return an integer number.\n     */\n    static getPixelSizeForLayoutSize(layoutSize) {\n      return Math.round(layoutSize * PixelRatio.get());\n    }\n\n    /**\n     * Rounds a layout size (dp) to the nearest layout size that corresponds to\n     * an integer number of pixels. For example, on a device with a PixelRatio\n     * of 3, `PixelRatio.roundToNearestPixel(8.4) = 8.33`, which corresponds to\n     * exactly (8.33 * 3) = 25 pixels.\n     */\n    static roundToNearestPixel(layoutSize) {\n      var ratio = PixelRatio.get();\n      return Math.round(layoutSize * ratio) / ratio;\n    }\n  }\n  exports.default = PixelRatio;\n  module.exports = exports.default;\n});","lineCount":57,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"_interopRequireDefault"],[4,28,3,26],[4,31,3,29,"require"],[4,38,3,36],[4,39,3,36,"_dependencyMap"],[4,53,3,36],[4,104,3,83],[4,105,3,84],[4,106,3,85,"default"],[4,113,3,92],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"__esModule"],[5,20,4,18],[5,23,4,21],[5,27,4,25],[6,2,5,0,"exports"],[6,9,5,7],[6,10,5,8,"default"],[6,17,5,15],[6,20,5,18],[6,25,5,23],[6,26,5,24],[7,2,6,0],[7,6,6,4,"_Dimensions"],[7,17,6,15],[7,20,6,18,"_interopRequireDefault"],[7,42,6,40],[7,43,6,41,"require"],[7,50,6,48],[7,51,6,48,"_dependencyMap"],[7,65,6,48],[7,85,6,64],[7,86,6,65],[7,87,6,66],[8,2,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[18,2,17,0],[19,0,18,0],[20,0,19,0],[21,2,20,0],[21,8,20,6,"PixelRatio"],[21,18,20,16],[21,19,20,17],[22,4,21,2],[23,0,22,0],[24,0,23,0],[25,4,24,2],[25,11,24,9,"get"],[25,14,24,12,"get"],[25,15,24,12],[25,17,24,15],[26,6,25,4],[26,13,25,11,"_Dimensions"],[26,24,25,22],[26,25,25,23,"default"],[26,32,25,30],[26,33,25,31,"get"],[26,36,25,34],[26,37,25,35],[26,45,25,43],[26,46,25,44],[26,47,25,45,"scale"],[26,52,25,50],[27,4,26,2],[29,4,28,2],[30,0,29,0],[31,0,30,0],[32,4,31,2],[32,11,31,9,"getFontScale"],[32,23,31,21,"getFontScale"],[32,24,31,21],[32,26,31,24],[33,6,32,4],[33,13,32,11,"_Dimensions"],[33,24,32,22],[33,25,32,23,"default"],[33,32,32,30],[33,33,32,31,"get"],[33,36,32,34],[33,37,32,35],[33,45,32,43],[33,46,32,44],[33,47,32,45,"fontScale"],[33,56,32,54],[33,60,32,58,"PixelRatio"],[33,70,32,68],[33,71,32,69,"get"],[33,74,32,72],[33,75,32,73],[33,76,32,74],[34,4,33,2],[36,4,35,2],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,4,39,2],[40,11,39,9,"getPixelSizeForLayoutSize"],[40,36,39,34,"getPixelSizeForLayoutSize"],[40,37,39,35,"layoutSize"],[40,47,39,45],[40,49,39,47],[41,6,40,4],[41,13,40,11,"Math"],[41,17,40,15],[41,18,40,16,"round"],[41,23,40,21],[41,24,40,22,"layoutSize"],[41,34,40,32],[41,37,40,35,"PixelRatio"],[41,47,40,45],[41,48,40,46,"get"],[41,51,40,49],[41,52,40,50],[41,53,40,51],[41,54,40,52],[42,4,41,2],[44,4,43,2],[45,0,44,0],[46,0,45,0],[47,0,46,0],[48,0,47,0],[49,0,48,0],[50,4,49,2],[50,11,49,9,"roundToNearestPixel"],[50,30,49,28,"roundToNearestPixel"],[50,31,49,29,"layoutSize"],[50,41,49,39],[50,43,49,41],[51,6,50,4],[51,10,50,8,"ratio"],[51,15,50,13],[51,18,50,16,"PixelRatio"],[51,28,50,26],[51,29,50,27,"get"],[51,32,50,30],[51,33,50,31],[51,34,50,32],[52,6,51,4],[52,13,51,11,"Math"],[52,17,51,15],[52,18,51,16,"round"],[52,23,51,21],[52,24,51,22,"layoutSize"],[52,34,51,32],[52,37,51,35,"ratio"],[52,42,51,40],[52,43,51,41],[52,46,51,44,"ratio"],[52,51,51,49],[53,4,52,2],[54,2,53,0],[55,2,54,0,"exports"],[55,9,54,7],[55,10,54,8,"default"],[55,17,54,15],[55,20,54,18,"PixelRatio"],[55,30,54,28],[56,2,55,0,"module"],[56,8,55,6],[56,9,55,7,"exports"],[56,16,55,14],[56,19,55,17,"exports"],[56,26,55,24],[56,27,55,25,"default"],[56,34,55,32],[57,0,55,33],[57,3]],"functionMap":{"names":["<global>","PixelRatio","PixelRatio.get","PixelRatio.getFontScale","PixelRatio.getPixelSizeForLayoutSize","PixelRatio.roundToNearestPixel"],"mappings":"AAA;ACmB;ECI;GDE;EEK;GFE;EGM;GHE;EIQ;GJG;CDC"},"hasCjsExports":true},"type":"js/module"}]}