{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":154},"end":{"line":4,"column":30,"index":170}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"],"imports":1}},{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":14,"index":186},"end":{"line":5,"column":30,"index":202}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}},{"name":"react-native-web/dist/index","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"55efhPHw3gz2FoQtoN2yI1VuhbM=","exportNames":["*"],"imports":1}},{"name":"../utils/adjustOffsetForRTL","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":27,"index":277},"end":{"line":7,"column":65,"index":315}}],"key":"6SqFtG797Gzj6xt/xXQ37RRwD2Q=","exportNames":["*"],"imports":1}},{"name":"../../native/config/PlatformHelper","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":23,"index":340},"end":{"line":8,"column":68,"index":385}}],"key":"XSy5rD/H/Vqi7gnNwRugADmxSxM=","exportNames":["*"],"imports":1}},{"name":"../../errors/WarningMessages","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":24,"index":411},"end":{"line":9,"column":63,"index":450}}],"key":"KQPtmY8WPUi7CwShYSvfmt063yg=","exportNames":["*"],"imports":1}},{"name":"./useUnmountFlag","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":23,"index":475},"end":{"line":10,"column":50,"index":502}}],"key":"ZVYk8qUB2sJKInOo0f6fqSX8jIA=","exportNames":["*"],"imports":1}},{"name":"./useUnmountAwareCallbacks","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":33,"index":537},"end":{"line":11,"column":70,"index":574}}],"key":"xt/8bpq069BTrRpJjg7SxhAJ+qs=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useRecyclerViewController = useRecyclerViewController;\n  var tslib_1 = require(_dependencyMap[0], \"tslib\");\n  var react_1 = require(_dependencyMap[1], \"react\");\n  var react_native_1 = require(_dependencyMap[2], \"react-native-web/dist/index\");\n  var adjustOffsetForRTL_1 = require(_dependencyMap[3], \"../utils/adjustOffsetForRTL\");\n  var PlatformHelper_1 = require(_dependencyMap[4], \"../../native/config/PlatformHelper\");\n  var WarningMessages_1 = require(_dependencyMap[5], \"../../errors/WarningMessages\");\n  var useUnmountFlag_1 = require(_dependencyMap[6], \"./useUnmountFlag\");\n  var useUnmountAwareCallbacks_1 = require(_dependencyMap[7], \"./useUnmountAwareCallbacks\");\n  /**\n   * Comprehensive hook that manages RecyclerView scrolling behavior and provides\n   * imperative methods for controlling the RecyclerView.\n   *\n   * This hook combines content offset management and scroll handling functionality:\n   * 1. Provides imperative methods for scrolling and measurement\n   * 2. Handles initial scroll position when the list first loads\n   * 3. Maintains visible content position during updates\n   * 4. Manages scroll anchors for chat-like applications\n   *\n   * @param recyclerViewManager - The RecyclerViewManager instance that handles core functionality\n   * @param ref - The ref to expose the imperative methods\n   * @param scrollViewRef - Reference to the scrollable container component\n   * @param scrollAnchorRef - Reference to the scroll anchor component\n   * @param props - The RecyclerViewProps containing configuration\n   */\n  function useRecyclerViewController(recyclerViewManager, ref, scrollViewRef, scrollAnchorRef) {\n    var _this = this;\n    var isUnmounted = (0, useUnmountFlag_1.useUnmountFlag)();\n    var _a = tslib_1.__read((0, react_1.useState)(0), 2),\n      _ = _a[0],\n      setRenderId = _a[1];\n    var pauseOffsetCorrection = (0, react_1.useRef)(false);\n    var initialScrollCompletedRef = (0, react_1.useRef)(false);\n    var lastDataLengthRef = (0, react_1.useRef)(recyclerViewManager.getDataLength());\n    var setTimeout = (0, useUnmountAwareCallbacks_1.useUnmountAwareTimeout)().setTimeout;\n    // Track the first visible item for maintaining scroll position\n    var firstVisibleItemKey = (0, react_1.useRef)(undefined);\n    var firstVisibleItemLayout = (0, react_1.useRef)(undefined);\n    // Queue to store callbacks that should be executed after scroll offset updates\n    var pendingScrollCallbacks = (0, react_1.useRef)([]);\n    // Handle initial scroll position when the list first loads\n    //   useOnLoad(recyclerViewManager, () => {\n    //   });\n    /**\n     * Updates the scroll offset and calls the provided callback\n     * after the update has been applied and the component has re-rendered.\n     *\n     * @param offset - The new scroll offset to apply\n     * @param callback - Optional callback to execute after the update is applied\n     */\n    var updateScrollOffsetWithCallback = (0, react_1.useCallback)(function (offset, callback) {\n      // Attempt to update the scroll offset in the RecyclerViewManager\n      // This returns undefined if no update is needed\n      if (recyclerViewManager.updateScrollOffset(offset) !== undefined) {\n        // It will be executed after the next render\n        pendingScrollCallbacks.current.push(callback);\n        // Trigger a re-render to apply the scroll offset update\n        setRenderId(function (prev) {\n          return prev + 1;\n        });\n      } else {\n        // No update needed, execute callback immediately\n        callback();\n      }\n    }, [recyclerViewManager]);\n    var computeFirstVisibleIndexForOffsetCorrection = (0, react_1.useCallback)(function () {\n      if (recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.hasStableDataKeys() && recyclerViewManager.getDataLength() > 0 && recyclerViewManager.shouldMaintainVisibleContentPosition()) {\n        // Update the tracked first visible item\n        var firstVisibleIndex = Math.max(0, recyclerViewManager.computeVisibleIndices().startIndex);\n        if (firstVisibleIndex !== undefined && firstVisibleIndex >= 0) {\n          firstVisibleItemKey.current = recyclerViewManager.getDataKey(firstVisibleIndex);\n          firstVisibleItemLayout.current = tslib_1.__assign({}, recyclerViewManager.getLayout(firstVisibleIndex));\n        }\n      }\n    }, [recyclerViewManager]);\n    /**\n     * Maintains the visible content position when the list updates.\n     * This is particularly useful for chat applications where we want to keep\n     * the user's current view position when new messages are added.\n     */\n    var applyOffsetCorrection = (0, react_1.useCallback)(function () {\n      var _a, _b, _c;\n      var _d = recyclerViewManager.props,\n        horizontal = _d.horizontal,\n        data = _d.data;\n      // Execute all pending callbacks from previous scroll offset updates\n      // This ensures any scroll operations that were waiting for render are completed\n      var callbacks = pendingScrollCallbacks.current;\n      pendingScrollCallbacks.current = [];\n      callbacks.forEach(function (callback) {\n        return callback();\n      });\n      var currentDataLength = recyclerViewManager.getDataLength();\n      if (recyclerViewManager.getIsFirstLayoutComplete() && recyclerViewManager.hasStableDataKeys() && currentDataLength > 0 && recyclerViewManager.shouldMaintainVisibleContentPosition()) {\n        var hasDataChanged = currentDataLength !== lastDataLengthRef.current;\n        // If we have a tracked first visible item, maintain its position\n        if (firstVisibleItemKey.current) {\n          var currentIndexOfFirstVisibleItem = (_a = recyclerViewManager.getEngagedIndices().findValue(function (index) {\n            return recyclerViewManager.getDataKey(index) === firstVisibleItemKey.current;\n          })) !== null && _a !== void 0 ? _a : hasDataChanged ? data === null || data === void 0 ? void 0 : data.findIndex(function (item, index) {\n            return recyclerViewManager.getDataKey(index) === firstVisibleItemKey.current;\n          }) : undefined;\n          if (currentIndexOfFirstVisibleItem !== undefined && currentIndexOfFirstVisibleItem >= 0) {\n            // Calculate the difference in position and apply the offset\n            var diff = horizontal ? recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem).x - firstVisibleItemLayout.current.x : recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem).y - firstVisibleItemLayout.current.y;\n            firstVisibleItemLayout.current = tslib_1.__assign({}, recyclerViewManager.getLayout(currentIndexOfFirstVisibleItem));\n            if (diff !== 0 && !pauseOffsetCorrection.current && !recyclerViewManager.animationOptimizationsEnabled) {\n              // console.log(\"diff\", diff, firstVisibleItemKey.current);\n              if (PlatformHelper_1.PlatformConfig.supportsOffsetCorrection) {\n                // console.log(\"scrollBy\", diff);\n                (_b = scrollAnchorRef.current) === null || _b === void 0 ? void 0 : _b.scrollBy(diff);\n              } else {\n                var scrollToParams = horizontal ? {\n                  x: recyclerViewManager.getAbsoluteLastScrollOffset() + diff,\n                  animated: false\n                } : {\n                  y: recyclerViewManager.getAbsoluteLastScrollOffset() + diff,\n                  animated: false\n                };\n                (_c = scrollViewRef.current) === null || _c === void 0 ? void 0 : _c.scrollTo(scrollToParams);\n              }\n              if (hasDataChanged) {\n                updateScrollOffsetWithCallback(recyclerViewManager.getAbsoluteLastScrollOffset() + diff, function () {});\n                recyclerViewManager.ignoreScrollEvents = true;\n                setTimeout(function () {\n                  recyclerViewManager.ignoreScrollEvents = false;\n                }, 100);\n              }\n            }\n          }\n        }\n        computeFirstVisibleIndexForOffsetCorrection();\n      }\n      lastDataLengthRef.current = recyclerViewManager.getDataLength();\n    }, [recyclerViewManager, scrollAnchorRef, scrollViewRef, setTimeout, updateScrollOffsetWithCallback, computeFirstVisibleIndexForOffsetCorrection]);\n    var handlerMethods = (0, react_1.useMemo)(function () {\n      return {\n        get props() {\n          return recyclerViewManager.props;\n        },\n        /**\n         * Scrolls the list to a specific offset position.\n         * Handles RTL layouts and first item offset adjustments.\n         */\n        scrollToOffset: function (_a) {\n          var offset = _a.offset,\n            animated = _a.animated,\n            _b = _a.skipFirstItemOffset,\n            skipFirstItemOffset = _b === void 0 ? true : _b;\n          var horizontal = recyclerViewManager.props.horizontal;\n          if (scrollViewRef.current) {\n            // Adjust offset for RTL layouts in horizontal mode\n            if (react_native_1.I18nManager.isRTL && horizontal) {\n              // eslint-disable-next-line no-param-reassign\n              offset = (0, adjustOffsetForRTL_1.adjustOffsetForRTL)(offset, recyclerViewManager.getChildContainerDimensions().width, recyclerViewManager.getWindowSize().width) + (skipFirstItemOffset ? recyclerViewManager.firstItemOffset : -recyclerViewManager.firstItemOffset);\n            }\n            // Calculate the final offset including first item offset if needed\n            var adjustedOffset = offset + (skipFirstItemOffset ? 0 : recyclerViewManager.firstItemOffset);\n            var scrollTo_1 = horizontal ? {\n              x: adjustedOffset,\n              y: 0\n            } : {\n              x: 0,\n              y: adjustedOffset\n            };\n            scrollViewRef.current.scrollTo(tslib_1.__assign(tslib_1.__assign({}, scrollTo_1), {\n              animated: animated\n            }));\n          }\n        },\n        clearLayoutCacheOnUpdate: function () {\n          recyclerViewManager.markLayoutManagerDirty();\n        },\n        // Expose native scroll view methods\n        flashScrollIndicators: function () {\n          scrollViewRef.current.flashScrollIndicators();\n        },\n        getNativeScrollRef: function () {\n          return scrollViewRef.current;\n        },\n        getScrollResponder: function () {\n          return scrollViewRef.current.getScrollResponder();\n        },\n        getScrollableNode: function () {\n          return scrollViewRef.current.getScrollableNode();\n        },\n        /**\n         * Scrolls to the end of the list.\n         */\n        scrollToEnd: function () {\n          var args_1 = [];\n          for (var _i = 0; _i < arguments.length; _i++) {\n            args_1[_i] = arguments[_i];\n          }\n          return tslib_1.__awaiter(_this, tslib_1.__spreadArray([], tslib_1.__read(args_1), false), void 0, function (_a) {\n            var data, lastIndex;\n            var _b = _a === void 0 ? {} : _a,\n              animated = _b.animated;\n            return tslib_1.__generator(this, function (_c) {\n              switch (_c.label) {\n                case 0:\n                  data = recyclerViewManager.props.data;\n                  if (!(data && data.length > 0)) return [3 /*break*/, 2];\n                  lastIndex = data.length - 1;\n                  if (!!recyclerViewManager.getEngagedIndices().includes(lastIndex)) return [3 /*break*/, 2];\n                  return [4 /*yield*/, handlerMethods.scrollToIndex({\n                    index: lastIndex,\n                    animated: animated\n                  })];\n                case 1:\n                  _c.sent();\n                  _c.label = 2;\n                case 2:\n                  setTimeout(function () {\n                    scrollViewRef.current.scrollToEnd({\n                      animated: animated\n                    });\n                  }, 0);\n                  return [2 /*return*/];\n              }\n            });\n          });\n        },\n        /**\n         * Scrolls to the beginning of the list.\n         */\n        scrollToTop: function (_a) {\n          var _b = _a === void 0 ? {} : _a,\n            animated = _b.animated;\n          handlerMethods.scrollToOffset({\n            offset: 0,\n            animated: animated\n          });\n        },\n        /**\n         * Scrolls to a specific index in the list.\n         * Supports viewPosition and viewOffset for precise positioning.\n         * Returns a Promise that resolves when the scroll is complete.\n         */\n        scrollToIndex: function (_a) {\n          var index = _a.index,\n            animated = _a.animated,\n            viewPosition = _a.viewPosition,\n            viewOffset = _a.viewOffset;\n          return new Promise(function (resolve) {\n            var horizontal = recyclerViewManager.props.horizontal;\n            if (scrollViewRef.current && index >= 0 && index < recyclerViewManager.getDataLength()) {\n              // Pause the scroll offset adjustments\n              pauseOffsetCorrection.current = true;\n              recyclerViewManager.setOffsetProjectionEnabled(false);\n              var getFinalOffset_1 = function () {\n                var layout = recyclerViewManager.getLayout(index);\n                var offset = horizontal ? layout.x : layout.y;\n                var finalOffset = offset;\n                // take viewPosition etc into account\n                if (viewPosition !== undefined || viewOffset !== undefined) {\n                  var containerSize = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n                  var itemSize = horizontal ? layout.width : layout.height;\n                  if (viewPosition !== undefined) {\n                    // viewPosition: 0 = top, 0.5 = center, 1 = bottom\n                    finalOffset = offset - (containerSize - itemSize) * viewPosition;\n                  }\n                  if (viewOffset !== undefined) {\n                    finalOffset += viewOffset;\n                  }\n                }\n                return finalOffset + recyclerViewManager.firstItemOffset;\n              };\n              var lastAbsoluteScrollOffset_1 = recyclerViewManager.getAbsoluteLastScrollOffset();\n              var bufferForScroll = horizontal ? recyclerViewManager.getWindowSize().width : recyclerViewManager.getWindowSize().height;\n              var bufferForCompute_1 = bufferForScroll * 2;\n              var getStartScrollOffset_1 = function () {\n                var lastScrollOffset = lastAbsoluteScrollOffset_1;\n                var finalOffset = getFinalOffset_1();\n                if (finalOffset > lastScrollOffset) {\n                  lastScrollOffset = Math.max(finalOffset - bufferForCompute_1, lastScrollOffset);\n                  recyclerViewManager.setScrollDirection(\"forward\");\n                } else {\n                  lastScrollOffset = Math.min(finalOffset + bufferForCompute_1, lastScrollOffset);\n                  recyclerViewManager.setScrollDirection(\"backward\");\n                }\n                return lastScrollOffset;\n              };\n              var initialTargetOffset_1 = getFinalOffset_1();\n              var initialStartScrollOffset_1 = getStartScrollOffset_1();\n              var finalOffset_1 = initialTargetOffset_1;\n              var startScrollOffset_1 = initialStartScrollOffset_1;\n              var steps_1 = 5;\n              /**\n               * Recursively performs the scroll animation steps.\n               * This function replaces the async/await loop with callback-based execution.\n               *\n               * @param currentStep - The current step in the animation (0 to steps-1)\n               */\n              var performScrollStep_1 = function (currentStep) {\n                // Check if component is unmounted or we've completed all steps\n                if (isUnmounted.current) {\n                  resolve();\n                  return;\n                } else if (currentStep >= steps_1) {\n                  // All steps completed, perform final scroll\n                  finishScrollToIndex_1();\n                  return;\n                }\n                // Calculate the offset for this step\n                // For animated scrolls: interpolate from finalOffset to startScrollOffset\n                // For non-animated: interpolate from startScrollOffset to finalOffset\n                var nextOffset = animated ? finalOffset_1 + (startScrollOffset_1 - finalOffset_1) * (currentStep / (steps_1 - 1)) : startScrollOffset_1 + (finalOffset_1 - startScrollOffset_1) * (currentStep / (steps_1 - 1));\n                // Update scroll offset with a callback to continue to the next step\n                updateScrollOffsetWithCallback(nextOffset, function () {\n                  // Check if the index is still valid after the update\n                  if (index >= recyclerViewManager.getDataLength()) {\n                    // Index out of bounds, scroll to end instead\n                    handlerMethods.scrollToEnd({\n                      animated: animated\n                    });\n                    resolve(); // Resolve the promise as we're done\n                    return;\n                  }\n                  // Check if the target position has changed significantly\n                  var newFinalOffset = getFinalOffset_1();\n                  if (newFinalOffset < initialTargetOffset_1 && newFinalOffset < initialStartScrollOffset_1 || newFinalOffset > initialTargetOffset_1 && newFinalOffset > initialStartScrollOffset_1) {\n                    // Target has moved, recalculate and restart from beginning\n                    finalOffset_1 = newFinalOffset;\n                    startScrollOffset_1 = getStartScrollOffset_1();\n                    initialTargetOffset_1 = newFinalOffset;\n                    initialStartScrollOffset_1 = startScrollOffset_1;\n                    performScrollStep_1(0); // Restart from step 0\n                  } else {\n                    // Continue to next step\n                    performScrollStep_1(currentStep + 1);\n                  }\n                });\n              };\n              /**\n               * Completes the scroll to index operation by performing the final scroll\n               * and re-enabling offset correction after a delay.\n               */\n              var finishScrollToIndex_1 = function () {\n                finalOffset_1 = getFinalOffset_1();\n                var maxOffset = recyclerViewManager.getMaxScrollOffset();\n                if (finalOffset_1 > maxOffset) {\n                  finalOffset_1 = maxOffset;\n                }\n                if (animated) {\n                  // For animated scrolls, first jump to the start position\n                  // We don't need to add firstItemOffset here as it's already added\n                  handlerMethods.scrollToOffset({\n                    offset: startScrollOffset_1,\n                    animated: false,\n                    skipFirstItemOffset: true\n                  });\n                }\n                // Perform the final scroll to the target position\n                handlerMethods.scrollToOffset({\n                  offset: finalOffset_1,\n                  animated: animated,\n                  skipFirstItemOffset: true\n                });\n                // Re-enable offset correction after a delay\n                // Longer delay for animated scrolls to allow animation to complete\n                setTimeout(function () {\n                  pauseOffsetCorrection.current = false;\n                  recyclerViewManager.setOffsetProjectionEnabled(true);\n                  resolve(); // Resolve the promise after re-enabling corrections\n                }, animated ? 300 : 200);\n              };\n              // Start the scroll animation process\n              performScrollStep_1(0);\n            } else {\n              // Invalid parameters, resolve immediately\n              resolve();\n            }\n          });\n        },\n        /**\n         * Scrolls to a specific item in the list.\n         * Finds the item's index and uses scrollToIndex internally.\n         */\n        scrollToItem: function (_a) {\n          var item = _a.item,\n            animated = _a.animated,\n            viewPosition = _a.viewPosition,\n            viewOffset = _a.viewOffset;\n          var data = recyclerViewManager.props.data;\n          if (scrollViewRef.current && data) {\n            // Find the index of the item in the data array\n            var index = data.findIndex(function (dataItem) {\n              return dataItem === item;\n            });\n            if (index >= 0) {\n              handlerMethods.scrollToIndex({\n                index: index,\n                animated: animated,\n                viewPosition: viewPosition,\n                viewOffset: viewOffset\n              });\n            }\n          }\n        },\n        // Utility methods for measuring header height / top padding\n        getFirstItemOffset: function () {\n          return recyclerViewManager.firstItemOffset;\n        },\n        getWindowSize: function () {\n          return recyclerViewManager.getWindowSize();\n        },\n        getLayout: function (index) {\n          return recyclerViewManager.tryGetLayout(index);\n        },\n        getAbsoluteLastScrollOffset: function () {\n          return recyclerViewManager.getAbsoluteLastScrollOffset();\n        },\n        getChildContainerDimensions: function () {\n          return recyclerViewManager.getChildContainerDimensions();\n        },\n        recordInteraction: function () {\n          recyclerViewManager.recordInteraction();\n        },\n        computeVisibleIndices: function () {\n          return recyclerViewManager.computeVisibleIndices();\n        },\n        getFirstVisibleIndex: function () {\n          return recyclerViewManager.computeVisibleIndices().startIndex;\n        },\n        recomputeViewableItems: function () {\n          recyclerViewManager.recomputeViewableItems();\n        },\n        /**\n         * Disables item recycling in preparation for layout animations.\n         */\n        prepareForLayoutAnimationRender: function () {\n          if (!recyclerViewManager.props.keyExtractor) {\n            console.warn(WarningMessages_1.WarningMessages.keyExtractorNotDefinedForAnimation);\n          }\n          recyclerViewManager.animationOptimizationsEnabled = true;\n        }\n      };\n    }, [recyclerViewManager, scrollViewRef, setTimeout, isUnmounted, updateScrollOffsetWithCallback]);\n    var applyInitialScrollIndex = (0, react_1.useCallback)(function () {\n      var _a, _b;\n      var _c = recyclerViewManager.props,\n        horizontal = _c.horizontal,\n        data = _c.data;\n      var initialScrollIndex = (_a = recyclerViewManager.getInitialScrollIndex()) !== null && _a !== void 0 ? _a : -1;\n      var dataLength = (_b = data === null || data === void 0 ? void 0 : data.length) !== null && _b !== void 0 ? _b : 0;\n      if (initialScrollIndex >= 0 && initialScrollIndex < dataLength && !initialScrollCompletedRef.current && recyclerViewManager.getIsFirstLayoutComplete()) {\n        // Use setTimeout to ensure that we keep trying to scroll on first few renders\n        setTimeout(function () {\n          initialScrollCompletedRef.current = true;\n          pauseOffsetCorrection.current = false;\n        }, 100);\n        pauseOffsetCorrection.current = true;\n        var offset_1 = horizontal ? recyclerViewManager.getLayout(initialScrollIndex).x : recyclerViewManager.getLayout(initialScrollIndex).y;\n        handlerMethods.scrollToOffset({\n          offset: offset_1,\n          animated: false,\n          skipFirstItemOffset: false\n        });\n        setTimeout(function () {\n          handlerMethods.scrollToOffset({\n            offset: offset_1,\n            animated: false,\n            skipFirstItemOffset: false\n          });\n        }, 0);\n      }\n    }, [handlerMethods, recyclerViewManager, setTimeout]);\n    // Expose imperative methods through the ref\n    (0, react_1.useImperativeHandle)(ref, function () {\n      var imperativeApi = tslib_1.__assign(tslib_1.__assign({}, scrollViewRef.current), handlerMethods);\n      // Without this the props getter from handlerMethods is evaluated during spread and\n      // future updates to props are not reflected in the ref\n      Object.defineProperty(imperativeApi, \"props\", {\n        get: function () {\n          return recyclerViewManager.props;\n        },\n        enumerable: true,\n        configurable: true\n      });\n      return imperativeApi;\n    }, [handlerMethods, scrollViewRef, recyclerViewManager]);\n    return {\n      applyOffsetCorrection: applyOffsetCorrection,\n      computeFirstVisibleIndexForOffsetCorrection: computeFirstVisibleIndexForOffsetCorrection,\n      applyInitialScrollIndex: applyInitialScrollIndex,\n      handlerMethods: handlerMethods\n    };\n  }\n});","lineCount":496,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"useRecyclerViewController"],[7,35,3,33],[7,38,3,36,"useRecyclerViewController"],[7,63,3,61],[8,2,4,0],[8,6,4,4,"tslib_1"],[8,13,4,11],[8,16,4,14,"require"],[8,23,4,21],[8,24,4,21,"_dependencyMap"],[8,38,4,21],[8,50,4,29],[8,51,4,30],[9,2,5,0],[9,6,5,4,"react_1"],[9,13,5,11],[9,16,5,14,"require"],[9,23,5,21],[9,24,5,21,"_dependencyMap"],[9,38,5,21],[9,50,5,29],[9,51,5,30],[10,2,5,31],[10,6,5,31,"react_native_1"],[10,20,5,31],[10,23,5,31,"require"],[10,30,5,31],[10,31,5,31,"_dependencyMap"],[10,45,5,31],[11,2,7,0],[11,6,7,4,"adjustOffsetForRTL_1"],[11,26,7,24],[11,29,7,27,"require"],[11,36,7,34],[11,37,7,34,"_dependencyMap"],[11,51,7,34],[11,85,7,64],[11,86,7,65],[12,2,8,0],[12,6,8,4,"PlatformHelper_1"],[12,22,8,20],[12,25,8,23,"require"],[12,32,8,30],[12,33,8,30,"_dependencyMap"],[12,47,8,30],[12,88,8,67],[12,89,8,68],[13,2,9,0],[13,6,9,4,"WarningMessages_1"],[13,23,9,21],[13,26,9,24,"require"],[13,33,9,31],[13,34,9,31,"_dependencyMap"],[13,48,9,31],[13,83,9,62],[13,84,9,63],[14,2,10,0],[14,6,10,4,"useUnmountFlag_1"],[14,22,10,20],[14,25,10,23,"require"],[14,32,10,30],[14,33,10,30,"_dependencyMap"],[14,47,10,30],[14,70,10,49],[14,71,10,50],[15,2,11,0],[15,6,11,4,"useUnmountAwareCallbacks_1"],[15,32,11,30],[15,35,11,33,"require"],[15,42,11,40],[15,43,11,40,"_dependencyMap"],[15,57,11,40],[15,90,11,69],[15,91,11,70],[16,2,12,0],[17,0,13,0],[18,0,14,0],[19,0,15,0],[20,0,16,0],[21,0,17,0],[22,0,18,0],[23,0,19,0],[24,0,20,0],[25,0,21,0],[26,0,22,0],[27,0,23,0],[28,0,24,0],[29,0,25,0],[30,0,26,0],[31,0,27,0],[32,2,28,0],[32,11,28,9,"useRecyclerViewController"],[32,36,28,34,"useRecyclerViewController"],[32,37,28,35,"recyclerViewManager"],[32,56,28,54],[32,58,28,56,"ref"],[32,61,28,59],[32,63,28,61,"scrollViewRef"],[32,76,28,74],[32,78,28,76,"scrollAnchorRef"],[32,93,28,91],[32,95,28,93],[33,4,29,4],[33,8,29,8,"_this"],[33,13,29,13],[33,16,29,16],[33,20,29,20],[34,4,30,4],[34,8,30,8,"isUnmounted"],[34,19,30,19],[34,22,30,22],[34,23,30,23],[34,24,30,24],[34,26,30,26,"useUnmountFlag_1"],[34,42,30,42],[34,43,30,43,"useUnmountFlag"],[34,57,30,57],[34,59,30,59],[34,60,30,60],[35,4,31,4],[35,8,31,8,"_a"],[35,10,31,10],[35,13,31,13,"tslib_1"],[35,20,31,20],[35,21,31,21,"__read"],[35,27,31,27],[35,28,31,28],[35,29,31,29],[35,30,31,30],[35,32,31,32,"react_1"],[35,39,31,39],[35,40,31,40,"useState"],[35,48,31,48],[35,50,31,50],[35,51,31,51],[35,52,31,52],[35,54,31,54],[35,55,31,55],[35,56,31,56],[36,6,31,58,"_"],[36,7,31,59],[36,10,31,62,"_a"],[36,12,31,64],[36,13,31,65],[36,14,31,66],[36,15,31,67],[37,6,31,69,"setRenderId"],[37,17,31,80],[37,20,31,83,"_a"],[37,22,31,85],[37,23,31,86],[37,24,31,87],[37,25,31,88],[38,4,32,4],[38,8,32,8,"pauseOffsetCorrection"],[38,29,32,29],[38,32,32,32],[38,33,32,33],[38,34,32,34],[38,36,32,36,"react_1"],[38,43,32,43],[38,44,32,44,"useRef"],[38,50,32,50],[38,52,32,52],[38,57,32,57],[38,58,32,58],[39,4,33,4],[39,8,33,8,"initialScrollCompletedRef"],[39,33,33,33],[39,36,33,36],[39,37,33,37],[39,38,33,38],[39,40,33,40,"react_1"],[39,47,33,47],[39,48,33,48,"useRef"],[39,54,33,54],[39,56,33,56],[39,61,33,61],[39,62,33,62],[40,4,34,4],[40,8,34,8,"lastDataLengthRef"],[40,25,34,25],[40,28,34,28],[40,29,34,29],[40,30,34,30],[40,32,34,32,"react_1"],[40,39,34,39],[40,40,34,40,"useRef"],[40,46,34,46],[40,48,34,48,"recyclerViewManager"],[40,67,34,67],[40,68,34,68,"getDataLength"],[40,81,34,81],[40,82,34,82],[40,83,34,83],[40,84,34,84],[41,4,35,4],[41,8,35,8,"setTimeout"],[41,18,35,18],[41,21,35,21],[41,22,35,22],[41,23,35,23],[41,25,35,25,"useUnmountAwareCallbacks_1"],[41,51,35,51],[41,52,35,52,"useUnmountAwareTimeout"],[41,74,35,74],[41,76,35,76],[41,77,35,77],[41,78,35,78,"setTimeout"],[41,88,35,88],[42,4,36,4],[43,4,37,4],[43,8,37,8,"firstVisibleItemKey"],[43,27,37,27],[43,30,37,30],[43,31,37,31],[43,32,37,32],[43,34,37,34,"react_1"],[43,41,37,41],[43,42,37,42,"useRef"],[43,48,37,48],[43,50,37,50,"undefined"],[43,59,37,59],[43,60,37,60],[44,4,38,4],[44,8,38,8,"firstVisibleItemLayout"],[44,30,38,30],[44,33,38,33],[44,34,38,34],[44,35,38,35],[44,37,38,37,"react_1"],[44,44,38,44],[44,45,38,45,"useRef"],[44,51,38,51],[44,53,38,53,"undefined"],[44,62,38,62],[44,63,38,63],[45,4,39,4],[46,4,40,4],[46,8,40,8,"pendingScrollCallbacks"],[46,30,40,30],[46,33,40,33],[46,34,40,34],[46,35,40,35],[46,37,40,37,"react_1"],[46,44,40,44],[46,45,40,45,"useRef"],[46,51,40,51],[46,53,40,53],[46,55,40,55],[46,56,40,56],[47,4,41,4],[48,4,42,4],[49,4,43,4],[50,4,44,4],[51,0,45,0],[52,0,46,0],[53,0,47,0],[54,0,48,0],[55,0,49,0],[56,0,50,0],[57,4,51,4],[57,8,51,8,"updateScrollOffsetWithCallback"],[57,38,51,38],[57,41,51,41],[57,42,51,42],[57,43,51,43],[57,45,51,45,"react_1"],[57,52,51,52],[57,53,51,53,"useCallback"],[57,64,51,64],[57,66,51,66],[57,76,51,76,"offset"],[57,82,51,82],[57,84,51,84,"callback"],[57,92,51,92],[57,94,51,94],[58,6,52,8],[59,6,53,8],[60,6,54,8],[60,10,54,12,"recyclerViewManager"],[60,29,54,31],[60,30,54,32,"updateScrollOffset"],[60,48,54,50],[60,49,54,51,"offset"],[60,55,54,57],[60,56,54,58],[60,61,54,63,"undefined"],[60,70,54,72],[60,72,54,74],[61,8,55,12],[62,8,56,12,"pendingScrollCallbacks"],[62,30,56,34],[62,31,56,35,"current"],[62,38,56,42],[62,39,56,43,"push"],[62,43,56,47],[62,44,56,48,"callback"],[62,52,56,56],[62,53,56,57],[63,8,57,12],[64,8,58,12,"setRenderId"],[64,19,58,23],[64,20,58,24],[64,30,58,34,"prev"],[64,34,58,38],[64,36,58,40],[65,10,58,42],[65,17,58,49,"prev"],[65,21,58,53],[65,24,58,56],[65,25,58,57],[66,8,58,59],[66,9,58,60],[66,10,58,61],[67,6,59,8],[67,7,59,9],[67,13,60,13],[68,8,61,12],[69,8,62,12,"callback"],[69,16,62,20],[69,17,62,21],[69,18,62,22],[70,6,63,8],[71,4,64,4],[71,5,64,5],[71,7,64,7],[71,8,64,8,"recyclerViewManager"],[71,27,64,27],[71,28,64,28],[71,29,64,29],[72,4,65,4],[72,8,65,8,"computeFirstVisibleIndexForOffsetCorrection"],[72,51,65,51],[72,54,65,54],[72,55,65,55],[72,56,65,56],[72,58,65,58,"react_1"],[72,65,65,65],[72,66,65,66,"useCallback"],[72,77,65,77],[72,79,65,79],[72,91,65,91],[73,6,66,8],[73,10,66,12,"recyclerViewManager"],[73,29,66,31],[73,30,66,32,"getIsFirstLayoutComplete"],[73,54,66,56],[73,55,66,57],[73,56,66,58],[73,60,67,12,"recyclerViewManager"],[73,79,67,31],[73,80,67,32,"hasStableDataKeys"],[73,97,67,49],[73,98,67,50],[73,99,67,51],[73,103,68,12,"recyclerViewManager"],[73,122,68,31],[73,123,68,32,"getDataLength"],[73,136,68,45],[73,137,68,46],[73,138,68,47],[73,141,68,50],[73,142,68,51],[73,146,69,12,"recyclerViewManager"],[73,165,69,31],[73,166,69,32,"shouldMaintainVisibleContentPosition"],[73,202,69,68],[73,203,69,69],[73,204,69,70],[73,206,69,72],[74,8,70,12],[75,8,71,12],[75,12,71,16,"firstVisibleIndex"],[75,29,71,33],[75,32,71,36,"Math"],[75,36,71,40],[75,37,71,41,"max"],[75,40,71,44],[75,41,71,45],[75,42,71,46],[75,44,71,48,"recyclerViewManager"],[75,63,71,67],[75,64,71,68,"computeVisibleIndices"],[75,85,71,89],[75,86,71,90],[75,87,71,91],[75,88,71,92,"startIndex"],[75,98,71,102],[75,99,71,103],[76,8,72,12],[76,12,72,16,"firstVisibleIndex"],[76,29,72,33],[76,34,72,38,"undefined"],[76,43,72,47],[76,47,72,51,"firstVisibleIndex"],[76,64,72,68],[76,68,72,72],[76,69,72,73],[76,71,72,75],[77,10,73,16,"firstVisibleItemKey"],[77,29,73,35],[77,30,73,36,"current"],[77,37,73,43],[77,40,74,20,"recyclerViewManager"],[77,59,74,39],[77,60,74,40,"getDataKey"],[77,70,74,50],[77,71,74,51,"firstVisibleIndex"],[77,88,74,68],[77,89,74,69],[78,10,75,16,"firstVisibleItemLayout"],[78,32,75,38],[78,33,75,39,"current"],[78,40,75,46],[78,43,75,49,"tslib_1"],[78,50,75,56],[78,51,75,57,"__assign"],[78,59,75,65],[78,60,75,66],[78,61,75,67],[78,62,75,68],[78,64,75,70,"recyclerViewManager"],[78,83,75,89],[78,84,75,90,"getLayout"],[78,93,75,99],[78,94,75,100,"firstVisibleIndex"],[78,111,75,117],[78,112,75,118],[78,113,75,119],[79,8,76,12],[80,6,77,8],[81,4,78,4],[81,5,78,5],[81,7,78,7],[81,8,78,8,"recyclerViewManager"],[81,27,78,27],[81,28,78,28],[81,29,78,29],[82,4,79,4],[83,0,80,0],[84,0,81,0],[85,0,82,0],[86,0,83,0],[87,4,84,4],[87,8,84,8,"applyOffsetCorrection"],[87,29,84,29],[87,32,84,32],[87,33,84,33],[87,34,84,34],[87,36,84,36,"react_1"],[87,43,84,43],[87,44,84,44,"useCallback"],[87,55,84,55],[87,57,84,57],[87,69,84,69],[88,6,85,8],[88,10,85,12,"_a"],[88,12,85,14],[88,14,85,16,"_b"],[88,16,85,18],[88,18,85,20,"_c"],[88,20,85,22],[89,6,86,8],[89,10,86,12,"_d"],[89,12,86,14],[89,15,86,17,"recyclerViewManager"],[89,34,86,36],[89,35,86,37,"props"],[89,40,86,42],[90,8,86,44,"horizontal"],[90,18,86,54],[90,21,86,57,"_d"],[90,23,86,59],[90,24,86,60,"horizontal"],[90,34,86,70],[91,8,86,72,"data"],[91,12,86,76],[91,15,86,79,"_d"],[91,17,86,81],[91,18,86,82,"data"],[91,22,86,86],[92,6,87,8],[93,6,88,8],[94,6,89,8],[94,10,89,12,"callbacks"],[94,19,89,21],[94,22,89,24,"pendingScrollCallbacks"],[94,44,89,46],[94,45,89,47,"current"],[94,52,89,54],[95,6,90,8,"pendingScrollCallbacks"],[95,28,90,30],[95,29,90,31,"current"],[95,36,90,38],[95,39,90,41],[95,41,90,43],[96,6,91,8,"callbacks"],[96,15,91,17],[96,16,91,18,"forEach"],[96,23,91,25],[96,24,91,26],[96,34,91,36,"callback"],[96,42,91,44],[96,44,91,46],[97,8,91,48],[97,15,91,55,"callback"],[97,23,91,63],[97,24,91,64],[97,25,91,65],[98,6,91,67],[98,7,91,68],[98,8,91,69],[99,6,92,8],[99,10,92,12,"currentDataLength"],[99,27,92,29],[99,30,92,32,"recyclerViewManager"],[99,49,92,51],[99,50,92,52,"getDataLength"],[99,63,92,65],[99,64,92,66],[99,65,92,67],[100,6,93,8],[100,10,93,12,"recyclerViewManager"],[100,29,93,31],[100,30,93,32,"getIsFirstLayoutComplete"],[100,54,93,56],[100,55,93,57],[100,56,93,58],[100,60,94,12,"recyclerViewManager"],[100,79,94,31],[100,80,94,32,"hasStableDataKeys"],[100,97,94,49],[100,98,94,50],[100,99,94,51],[100,103,95,12,"currentDataLength"],[100,120,95,29],[100,123,95,32],[100,124,95,33],[100,128,96,12,"recyclerViewManager"],[100,147,96,31],[100,148,96,32,"shouldMaintainVisibleContentPosition"],[100,184,96,68],[100,185,96,69],[100,186,96,70],[100,188,96,72],[101,8,97,12],[101,12,97,16,"hasDataChanged"],[101,26,97,30],[101,29,97,33,"currentDataLength"],[101,46,97,50],[101,51,97,55,"lastDataLengthRef"],[101,68,97,72],[101,69,97,73,"current"],[101,76,97,80],[102,8,98,12],[103,8,99,12],[103,12,99,16,"firstVisibleItemKey"],[103,31,99,35],[103,32,99,36,"current"],[103,39,99,43],[103,41,99,45],[104,10,100,16],[104,14,100,20,"currentIndexOfFirstVisibleItem"],[104,44,100,50],[104,47,100,53],[104,48,100,54,"_a"],[104,50,100,56],[104,53,100,59,"recyclerViewManager"],[104,72,100,78],[104,73,101,21,"getEngagedIndices"],[104,90,101,38],[104,91,101,39],[104,92,101,40],[104,93,102,21,"findValue"],[104,102,102,30],[104,103,102,31],[104,113,102,41,"index"],[104,118,102,46],[104,120,102,48],[105,12,103,20],[105,19,103,27,"recyclerViewManager"],[105,38,103,46],[105,39,103,47,"getDataKey"],[105,49,103,57],[105,50,103,58,"index"],[105,55,103,63],[105,56,103,64],[105,61,104,24,"firstVisibleItemKey"],[105,80,104,43],[105,81,104,44,"current"],[105,88,104,51],[106,10,105,16],[106,11,105,17],[106,12,105,18],[106,18,105,24],[106,22,105,28],[106,26,105,32,"_a"],[106,28,105,34],[106,33,105,39],[106,38,105,44],[106,39,105,45],[106,42,105,48,"_a"],[106,44,105,50],[106,47,105,54,"hasDataChanged"],[106,61,105,68],[106,64,106,22,"data"],[106,68,106,26],[106,73,106,31],[106,77,106,35],[106,81,106,39,"data"],[106,85,106,43],[106,90,106,48],[106,95,106,53],[106,96,106,54],[106,99,106,57],[106,104,106,62],[106,105,106,63],[106,108,106,66,"data"],[106,112,106,70],[106,113,106,71,"findIndex"],[106,122,106,80],[106,123,106,81],[106,133,106,91,"item"],[106,137,106,95],[106,139,106,97,"index"],[106,144,106,102],[106,146,106,104],[107,12,107,24],[107,19,107,31,"recyclerViewManager"],[107,38,107,50],[107,39,107,51,"getDataKey"],[107,49,107,61],[107,50,107,62,"index"],[107,55,107,67],[107,56,107,68],[107,61,108,28,"firstVisibleItemKey"],[107,80,108,47],[107,81,108,48,"current"],[107,88,108,55],[108,10,109,20],[108,11,109,21],[108,12,109,22],[108,15,110,22,"undefined"],[108,24,110,32],[109,10,111,16],[109,14,111,20,"currentIndexOfFirstVisibleItem"],[109,44,111,50],[109,49,111,55,"undefined"],[109,58,111,64],[109,62,112,20,"currentIndexOfFirstVisibleItem"],[109,92,112,50],[109,96,112,54],[109,97,112,55],[109,99,112,57],[110,12,113,20],[111,12,114,20],[111,16,114,24,"diff"],[111,20,114,28],[111,23,114,31,"horizontal"],[111,33,114,41],[111,36,115,26,"recyclerViewManager"],[111,55,115,45],[111,56,115,46,"getLayout"],[111,65,115,55],[111,66,115,56,"currentIndexOfFirstVisibleItem"],[111,96,115,86],[111,97,115,87],[111,98,115,88,"x"],[111,99,115,89],[111,102,116,28,"firstVisibleItemLayout"],[111,124,116,50],[111,125,116,51,"current"],[111,132,116,58],[111,133,116,59,"x"],[111,134,116,60],[111,137,117,26,"recyclerViewManager"],[111,156,117,45],[111,157,117,46,"getLayout"],[111,166,117,55],[111,167,117,56,"currentIndexOfFirstVisibleItem"],[111,197,117,86],[111,198,117,87],[111,199,117,88,"y"],[111,200,117,89],[111,203,118,28,"firstVisibleItemLayout"],[111,225,118,50],[111,226,118,51,"current"],[111,233,118,58],[111,234,118,59,"y"],[111,235,118,60],[112,12,119,20,"firstVisibleItemLayout"],[112,34,119,42],[112,35,119,43,"current"],[112,42,119,50],[112,45,119,53,"tslib_1"],[112,52,119,60],[112,53,119,61,"__assign"],[112,61,119,69],[112,62,119,70],[112,63,119,71],[112,64,119,72],[112,66,119,74,"recyclerViewManager"],[112,85,119,93],[112,86,119,94,"getLayout"],[112,95,119,103],[112,96,119,104,"currentIndexOfFirstVisibleItem"],[112,126,119,134],[112,127,119,135],[112,128,119,136],[113,12,120,20],[113,16,120,24,"diff"],[113,20,120,28],[113,25,120,33],[113,26,120,34],[113,30,121,24],[113,31,121,25,"pauseOffsetCorrection"],[113,52,121,46],[113,53,121,47,"current"],[113,60,121,54],[113,64,122,24],[113,65,122,25,"recyclerViewManager"],[113,84,122,44],[113,85,122,45,"animationOptimizationsEnabled"],[113,114,122,74],[113,116,122,76],[114,14,123,24],[115,14,124,24],[115,18,124,28,"PlatformHelper_1"],[115,34,124,44],[115,35,124,45,"PlatformConfig"],[115,49,124,59],[115,50,124,60,"supportsOffsetCorrection"],[115,74,124,84],[115,76,124,86],[116,16,125,28],[117,16,126,28],[117,17,126,29,"_b"],[117,19,126,31],[117,22,126,34,"scrollAnchorRef"],[117,37,126,49],[117,38,126,50,"current"],[117,45,126,57],[117,51,126,63],[117,55,126,67],[117,59,126,71,"_b"],[117,61,126,73],[117,66,126,78],[117,71,126,83],[117,72,126,84],[117,75,126,87],[117,80,126,92],[117,81,126,93],[117,84,126,96,"_b"],[117,86,126,98],[117,87,126,99,"scrollBy"],[117,95,126,107],[117,96,126,108,"diff"],[117,100,126,112],[117,101,126,113],[118,14,127,24],[118,15,127,25],[118,21,128,29],[119,16,129,28],[119,20,129,32,"scrollToParams"],[119,34,129,46],[119,37,129,49,"horizontal"],[119,47,129,59],[119,50,130,34],[120,18,131,36,"x"],[120,19,131,37],[120,21,131,39,"recyclerViewManager"],[120,40,131,58],[120,41,131,59,"getAbsoluteLastScrollOffset"],[120,68,131,86],[120,69,131,87],[120,70,131,88],[120,73,131,91,"diff"],[120,77,131,95],[121,18,132,36,"animated"],[121,26,132,44],[121,28,132,46],[122,16,133,32],[122,17,133,33],[122,20,134,34],[123,18,135,36,"y"],[123,19,135,37],[123,21,135,39,"recyclerViewManager"],[123,40,135,58],[123,41,135,59,"getAbsoluteLastScrollOffset"],[123,68,135,86],[123,69,135,87],[123,70,135,88],[123,73,135,91,"diff"],[123,77,135,95],[124,18,136,36,"animated"],[124,26,136,44],[124,28,136,46],[125,16,137,32],[125,17,137,33],[126,16,138,28],[126,17,138,29,"_c"],[126,19,138,31],[126,22,138,34,"scrollViewRef"],[126,35,138,47],[126,36,138,48,"current"],[126,43,138,55],[126,49,138,61],[126,53,138,65],[126,57,138,69,"_c"],[126,59,138,71],[126,64,138,76],[126,69,138,81],[126,70,138,82],[126,73,138,85],[126,78,138,90],[126,79,138,91],[126,82,138,94,"_c"],[126,84,138,96],[126,85,138,97,"scrollTo"],[126,93,138,105],[126,94,138,106,"scrollToParams"],[126,108,138,120],[126,109,138,121],[127,14,139,24],[128,14,140,24],[128,18,140,28,"hasDataChanged"],[128,32,140,42],[128,34,140,44],[129,16,141,28,"updateScrollOffsetWithCallback"],[129,46,141,58],[129,47,141,59,"recyclerViewManager"],[129,66,141,78],[129,67,141,79,"getAbsoluteLastScrollOffset"],[129,94,141,106],[129,95,141,107],[129,96,141,108],[129,99,141,111,"diff"],[129,103,141,115],[129,105,141,117],[129,117,141,129],[129,118,141,131],[129,119,141,132],[129,120,141,133],[130,16,142,28,"recyclerViewManager"],[130,35,142,47],[130,36,142,48,"ignoreScrollEvents"],[130,54,142,66],[130,57,142,69],[130,61,142,73],[131,16,143,28,"setTimeout"],[131,26,143,38],[131,27,143,39],[131,39,143,51],[132,18,144,32,"recyclerViewManager"],[132,37,144,51],[132,38,144,52,"ignoreScrollEvents"],[132,56,144,70],[132,59,144,73],[132,64,144,78],[133,16,145,28],[133,17,145,29],[133,19,145,31],[133,22,145,34],[133,23,145,35],[134,14,146,24],[135,12,147,20],[136,10,148,16],[137,8,149,12],[138,8,150,12,"computeFirstVisibleIndexForOffsetCorrection"],[138,51,150,55],[138,52,150,56],[138,53,150,57],[139,6,151,8],[140,6,152,8,"lastDataLengthRef"],[140,23,152,25],[140,24,152,26,"current"],[140,31,152,33],[140,34,152,36,"recyclerViewManager"],[140,53,152,55],[140,54,152,56,"getDataLength"],[140,67,152,69],[140,68,152,70],[140,69,152,71],[141,4,153,4],[141,5,153,5],[141,7,153,7],[141,8,154,8,"recyclerViewManager"],[141,27,154,27],[141,29,155,8,"scrollAnchorRef"],[141,44,155,23],[141,46,156,8,"scrollViewRef"],[141,59,156,21],[141,61,157,8,"setTimeout"],[141,71,157,18],[141,73,158,8,"updateScrollOffsetWithCallback"],[141,103,158,38],[141,105,159,8,"computeFirstVisibleIndexForOffsetCorrection"],[141,148,159,51],[141,149,160,5],[141,150,160,6],[142,4,161,4],[142,8,161,8,"handlerMethods"],[142,22,161,22],[142,25,161,25],[142,26,161,26],[142,27,161,27],[142,29,161,29,"react_1"],[142,36,161,36],[142,37,161,37,"useMemo"],[142,44,161,44],[142,46,161,46],[142,58,161,58],[143,6,162,8],[143,13,162,15],[144,8,163,12],[144,12,163,16,"props"],[144,17,163,21,"props"],[144,18,163,21],[144,20,163,24],[145,10,164,16],[145,17,164,23,"recyclerViewManager"],[145,36,164,42],[145,37,164,43,"props"],[145,42,164,48],[146,8,165,12],[146,9,165,13],[147,8,166,12],[148,0,167,0],[149,0,168,0],[150,0,169,0],[151,8,170,12,"scrollToOffset"],[151,22,170,26],[151,24,170,28],[151,33,170,28,"scrollToOffset"],[151,34,170,38,"_a"],[151,36,170,40],[151,38,170,42],[152,10,171,16],[152,14,171,20,"offset"],[152,20,171,26],[152,23,171,29,"_a"],[152,25,171,31],[152,26,171,32,"offset"],[152,32,171,38],[153,12,171,40,"animated"],[153,20,171,48],[153,23,171,51,"_a"],[153,25,171,53],[153,26,171,54,"animated"],[153,34,171,62],[154,12,171,64,"_b"],[154,14,171,66],[154,17,171,69,"_a"],[154,19,171,71],[154,20,171,72,"skipFirstItemOffset"],[154,39,171,91],[155,12,171,93,"skipFirstItemOffset"],[155,31,171,112],[155,34,171,115,"_b"],[155,36,171,117],[155,41,171,122],[155,46,171,127],[155,47,171,128],[155,50,171,131],[155,54,171,135],[155,57,171,138,"_b"],[155,59,171,140],[156,10,172,16],[156,14,172,20,"horizontal"],[156,24,172,30],[156,27,172,33,"recyclerViewManager"],[156,46,172,52],[156,47,172,53,"props"],[156,52,172,58],[156,53,172,59,"horizontal"],[156,63,172,69],[157,10,173,16],[157,14,173,20,"scrollViewRef"],[157,27,173,33],[157,28,173,34,"current"],[157,35,173,41],[157,37,173,43],[158,12,174,20],[159,12,175,20],[159,16,175,24,"react_native_1"],[159,30,175,38],[159,31,175,39,"I18nManager"],[159,42,175,50],[159,43,175,51,"isRTL"],[159,48,175,56],[159,52,175,60,"horizontal"],[159,62,175,70],[159,64,175,72],[160,14,176,24],[161,14,177,24,"offset"],[161,20,177,30],[161,23,178,28],[161,24,178,29],[161,25,178,30],[161,27,178,32,"adjustOffsetForRTL_1"],[161,47,178,52],[161,48,178,53,"adjustOffsetForRTL"],[161,66,178,71],[161,68,178,73,"offset"],[161,74,178,79],[161,76,178,81,"recyclerViewManager"],[161,95,178,100],[161,96,178,101,"getChildContainerDimensions"],[161,123,178,128],[161,124,178,129],[161,125,178,130],[161,126,178,131,"width"],[161,131,178,136],[161,133,178,138,"recyclerViewManager"],[161,152,178,157],[161,153,178,158,"getWindowSize"],[161,166,178,171],[161,167,178,172],[161,168,178,173],[161,169,178,174,"width"],[161,174,178,179],[161,175,178,180],[161,179,179,33,"skipFirstItemOffset"],[161,198,179,52],[161,201,180,38,"recyclerViewManager"],[161,220,180,57],[161,221,180,58,"firstItemOffset"],[161,236,180,73],[161,239,181,38],[161,240,181,39,"recyclerViewManager"],[161,259,181,58],[161,260,181,59,"firstItemOffset"],[161,275,181,74],[161,276,181,75],[162,12,182,20],[163,12,183,20],[164,12,184,20],[164,16,184,24,"adjustedOffset"],[164,30,184,38],[164,33,184,41,"offset"],[164,39,184,47],[164,43,185,25,"skipFirstItemOffset"],[164,62,185,44],[164,65,185,47],[164,66,185,48],[164,69,185,51,"recyclerViewManager"],[164,88,185,70],[164,89,185,71,"firstItemOffset"],[164,104,185,86],[164,105,185,87],[165,12,186,20],[165,16,186,24,"scrollTo_1"],[165,26,186,34],[165,29,186,37,"horizontal"],[165,39,186,47],[165,42,187,26],[166,14,187,28,"x"],[166,15,187,29],[166,17,187,31,"adjustedOffset"],[166,31,187,45],[167,14,187,47,"y"],[167,15,187,48],[167,17,187,50],[168,12,187,52],[168,13,187,53],[168,16,188,26],[169,14,188,28,"x"],[169,15,188,29],[169,17,188,31],[169,18,188,32],[170,14,188,34,"y"],[170,15,188,35],[170,17,188,37,"adjustedOffset"],[171,12,188,52],[171,13,188,53],[172,12,189,20,"scrollViewRef"],[172,25,189,33],[172,26,189,34,"current"],[172,33,189,41],[172,34,189,42,"scrollTo"],[172,42,189,50],[172,43,189,51,"tslib_1"],[172,50,189,58],[172,51,189,59,"__assign"],[172,59,189,67],[172,60,189,68,"tslib_1"],[172,67,189,75],[172,68,189,76,"__assign"],[172,76,189,84],[172,77,189,85],[172,78,189,86],[172,79,189,87],[172,81,189,89,"scrollTo_1"],[172,91,189,99],[172,92,189,100],[172,94,189,102],[173,14,189,104,"animated"],[173,22,189,112],[173,24,189,114,"animated"],[174,12,189,123],[174,13,189,124],[174,14,189,125],[174,15,189,126],[175,10,190,16],[176,8,191,12],[176,9,191,13],[177,8,192,12,"clearLayoutCacheOnUpdate"],[177,32,192,36],[177,34,192,38],[177,43,192,38,"clearLayoutCacheOnUpdate"],[177,44,192,38],[177,46,192,50],[178,10,193,16,"recyclerViewManager"],[178,29,193,35],[178,30,193,36,"markLayoutManagerDirty"],[178,52,193,58],[178,53,193,59],[178,54,193,60],[179,8,194,12],[179,9,194,13],[180,8,195,12],[181,8,196,12,"flashScrollIndicators"],[181,29,196,33],[181,31,196,35],[181,40,196,35,"flashScrollIndicators"],[181,41,196,35],[181,43,196,47],[182,10,197,16,"scrollViewRef"],[182,23,197,29],[182,24,197,30,"current"],[182,31,197,37],[182,32,197,38,"flashScrollIndicators"],[182,53,197,59],[182,54,197,60],[182,55,197,61],[183,8,198,12],[183,9,198,13],[184,8,199,12,"getNativeScrollRef"],[184,26,199,30],[184,28,199,32],[184,37,199,32,"getNativeScrollRef"],[184,38,199,32],[184,40,199,44],[185,10,200,16],[185,17,200,23,"scrollViewRef"],[185,30,200,36],[185,31,200,37,"current"],[185,38,200,44],[186,8,201,12],[186,9,201,13],[187,8,202,12,"getScrollResponder"],[187,26,202,30],[187,28,202,32],[187,37,202,32,"getScrollResponder"],[187,38,202,32],[187,40,202,44],[188,10,203,16],[188,17,203,23,"scrollViewRef"],[188,30,203,36],[188,31,203,37,"current"],[188,38,203,44],[188,39,203,45,"getScrollResponder"],[188,57,203,63],[188,58,203,64],[188,59,203,65],[189,8,204,12],[189,9,204,13],[190,8,205,12,"getScrollableNode"],[190,25,205,29],[190,27,205,31],[190,36,205,31,"getScrollableNode"],[190,37,205,31],[190,39,205,43],[191,10,206,16],[191,17,206,23,"scrollViewRef"],[191,30,206,36],[191,31,206,37,"current"],[191,38,206,44],[191,39,206,45,"getScrollableNode"],[191,56,206,62],[191,57,206,63],[191,58,206,64],[192,8,207,12],[192,9,207,13],[193,8,208,12],[194,0,209,0],[195,0,210,0],[196,8,211,12,"scrollToEnd"],[196,19,211,23],[196,21,211,25],[196,30,211,25,"scrollToEnd"],[196,31,211,25],[196,33,211,37],[197,10,212,16],[197,14,212,20,"args_1"],[197,20,212,26],[197,23,212,29],[197,25,212,31],[198,10,213,16],[198,15,213,21],[198,19,213,25,"_i"],[198,21,213,27],[198,24,213,30],[198,25,213,31],[198,27,213,33,"_i"],[198,29,213,35],[198,32,213,38,"arguments"],[198,41,213,47],[198,42,213,48,"length"],[198,48,213,54],[198,50,213,56,"_i"],[198,52,213,58],[198,54,213,60],[198,56,213,62],[199,12,214,20,"args_1"],[199,18,214,26],[199,19,214,27,"_i"],[199,21,214,29],[199,22,214,30],[199,25,214,33,"arguments"],[199,34,214,42],[199,35,214,43,"_i"],[199,37,214,45],[199,38,214,46],[200,10,215,16],[201,10,216,16],[201,17,216,23,"tslib_1"],[201,24,216,30],[201,25,216,31,"__awaiter"],[201,34,216,40],[201,35,216,41,"_this"],[201,40,216,46],[201,42,216,48,"tslib_1"],[201,49,216,55],[201,50,216,56,"__spreadArray"],[201,63,216,69],[201,64,216,70],[201,66,216,72],[201,68,216,74,"tslib_1"],[201,75,216,81],[201,76,216,82,"__read"],[201,82,216,88],[201,83,216,89,"args_1"],[201,89,216,95],[201,90,216,96],[201,92,216,98],[201,97,216,103],[201,98,216,104],[201,100,216,106],[201,105,216,111],[201,106,216,112],[201,108,216,114],[201,118,216,124,"_a"],[201,120,216,126],[201,122,216,128],[202,12,217,20],[202,16,217,24,"data"],[202,20,217,28],[202,22,217,30,"lastIndex"],[202,31,217,39],[203,12,218,20],[203,16,218,24,"_b"],[203,18,218,26],[203,21,218,29,"_a"],[203,23,218,31],[203,28,218,36],[203,33,218,41],[203,34,218,42],[203,37,218,45],[203,38,218,46],[203,39,218,47],[203,42,218,50,"_a"],[203,44,218,52],[204,14,218,54,"animated"],[204,22,218,62],[204,25,218,65,"_b"],[204,27,218,67],[204,28,218,68,"animated"],[204,36,218,76],[205,12,219,20],[205,19,219,27,"tslib_1"],[205,26,219,34],[205,27,219,35,"__generator"],[205,38,219,46],[205,39,219,47],[205,43,219,51],[205,45,219,53],[205,55,219,63,"_c"],[205,57,219,65],[205,59,219,67],[206,14,220,24],[206,22,220,32,"_c"],[206,24,220,34],[206,25,220,35,"label"],[206,30,220,40],[207,16,221,28],[207,21,221,33],[207,22,221,34],[208,18,222,32,"data"],[208,22,222,36],[208,25,222,39,"recyclerViewManager"],[208,44,222,58],[208,45,222,59,"props"],[208,50,222,64],[208,51,222,65,"data"],[208,55,222,69],[209,18,223,32],[209,22,223,36],[209,24,223,38,"data"],[209,28,223,42],[209,32,223,46,"data"],[209,36,223,50],[209,37,223,51,"length"],[209,43,223,57],[209,46,223,60],[209,47,223,61],[209,48,223,62],[209,50,223,64],[209,57,223,71],[209,58,223,72],[209,59,223,73],[209,60,223,74],[209,71,223,85],[209,72,223,86],[209,73,223,87],[210,18,224,32,"lastIndex"],[210,27,224,41],[210,30,224,44,"data"],[210,34,224,48],[210,35,224,49,"length"],[210,41,224,55],[210,44,224,58],[210,45,224,59],[211,18,225,32],[211,22,225,36],[211,23,225,37],[211,24,225,38,"recyclerViewManager"],[211,43,225,57],[211,44,225,58,"getEngagedIndices"],[211,61,225,75],[211,62,225,76],[211,63,225,77],[211,64,225,78,"includes"],[211,72,225,86],[211,73,225,87,"lastIndex"],[211,82,225,96],[211,83,225,97],[211,85,225,99],[211,92,225,106],[211,93,225,107],[211,94,225,108],[211,95,225,109],[211,106,225,120],[211,107,225,121],[211,108,225,122],[212,18,226,32],[212,25,226,39],[212,26,226,40],[212,27,226,41],[212,28,226,42],[212,39,226,53,"handlerMethods"],[212,53,226,67],[212,54,226,68,"scrollToIndex"],[212,67,226,81],[212,68,226,82],[213,20,227,40,"index"],[213,25,227,45],[213,27,227,47,"lastIndex"],[213,36,227,56],[214,20,228,40,"animated"],[214,28,228,48],[214,30,228,50,"animated"],[215,18,229,36],[215,19,229,37],[215,20,229,38],[215,21,229,39],[216,16,230,28],[216,21,230,33],[216,22,230,34],[217,18,231,32,"_c"],[217,20,231,34],[217,21,231,35,"sent"],[217,25,231,39],[217,26,231,40],[217,27,231,41],[218,18,232,32,"_c"],[218,20,232,34],[218,21,232,35,"label"],[218,26,232,40],[218,29,232,43],[218,30,232,44],[219,16,233,28],[219,21,233,33],[219,22,233,34],[220,18,234,32,"setTimeout"],[220,28,234,42],[220,29,234,43],[220,41,234,55],[221,20,235,36,"scrollViewRef"],[221,33,235,49],[221,34,235,50,"current"],[221,41,235,57],[221,42,235,58,"scrollToEnd"],[221,53,235,69],[221,54,235,70],[222,22,235,72,"animated"],[222,30,235,80],[222,32,235,82,"animated"],[223,20,235,91],[223,21,235,92],[223,22,235,93],[224,18,236,32],[224,19,236,33],[224,21,236,35],[224,22,236,36],[224,23,236,37],[225,18,237,32],[225,25,237,39],[225,26,237,40],[225,27,237,41],[225,28,237,42],[225,39,237,53],[226,14,238,24],[227,12,239,20],[227,13,239,21],[227,14,239,22],[228,10,240,16],[228,11,240,17],[228,12,240,18],[229,8,241,12],[229,9,241,13],[230,8,242,12],[231,0,243,0],[232,0,244,0],[233,8,245,12,"scrollToTop"],[233,19,245,23],[233,21,245,25],[233,30,245,25,"scrollToTop"],[233,31,245,35,"_a"],[233,33,245,37],[233,35,245,39],[234,10,246,16],[234,14,246,20,"_b"],[234,16,246,22],[234,19,246,25,"_a"],[234,21,246,27],[234,26,246,32],[234,31,246,37],[234,32,246,38],[234,35,246,41],[234,36,246,42],[234,37,246,43],[234,40,246,46,"_a"],[234,42,246,48],[235,12,246,50,"animated"],[235,20,246,58],[235,23,246,61,"_b"],[235,25,246,63],[235,26,246,64,"animated"],[235,34,246,72],[236,10,247,16,"handlerMethods"],[236,24,247,30],[236,25,247,31,"scrollToOffset"],[236,39,247,45],[236,40,247,46],[237,12,248,20,"offset"],[237,18,248,26],[237,20,248,28],[237,21,248,29],[238,12,249,20,"animated"],[238,20,249,28],[238,22,249,30,"animated"],[239,10,250,16],[239,11,250,17],[239,12,250,18],[240,8,251,12],[240,9,251,13],[241,8,252,12],[242,0,253,0],[243,0,254,0],[244,0,255,0],[245,0,256,0],[246,8,257,12,"scrollToIndex"],[246,21,257,25],[246,23,257,27],[246,32,257,27,"scrollToIndex"],[246,33,257,37,"_a"],[246,35,257,39],[246,37,257,41],[247,10,258,16],[247,14,258,20,"index"],[247,19,258,25],[247,22,258,28,"_a"],[247,24,258,30],[247,25,258,31,"index"],[247,30,258,36],[248,12,258,38,"animated"],[248,20,258,46],[248,23,258,49,"_a"],[248,25,258,51],[248,26,258,52,"animated"],[248,34,258,60],[249,12,258,62,"viewPosition"],[249,24,258,74],[249,27,258,77,"_a"],[249,29,258,79],[249,30,258,80,"viewPosition"],[249,42,258,92],[250,12,258,94,"viewOffset"],[250,22,258,104],[250,25,258,107,"_a"],[250,27,258,109],[250,28,258,110,"viewOffset"],[250,38,258,120],[251,10,259,16],[251,17,259,23],[251,21,259,27,"Promise"],[251,28,259,34],[251,29,259,35],[251,39,259,45,"resolve"],[251,46,259,52],[251,48,259,54],[252,12,260,20],[252,16,260,24,"horizontal"],[252,26,260,34],[252,29,260,37,"recyclerViewManager"],[252,48,260,56],[252,49,260,57,"props"],[252,54,260,62],[252,55,260,63,"horizontal"],[252,65,260,73],[253,12,261,20],[253,16,261,24,"scrollViewRef"],[253,29,261,37],[253,30,261,38,"current"],[253,37,261,45],[253,41,262,24,"index"],[253,46,262,29],[253,50,262,33],[253,51,262,34],[253,55,263,24,"index"],[253,60,263,29],[253,63,263,32,"recyclerViewManager"],[253,82,263,51],[253,83,263,52,"getDataLength"],[253,96,263,65],[253,97,263,66],[253,98,263,67],[253,100,263,69],[254,14,264,24],[255,14,265,24,"pauseOffsetCorrection"],[255,35,265,45],[255,36,265,46,"current"],[255,43,265,53],[255,46,265,56],[255,50,265,60],[256,14,266,24,"recyclerViewManager"],[256,33,266,43],[256,34,266,44,"setOffsetProjectionEnabled"],[256,60,266,70],[256,61,266,71],[256,66,266,76],[256,67,266,77],[257,14,267,24],[257,18,267,28,"getFinalOffset_1"],[257,34,267,44],[257,37,267,47],[257,46,267,47,"getFinalOffset_1"],[257,47,267,47],[257,49,267,59],[258,16,268,28],[258,20,268,32,"layout"],[258,26,268,38],[258,29,268,41,"recyclerViewManager"],[258,48,268,60],[258,49,268,61,"getLayout"],[258,58,268,70],[258,59,268,71,"index"],[258,64,268,76],[258,65,268,77],[259,16,269,28],[259,20,269,32,"offset"],[259,26,269,38],[259,29,269,41,"horizontal"],[259,39,269,51],[259,42,269,54,"layout"],[259,48,269,60],[259,49,269,61,"x"],[259,50,269,62],[259,53,269,65,"layout"],[259,59,269,71],[259,60,269,72,"y"],[259,61,269,73],[260,16,270,28],[260,20,270,32,"finalOffset"],[260,31,270,43],[260,34,270,46,"offset"],[260,40,270,52],[261,16,271,28],[262,16,272,28],[262,20,272,32,"viewPosition"],[262,32,272,44],[262,37,272,49,"undefined"],[262,46,272,58],[262,50,272,62,"viewOffset"],[262,60,272,72],[262,65,272,77,"undefined"],[262,74,272,86],[262,76,272,88],[263,18,273,32],[263,22,273,36,"containerSize"],[263,35,273,49],[263,38,273,52,"horizontal"],[263,48,273,62],[263,51,274,38,"recyclerViewManager"],[263,70,274,57],[263,71,274,58,"getWindowSize"],[263,84,274,71],[263,85,274,72],[263,86,274,73],[263,87,274,74,"width"],[263,92,274,79],[263,95,275,38,"recyclerViewManager"],[263,114,275,57],[263,115,275,58,"getWindowSize"],[263,128,275,71],[263,129,275,72],[263,130,275,73],[263,131,275,74,"height"],[263,137,275,80],[264,18,276,32],[264,22,276,36,"itemSize"],[264,30,276,44],[264,33,276,47,"horizontal"],[264,43,276,57],[264,46,276,60,"layout"],[264,52,276,66],[264,53,276,67,"width"],[264,58,276,72],[264,61,276,75,"layout"],[264,67,276,81],[264,68,276,82,"height"],[264,74,276,88],[265,18,277,32],[265,22,277,36,"viewPosition"],[265,34,277,48],[265,39,277,53,"undefined"],[265,48,277,62],[265,50,277,64],[266,20,278,36],[267,20,279,36,"finalOffset"],[267,31,279,47],[267,34,280,40,"offset"],[267,40,280,46],[267,43,280,49],[267,44,280,50,"containerSize"],[267,57,280,63],[267,60,280,66,"itemSize"],[267,68,280,74],[267,72,280,78,"viewPosition"],[267,84,280,90],[268,18,281,32],[269,18,282,32],[269,22,282,36,"viewOffset"],[269,32,282,46],[269,37,282,51,"undefined"],[269,46,282,60],[269,48,282,62],[270,20,283,36,"finalOffset"],[270,31,283,47],[270,35,283,51,"viewOffset"],[270,45,283,61],[271,18,284,32],[272,16,285,28],[273,16,286,28],[273,23,286,35,"finalOffset"],[273,34,286,46],[273,37,286,49,"recyclerViewManager"],[273,56,286,68],[273,57,286,69,"firstItemOffset"],[273,72,286,84],[274,14,287,24],[274,15,287,25],[275,14,288,24],[275,18,288,28,"lastAbsoluteScrollOffset_1"],[275,44,288,54],[275,47,288,57,"recyclerViewManager"],[275,66,288,76],[275,67,288,77,"getAbsoluteLastScrollOffset"],[275,94,288,104],[275,95,288,105],[275,96,288,106],[276,14,289,24],[276,18,289,28,"bufferForScroll"],[276,33,289,43],[276,36,289,46,"horizontal"],[276,46,289,56],[276,49,290,30,"recyclerViewManager"],[276,68,290,49],[276,69,290,50,"getWindowSize"],[276,82,290,63],[276,83,290,64],[276,84,290,65],[276,85,290,66,"width"],[276,90,290,71],[276,93,291,30,"recyclerViewManager"],[276,112,291,49],[276,113,291,50,"getWindowSize"],[276,126,291,63],[276,127,291,64],[276,128,291,65],[276,129,291,66,"height"],[276,135,291,72],[277,14,292,24],[277,18,292,28,"bufferForCompute_1"],[277,36,292,46],[277,39,292,49,"bufferForScroll"],[277,54,292,64],[277,57,292,67],[277,58,292,68],[278,14,293,24],[278,18,293,28,"getStartScrollOffset_1"],[278,40,293,50],[278,43,293,53],[278,52,293,53,"getStartScrollOffset_1"],[278,53,293,53],[278,55,293,65],[279,16,294,28],[279,20,294,32,"lastScrollOffset"],[279,36,294,48],[279,39,294,51,"lastAbsoluteScrollOffset_1"],[279,65,294,77],[280,16,295,28],[280,20,295,32,"finalOffset"],[280,31,295,43],[280,34,295,46,"getFinalOffset_1"],[280,50,295,62],[280,51,295,63],[280,52,295,64],[281,16,296,28],[281,20,296,32,"finalOffset"],[281,31,296,43],[281,34,296,46,"lastScrollOffset"],[281,50,296,62],[281,52,296,64],[282,18,297,32,"lastScrollOffset"],[282,34,297,48],[282,37,297,51,"Math"],[282,41,297,55],[282,42,297,56,"max"],[282,45,297,59],[282,46,297,60,"finalOffset"],[282,57,297,71],[282,60,297,74,"bufferForCompute_1"],[282,78,297,92],[282,80,297,94,"lastScrollOffset"],[282,96,297,110],[282,97,297,111],[283,18,298,32,"recyclerViewManager"],[283,37,298,51],[283,38,298,52,"setScrollDirection"],[283,56,298,70],[283,57,298,71],[283,66,298,80],[283,67,298,81],[284,16,299,28],[284,17,299,29],[284,23,300,33],[285,18,301,32,"lastScrollOffset"],[285,34,301,48],[285,37,301,51,"Math"],[285,41,301,55],[285,42,301,56,"min"],[285,45,301,59],[285,46,301,60,"finalOffset"],[285,57,301,71],[285,60,301,74,"bufferForCompute_1"],[285,78,301,92],[285,80,301,94,"lastScrollOffset"],[285,96,301,110],[285,97,301,111],[286,18,302,32,"recyclerViewManager"],[286,37,302,51],[286,38,302,52,"setScrollDirection"],[286,56,302,70],[286,57,302,71],[286,67,302,81],[286,68,302,82],[287,16,303,28],[288,16,304,28],[288,23,304,35,"lastScrollOffset"],[288,39,304,51],[289,14,305,24],[289,15,305,25],[290,14,306,24],[290,18,306,28,"initialTargetOffset_1"],[290,39,306,49],[290,42,306,52,"getFinalOffset_1"],[290,58,306,68],[290,59,306,69],[290,60,306,70],[291,14,307,24],[291,18,307,28,"initialStartScrollOffset_1"],[291,44,307,54],[291,47,307,57,"getStartScrollOffset_1"],[291,69,307,79],[291,70,307,80],[291,71,307,81],[292,14,308,24],[292,18,308,28,"finalOffset_1"],[292,31,308,41],[292,34,308,44,"initialTargetOffset_1"],[292,55,308,65],[293,14,309,24],[293,18,309,28,"startScrollOffset_1"],[293,37,309,47],[293,40,309,50,"initialStartScrollOffset_1"],[293,66,309,76],[294,14,310,24],[294,18,310,28,"steps_1"],[294,25,310,35],[294,28,310,38],[294,29,310,39],[295,14,311,24],[296,0,312,0],[297,0,313,0],[298,0,314,0],[299,0,315,0],[300,0,316,0],[301,14,317,24],[301,18,317,28,"performScrollStep_1"],[301,37,317,47],[301,40,317,50],[301,49,317,50,"performScrollStep_1"],[301,50,317,60,"currentStep"],[301,61,317,71],[301,63,317,73],[302,16,318,28],[303,16,319,28],[303,20,319,32,"isUnmounted"],[303,31,319,43],[303,32,319,44,"current"],[303,39,319,51],[303,41,319,53],[304,18,320,32,"resolve"],[304,25,320,39],[304,26,320,40],[304,27,320,41],[305,18,321,32],[306,16,322,28],[306,17,322,29],[306,23,323,33],[306,27,323,37,"currentStep"],[306,38,323,48],[306,42,323,52,"steps_1"],[306,49,323,59],[306,51,323,61],[307,18,324,32],[308,18,325,32,"finishScrollToIndex_1"],[308,39,325,53],[308,40,325,54],[308,41,325,55],[309,18,326,32],[310,16,327,28],[311,16,328,28],[312,16,329,28],[313,16,330,28],[314,16,331,28],[314,20,331,32,"nextOffset"],[314,30,331,42],[314,33,331,45,"animated"],[314,41,331,53],[314,44,332,34,"finalOffset_1"],[314,57,332,47],[314,60,333,36],[314,61,333,37,"startScrollOffset_1"],[314,80,333,56],[314,83,333,59,"finalOffset_1"],[314,96,333,72],[314,101,334,41,"currentStep"],[314,112,334,52],[314,116,334,56,"steps_1"],[314,123,334,63],[314,126,334,66],[314,127,334,67],[314,128,334,68],[314,129,334,69],[314,132,335,34,"startScrollOffset_1"],[314,151,335,53],[314,154,336,36],[314,155,336,37,"finalOffset_1"],[314,168,336,50],[314,171,336,53,"startScrollOffset_1"],[314,190,336,72],[314,195,337,41,"currentStep"],[314,206,337,52],[314,210,337,56,"steps_1"],[314,217,337,63],[314,220,337,66],[314,221,337,67],[314,222,337,68],[314,223,337,69],[315,16,338,28],[316,16,339,28,"updateScrollOffsetWithCallback"],[316,46,339,58],[316,47,339,59,"nextOffset"],[316,57,339,69],[316,59,339,71],[316,71,339,83],[317,18,340,32],[318,18,341,32],[318,22,341,36,"index"],[318,27,341,41],[318,31,341,45,"recyclerViewManager"],[318,50,341,64],[318,51,341,65,"getDataLength"],[318,64,341,78],[318,65,341,79],[318,66,341,80],[318,68,341,82],[319,20,342,36],[320,20,343,36,"handlerMethods"],[320,34,343,50],[320,35,343,51,"scrollToEnd"],[320,46,343,62],[320,47,343,63],[321,22,343,65,"animated"],[321,30,343,73],[321,32,343,75,"animated"],[322,20,343,84],[322,21,343,85],[322,22,343,86],[323,20,344,36,"resolve"],[323,27,344,43],[323,28,344,44],[323,29,344,45],[323,30,344,46],[323,31,344,47],[324,20,345,36],[325,18,346,32],[326,18,347,32],[327,18,348,32],[327,22,348,36,"newFinalOffset"],[327,36,348,50],[327,39,348,53,"getFinalOffset_1"],[327,55,348,69],[327,56,348,70],[327,57,348,71],[328,18,349,32],[328,22,349,37,"newFinalOffset"],[328,36,349,51],[328,39,349,54,"initialTargetOffset_1"],[328,60,349,75],[328,64,350,36,"newFinalOffset"],[328,78,350,50],[328,81,350,53,"initialStartScrollOffset_1"],[328,107,350,79],[328,111,351,37,"newFinalOffset"],[328,125,351,51],[328,128,351,54,"initialTargetOffset_1"],[328,149,351,75],[328,153,352,40,"newFinalOffset"],[328,167,352,54],[328,170,352,57,"initialStartScrollOffset_1"],[328,196,352,84],[328,198,352,86],[329,20,353,36],[330,20,354,36,"finalOffset_1"],[330,33,354,49],[330,36,354,52,"newFinalOffset"],[330,50,354,66],[331,20,355,36,"startScrollOffset_1"],[331,39,355,55],[331,42,355,58,"getStartScrollOffset_1"],[331,64,355,80],[331,65,355,81],[331,66,355,82],[332,20,356,36,"initialTargetOffset_1"],[332,41,356,57],[332,44,356,60,"newFinalOffset"],[332,58,356,74],[333,20,357,36,"initialStartScrollOffset_1"],[333,46,357,62],[333,49,357,65,"startScrollOffset_1"],[333,68,357,84],[334,20,358,36,"performScrollStep_1"],[334,39,358,55],[334,40,358,56],[334,41,358,57],[334,42,358,58],[334,43,358,59],[334,44,358,60],[335,18,359,32],[335,19,359,33],[335,25,360,37],[336,20,361,36],[337,20,362,36,"performScrollStep_1"],[337,39,362,55],[337,40,362,56,"currentStep"],[337,51,362,67],[337,54,362,70],[337,55,362,71],[337,56,362,72],[338,18,363,32],[339,16,364,28],[339,17,364,29],[339,18,364,30],[340,14,365,24],[340,15,365,25],[341,14,366,24],[342,0,367,0],[343,0,368,0],[344,0,369,0],[345,14,370,24],[345,18,370,28,"finishScrollToIndex_1"],[345,39,370,49],[345,42,370,52],[345,51,370,52,"finishScrollToIndex_1"],[345,52,370,52],[345,54,370,64],[346,16,371,28,"finalOffset_1"],[346,29,371,41],[346,32,371,44,"getFinalOffset_1"],[346,48,371,60],[346,49,371,61],[346,50,371,62],[347,16,372,28],[347,20,372,32,"maxOffset"],[347,29,372,41],[347,32,372,44,"recyclerViewManager"],[347,51,372,63],[347,52,372,64,"getMaxScrollOffset"],[347,70,372,82],[347,71,372,83],[347,72,372,84],[348,16,373,28],[348,20,373,32,"finalOffset_1"],[348,33,373,45],[348,36,373,48,"maxOffset"],[348,45,373,57],[348,47,373,59],[349,18,374,32,"finalOffset_1"],[349,31,374,45],[349,34,374,48,"maxOffset"],[349,43,374,57],[350,16,375,28],[351,16,376,28],[351,20,376,32,"animated"],[351,28,376,40],[351,30,376,42],[352,18,377,32],[353,18,378,32],[354,18,379,32,"handlerMethods"],[354,32,379,46],[354,33,379,47,"scrollToOffset"],[354,47,379,61],[354,48,379,62],[355,20,380,36,"offset"],[355,26,380,42],[355,28,380,44,"startScrollOffset_1"],[355,47,380,63],[356,20,381,36,"animated"],[356,28,381,44],[356,30,381,46],[356,35,381,51],[357,20,382,36,"skipFirstItemOffset"],[357,39,382,55],[357,41,382,57],[358,18,383,32],[358,19,383,33],[358,20,383,34],[359,16,384,28],[360,16,385,28],[361,16,386,28,"handlerMethods"],[361,30,386,42],[361,31,386,43,"scrollToOffset"],[361,45,386,57],[361,46,386,58],[362,18,387,32,"offset"],[362,24,387,38],[362,26,387,40,"finalOffset_1"],[362,39,387,53],[363,18,388,32,"animated"],[363,26,388,40],[363,28,388,42,"animated"],[363,36,388,50],[364,18,389,32,"skipFirstItemOffset"],[364,37,389,51],[364,39,389,53],[365,16,390,28],[365,17,390,29],[365,18,390,30],[366,16,391,28],[367,16,392,28],[368,16,393,28,"setTimeout"],[368,26,393,38],[368,27,393,39],[368,39,393,51],[369,18,394,32,"pauseOffsetCorrection"],[369,39,394,53],[369,40,394,54,"current"],[369,47,394,61],[369,50,394,64],[369,55,394,69],[370,18,395,32,"recyclerViewManager"],[370,37,395,51],[370,38,395,52,"setOffsetProjectionEnabled"],[370,64,395,78],[370,65,395,79],[370,69,395,83],[370,70,395,84],[371,18,396,32,"resolve"],[371,25,396,39],[371,26,396,40],[371,27,396,41],[371,28,396,42],[371,29,396,43],[372,16,397,28],[372,17,397,29],[372,19,397,31,"animated"],[372,27,397,39],[372,30,397,42],[372,33,397,45],[372,36,397,48],[372,39,397,51],[372,40,397,52],[373,14,398,24],[373,15,398,25],[374,14,399,24],[375,14,400,24,"performScrollStep_1"],[375,33,400,43],[375,34,400,44],[375,35,400,45],[375,36,400,46],[376,12,401,20],[376,13,401,21],[376,19,402,25],[377,14,403,24],[378,14,404,24,"resolve"],[378,21,404,31],[378,22,404,32],[378,23,404,33],[379,12,405,20],[380,10,406,16],[380,11,406,17],[380,12,406,18],[381,8,407,12],[381,9,407,13],[382,8,408,12],[383,0,409,0],[384,0,410,0],[385,0,411,0],[386,8,412,12,"scrollToItem"],[386,20,412,24],[386,22,412,26],[386,31,412,26,"scrollToItem"],[386,32,412,36,"_a"],[386,34,412,38],[386,36,412,40],[387,10,413,16],[387,14,413,20,"item"],[387,18,413,24],[387,21,413,27,"_a"],[387,23,413,29],[387,24,413,30,"item"],[387,28,413,34],[388,12,413,36,"animated"],[388,20,413,44],[388,23,413,47,"_a"],[388,25,413,49],[388,26,413,50,"animated"],[388,34,413,58],[389,12,413,60,"viewPosition"],[389,24,413,72],[389,27,413,75,"_a"],[389,29,413,77],[389,30,413,78,"viewPosition"],[389,42,413,90],[390,12,413,92,"viewOffset"],[390,22,413,102],[390,25,413,105,"_a"],[390,27,413,107],[390,28,413,108,"viewOffset"],[390,38,413,118],[391,10,414,16],[391,14,414,20,"data"],[391,18,414,24],[391,21,414,27,"recyclerViewManager"],[391,40,414,46],[391,41,414,47,"props"],[391,46,414,52],[391,47,414,53,"data"],[391,51,414,57],[392,10,415,16],[392,14,415,20,"scrollViewRef"],[392,27,415,33],[392,28,415,34,"current"],[392,35,415,41],[392,39,415,45,"data"],[392,43,415,49],[392,45,415,51],[393,12,416,20],[394,12,417,20],[394,16,417,24,"index"],[394,21,417,29],[394,24,417,32,"data"],[394,28,417,36],[394,29,417,37,"findIndex"],[394,38,417,46],[394,39,417,47],[394,49,417,57,"dataItem"],[394,57,417,65],[394,59,417,67],[395,14,417,69],[395,21,417,76,"dataItem"],[395,29,417,84],[395,34,417,89,"item"],[395,38,417,93],[396,12,417,95],[396,13,417,96],[396,14,417,97],[397,12,418,20],[397,16,418,24,"index"],[397,21,418,29],[397,25,418,33],[397,26,418,34],[397,28,418,36],[398,14,419,24,"handlerMethods"],[398,28,419,38],[398,29,419,39,"scrollToIndex"],[398,42,419,52],[398,43,419,53],[399,16,420,28,"index"],[399,21,420,33],[399,23,420,35,"index"],[399,28,420,40],[400,16,421,28,"animated"],[400,24,421,36],[400,26,421,38,"animated"],[400,34,421,46],[401,16,422,28,"viewPosition"],[401,28,422,40],[401,30,422,42,"viewPosition"],[401,42,422,54],[402,16,423,28,"viewOffset"],[402,26,423,38],[402,28,423,40,"viewOffset"],[403,14,424,24],[403,15,424,25],[403,16,424,26],[404,12,425,20],[405,10,426,16],[406,8,427,12],[406,9,427,13],[407,8,428,12],[408,8,429,12,"getFirstItemOffset"],[408,26,429,30],[408,28,429,32],[408,37,429,32,"getFirstItemOffset"],[408,38,429,32],[408,40,429,44],[409,10,430,16],[409,17,430,23,"recyclerViewManager"],[409,36,430,42],[409,37,430,43,"firstItemOffset"],[409,52,430,58],[410,8,431,12],[410,9,431,13],[411,8,432,12,"getWindowSize"],[411,21,432,25],[411,23,432,27],[411,32,432,27,"getWindowSize"],[411,33,432,27],[411,35,432,39],[412,10,433,16],[412,17,433,23,"recyclerViewManager"],[412,36,433,42],[412,37,433,43,"getWindowSize"],[412,50,433,56],[412,51,433,57],[412,52,433,58],[413,8,434,12],[413,9,434,13],[414,8,435,12,"getLayout"],[414,17,435,21],[414,19,435,23],[414,28,435,23,"getLayout"],[414,29,435,33,"index"],[414,34,435,38],[414,36,435,40],[415,10,436,16],[415,17,436,23,"recyclerViewManager"],[415,36,436,42],[415,37,436,43,"tryGetLayout"],[415,49,436,55],[415,50,436,56,"index"],[415,55,436,61],[415,56,436,62],[416,8,437,12],[416,9,437,13],[417,8,438,12,"getAbsoluteLastScrollOffset"],[417,35,438,39],[417,37,438,41],[417,46,438,41,"getAbsoluteLastScrollOffset"],[417,47,438,41],[417,49,438,53],[418,10,439,16],[418,17,439,23,"recyclerViewManager"],[418,36,439,42],[418,37,439,43,"getAbsoluteLastScrollOffset"],[418,64,439,70],[418,65,439,71],[418,66,439,72],[419,8,440,12],[419,9,440,13],[420,8,441,12,"getChildContainerDimensions"],[420,35,441,39],[420,37,441,41],[420,46,441,41,"getChildContainerDimensions"],[420,47,441,41],[420,49,441,53],[421,10,442,16],[421,17,442,23,"recyclerViewManager"],[421,36,442,42],[421,37,442,43,"getChildContainerDimensions"],[421,64,442,70],[421,65,442,71],[421,66,442,72],[422,8,443,12],[422,9,443,13],[423,8,444,12,"recordInteraction"],[423,25,444,29],[423,27,444,31],[423,36,444,31,"recordInteraction"],[423,37,444,31],[423,39,444,43],[424,10,445,16,"recyclerViewManager"],[424,29,445,35],[424,30,445,36,"recordInteraction"],[424,47,445,53],[424,48,445,54],[424,49,445,55],[425,8,446,12],[425,9,446,13],[426,8,447,12,"computeVisibleIndices"],[426,29,447,33],[426,31,447,35],[426,40,447,35,"computeVisibleIndices"],[426,41,447,35],[426,43,447,47],[427,10,448,16],[427,17,448,23,"recyclerViewManager"],[427,36,448,42],[427,37,448,43,"computeVisibleIndices"],[427,58,448,64],[427,59,448,65],[427,60,448,66],[428,8,449,12],[428,9,449,13],[429,8,450,12,"getFirstVisibleIndex"],[429,28,450,32],[429,30,450,34],[429,39,450,34,"getFirstVisibleIndex"],[429,40,450,34],[429,42,450,46],[430,10,451,16],[430,17,451,23,"recyclerViewManager"],[430,36,451,42],[430,37,451,43,"computeVisibleIndices"],[430,58,451,64],[430,59,451,65],[430,60,451,66],[430,61,451,67,"startIndex"],[430,71,451,77],[431,8,452,12],[431,9,452,13],[432,8,453,12,"recomputeViewableItems"],[432,30,453,34],[432,32,453,36],[432,41,453,36,"recomputeViewableItems"],[432,42,453,36],[432,44,453,48],[433,10,454,16,"recyclerViewManager"],[433,29,454,35],[433,30,454,36,"recomputeViewableItems"],[433,52,454,58],[433,53,454,59],[433,54,454,60],[434,8,455,12],[434,9,455,13],[435,8,456,12],[436,0,457,0],[437,0,458,0],[438,8,459,12,"prepareForLayoutAnimationRender"],[438,39,459,43],[438,41,459,45],[438,50,459,45,"prepareForLayoutAnimationRender"],[438,51,459,45],[438,53,459,57],[439,10,460,16],[439,14,460,20],[439,15,460,21,"recyclerViewManager"],[439,34,460,40],[439,35,460,41,"props"],[439,40,460,46],[439,41,460,47,"keyExtractor"],[439,53,460,59],[439,55,460,61],[440,12,461,20,"console"],[440,19,461,27],[440,20,461,28,"warn"],[440,24,461,32],[440,25,461,33,"WarningMessages_1"],[440,42,461,50],[440,43,461,51,"WarningMessages"],[440,58,461,66],[440,59,461,67,"keyExtractorNotDefinedForAnimation"],[440,93,461,101],[440,94,461,102],[441,10,462,16],[442,10,463,16,"recyclerViewManager"],[442,29,463,35],[442,30,463,36,"animationOptimizationsEnabled"],[442,59,463,65],[442,62,463,68],[442,66,463,72],[443,8,464,12],[444,6,465,8],[444,7,465,9],[445,4,466,4],[445,5,466,5],[445,7,466,7],[445,8,467,8,"recyclerViewManager"],[445,27,467,27],[445,29,468,8,"scrollViewRef"],[445,42,468,21],[445,44,469,8,"setTimeout"],[445,54,469,18],[445,56,470,8,"isUnmounted"],[445,67,470,19],[445,69,471,8,"updateScrollOffsetWithCallback"],[445,99,471,38],[445,100,472,5],[445,101,472,6],[446,4,473,4],[446,8,473,8,"applyInitialScrollIndex"],[446,31,473,31],[446,34,473,34],[446,35,473,35],[446,36,473,36],[446,38,473,38,"react_1"],[446,45,473,45],[446,46,473,46,"useCallback"],[446,57,473,57],[446,59,473,59],[446,71,473,71],[447,6,474,8],[447,10,474,12,"_a"],[447,12,474,14],[447,14,474,16,"_b"],[447,16,474,18],[448,6,475,8],[448,10,475,12,"_c"],[448,12,475,14],[448,15,475,17,"recyclerViewManager"],[448,34,475,36],[448,35,475,37,"props"],[448,40,475,42],[449,8,475,44,"horizontal"],[449,18,475,54],[449,21,475,57,"_c"],[449,23,475,59],[449,24,475,60,"horizontal"],[449,34,475,70],[450,8,475,72,"data"],[450,12,475,76],[450,15,475,79,"_c"],[450,17,475,81],[450,18,475,82,"data"],[450,22,475,86],[451,6,476,8],[451,10,476,12,"initialScrollIndex"],[451,28,476,30],[451,31,476,33],[451,32,476,34,"_a"],[451,34,476,36],[451,37,476,39,"recyclerViewManager"],[451,56,476,58],[451,57,476,59,"getInitialScrollIndex"],[451,78,476,80],[451,79,476,81],[451,80,476,82],[451,86,476,88],[451,90,476,92],[451,94,476,96,"_a"],[451,96,476,98],[451,101,476,103],[451,106,476,108],[451,107,476,109],[451,110,476,112,"_a"],[451,112,476,114],[451,115,476,117],[451,116,476,118],[451,117,476,119],[452,6,477,8],[452,10,477,12,"dataLength"],[452,20,477,22],[452,23,477,25],[452,24,477,26,"_b"],[452,26,477,28],[452,29,477,31,"data"],[452,33,477,35],[452,38,477,40],[452,42,477,44],[452,46,477,48,"data"],[452,50,477,52],[452,55,477,57],[452,60,477,62],[452,61,477,63],[452,64,477,66],[452,69,477,71],[452,70,477,72],[452,73,477,75,"data"],[452,77,477,79],[452,78,477,80,"length"],[452,84,477,86],[452,90,477,92],[452,94,477,96],[452,98,477,100,"_b"],[452,100,477,102],[452,105,477,107],[452,110,477,112],[452,111,477,113],[452,114,477,116,"_b"],[452,116,477,118],[452,119,477,121],[452,120,477,122],[453,6,478,8],[453,10,478,12,"initialScrollIndex"],[453,28,478,30],[453,32,478,34],[453,33,478,35],[453,37,479,12,"initialScrollIndex"],[453,55,479,30],[453,58,479,33,"dataLength"],[453,68,479,43],[453,72,480,12],[453,73,480,13,"initialScrollCompletedRef"],[453,98,480,38],[453,99,480,39,"current"],[453,106,480,46],[453,110,481,12,"recyclerViewManager"],[453,129,481,31],[453,130,481,32,"getIsFirstLayoutComplete"],[453,154,481,56],[453,155,481,57],[453,156,481,58],[453,158,481,60],[454,8,482,12],[455,8,483,12,"setTimeout"],[455,18,483,22],[455,19,483,23],[455,31,483,35],[456,10,484,16,"initialScrollCompletedRef"],[456,35,484,41],[456,36,484,42,"current"],[456,43,484,49],[456,46,484,52],[456,50,484,56],[457,10,485,16,"pauseOffsetCorrection"],[457,31,485,37],[457,32,485,38,"current"],[457,39,485,45],[457,42,485,48],[457,47,485,53],[458,8,486,12],[458,9,486,13],[458,11,486,15],[458,14,486,18],[458,15,486,19],[459,8,487,12,"pauseOffsetCorrection"],[459,29,487,33],[459,30,487,34,"current"],[459,37,487,41],[459,40,487,44],[459,44,487,48],[460,8,488,12],[460,12,488,16,"offset_1"],[460,20,488,24],[460,23,488,27,"horizontal"],[460,33,488,37],[460,36,489,18,"recyclerViewManager"],[460,55,489,37],[460,56,489,38,"getLayout"],[460,65,489,47],[460,66,489,48,"initialScrollIndex"],[460,84,489,66],[460,85,489,67],[460,86,489,68,"x"],[460,87,489,69],[460,90,490,18,"recyclerViewManager"],[460,109,490,37],[460,110,490,38,"getLayout"],[460,119,490,47],[460,120,490,48,"initialScrollIndex"],[460,138,490,66],[460,139,490,67],[460,140,490,68,"y"],[460,141,490,69],[461,8,491,12,"handlerMethods"],[461,22,491,26],[461,23,491,27,"scrollToOffset"],[461,37,491,41],[461,38,491,42],[462,10,492,16,"offset"],[462,16,492,22],[462,18,492,24,"offset_1"],[462,26,492,32],[463,10,493,16,"animated"],[463,18,493,24],[463,20,493,26],[463,25,493,31],[464,10,494,16,"skipFirstItemOffset"],[464,29,494,35],[464,31,494,37],[465,8,495,12],[465,9,495,13],[465,10,495,14],[466,8,496,12,"setTimeout"],[466,18,496,22],[466,19,496,23],[466,31,496,35],[467,10,497,16,"handlerMethods"],[467,24,497,30],[467,25,497,31,"scrollToOffset"],[467,39,497,45],[467,40,497,46],[468,12,498,20,"offset"],[468,18,498,26],[468,20,498,28,"offset_1"],[468,28,498,36],[469,12,499,20,"animated"],[469,20,499,28],[469,22,499,30],[469,27,499,35],[470,12,500,20,"skipFirstItemOffset"],[470,31,500,39],[470,33,500,41],[471,10,501,16],[471,11,501,17],[471,12,501,18],[472,8,502,12],[472,9,502,13],[472,11,502,15],[472,12,502,16],[472,13,502,17],[473,6,503,8],[474,4,504,4],[474,5,504,5],[474,7,504,7],[474,8,504,8,"handlerMethods"],[474,22,504,22],[474,24,504,24,"recyclerViewManager"],[474,43,504,43],[474,45,504,45,"setTimeout"],[474,55,504,55],[474,56,504,56],[474,57,504,57],[475,4,505,4],[476,4,506,4],[476,5,506,5],[476,6,506,6],[476,8,506,8,"react_1"],[476,15,506,15],[476,16,506,16,"useImperativeHandle"],[476,35,506,35],[476,37,506,37,"ref"],[476,40,506,40],[476,42,506,42],[476,54,506,54],[477,6,507,8],[477,10,507,12,"imperativeApi"],[477,23,507,25],[477,26,507,28,"tslib_1"],[477,33,507,35],[477,34,507,36,"__assign"],[477,42,507,44],[477,43,507,45,"tslib_1"],[477,50,507,52],[477,51,507,53,"__assign"],[477,59,507,61],[477,60,507,62],[477,61,507,63],[477,62,507,64],[477,64,507,66,"scrollViewRef"],[477,77,507,79],[477,78,507,80,"current"],[477,85,507,87],[477,86,507,88],[477,88,507,90,"handlerMethods"],[477,102,507,104],[477,103,507,105],[478,6,508,8],[479,6,509,8],[480,6,510,8,"Object"],[480,12,510,14],[480,13,510,15,"defineProperty"],[480,27,510,29],[480,28,510,30,"imperativeApi"],[480,41,510,43],[480,43,510,45],[480,50,510,52],[480,52,510,54],[481,8,511,12,"get"],[481,11,511,15],[481,13,511,17],[481,22,511,17,"get"],[481,23,511,17],[481,25,511,29],[482,10,512,16],[482,17,512,23,"recyclerViewManager"],[482,36,512,42],[482,37,512,43,"props"],[482,42,512,48],[483,8,513,12],[483,9,513,13],[484,8,514,12,"enumerable"],[484,18,514,22],[484,20,514,24],[484,24,514,28],[485,8,515,12,"configurable"],[485,20,515,24],[485,22,515,26],[486,6,516,8],[486,7,516,9],[486,8,516,10],[487,6,517,8],[487,13,517,15,"imperativeApi"],[487,26,517,28],[488,4,518,4],[488,5,518,5],[488,7,518,7],[488,8,518,8,"handlerMethods"],[488,22,518,22],[488,24,518,24,"scrollViewRef"],[488,37,518,37],[488,39,518,39,"recyclerViewManager"],[488,58,518,58],[488,59,518,59],[488,60,518,60],[489,4,519,4],[489,11,519,11],[490,6,520,8,"applyOffsetCorrection"],[490,27,520,29],[490,29,520,31,"applyOffsetCorrection"],[490,50,520,52],[491,6,521,8,"computeFirstVisibleIndexForOffsetCorrection"],[491,49,521,51],[491,51,521,53,"computeFirstVisibleIndexForOffsetCorrection"],[491,94,521,96],[492,6,522,8,"applyInitialScrollIndex"],[492,29,522,31],[492,31,522,33,"applyInitialScrollIndex"],[492,54,522,56],[493,6,523,8,"handlerMethods"],[493,20,523,22],[493,22,523,24,"handlerMethods"],[494,4,524,4],[494,5,524,5],[495,2,525,0],[496,0,525,1],[496,3]],"functionMap":{"names":["<global>","useRecyclerViewController","<anonymous>","setRenderId$argument_0","callbacks.forEach$argument_0","recyclerViewManager.getEngagedIndices.findValue$argument_0","data.findIndex$argument_0","updateScrollOffsetWithCallback$argument_1","setTimeout$argument_0","get__props","scrollToOffset","clearLayoutCacheOnUpdate","flashScrollIndicators","getNativeScrollRef","getScrollResponder","getScrollableNode","scrollToEnd","tslib_1.__awaiter$argument_3","tslib_1.__generator$argument_1","scrollToTop","scrollToIndex","Promise$argument_0","getFinalOffset_1","getStartScrollOffset_1","performScrollStep_1","finishScrollToIndex_1","scrollToItem","getFirstItemOffset","getWindowSize","getLayout","getAbsoluteLastScrollOffset","getChildContainerDimensions","recordInteraction","computeVisibleIndices","getFirstVisibleIndex","recomputeViewableItems","prepareForLayoutAnimationRender","Object.defineProperty$argument_2.get"],"mappings":"AAA;AC2B;kECuB;wBCO,oCD;KDM;+ECC;KDa;yDCM;0BEO,0CF;+BGW;iBHG;iFIC;qBJG;qHKgC,eL;uCME;6BNE;KDQ;8CCQ;YOE;aPE;4BQK;aRqB;sCSC;aTE;mCUE;aVE;gCWC;aXE;gCYC;aZE;+BaC;abE;yBcI;kHCK;qDCG;2CVe;iCUE;qBDG;iBDC;adC;yBiBI;ajBM;2BkBM;mCCE;+CCQ;yBDoB;qDEM;yBFY;kDGY;uEjBsB;6BiByB;yBHC;oDIK;uCjBuB;6BiBI;yBJC;iBDQ;alBC;0BwBK;+CpBK,iDoB;axBU;gCyBE;azBE;2B0BC;a1BE;uB2BC;a3BE;yC4BC;a5BE;yC6BC;a7BE;+B8BC;a9BE;mC+BC;a/BE;kCgCC;ahCE;oCiCC;ajCE;6CkCI;alCK;KDE;2DCO;uBMU;aNG;uBMU;aNM;KDE;0CCE;iBmCK;anCE;KDK;CDO"},"hasCjsExports":true},"type":"js/module"}]}