{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * @format\n   * \n   */\n\n  'use strict';\n\n  /*\n   * @returns {bool} true if different, false if equal\n   */\n  exports.__esModule = true;\n  exports.default = void 0;\n  var deepDiffer = function deepDiffer(one, two, maxDepth) {\n    if (maxDepth === void 0) {\n      maxDepth = -1;\n    }\n    if (maxDepth === 0) {\n      return true;\n    }\n    if (one === two) {\n      // Short circuit on identical object references instead of traversing them.\n      return false;\n    }\n    if (typeof one === 'function' && typeof two === 'function') {\n      // We consider all functions equal\n      return false;\n    }\n    if (typeof one !== 'object' || one === null) {\n      // Primitives can be directly compared\n      return one !== two;\n    }\n    if (typeof two !== 'object' || two === null) {\n      // We know they are different because the previous case would have triggered\n      // otherwise.\n      return true;\n    }\n    if (one.constructor !== two.constructor) {\n      return true;\n    }\n    if (Array.isArray(one)) {\n      // We know two is also an array because the constructors are equal\n      var len = one.length;\n      if (two.length !== len) {\n        return true;\n      }\n      for (var ii = 0; ii < len; ii++) {\n        if (deepDiffer(one[ii], two[ii], maxDepth - 1)) {\n          return true;\n        }\n      }\n    } else {\n      for (var key in one) {\n        if (deepDiffer(one[key], two[key], maxDepth - 1)) {\n          return true;\n        }\n      }\n      for (var twoKey in two) {\n        // The only case we haven't checked yet is keys that are in two but aren't\n        // in one, which means they are different.\n        if (one[twoKey] === undefined && two[twoKey] !== undefined) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n  var _default = exports.default = deepDiffer;\n  module.exports = exports.default;\n});","lineCount":75,"map":[[2,2,1,0],[3,0,2,0],[4,0,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[12,2,11,0],[12,14,11,12],[14,2,13,0],[15,0,14,0],[16,0,15,0],[17,2,16,0,"exports"],[17,9,16,7],[17,10,16,8,"__esModule"],[17,20,16,18],[17,23,16,21],[17,27,16,25],[18,2,17,0,"exports"],[18,9,17,7],[18,10,17,8,"default"],[18,17,17,15],[18,20,17,18],[18,25,17,23],[18,26,17,24],[19,2,18,0],[19,6,18,4,"deepDiffer"],[19,16,18,14],[19,19,18,17],[19,28,18,26,"deepDiffer"],[19,38,18,36,"deepDiffer"],[19,39,18,37,"one"],[19,42,18,40],[19,44,18,42,"two"],[19,47,18,45],[19,49,18,47,"maxDepth"],[19,57,18,55],[19,59,18,57],[20,4,19,2],[20,8,19,6,"maxDepth"],[20,16,19,14],[20,21,19,19],[20,26,19,24],[20,27,19,25],[20,29,19,27],[21,6,20,4,"maxDepth"],[21,14,20,12],[21,17,20,15],[21,18,20,16],[21,19,20,17],[22,4,21,2],[23,4,22,2],[23,8,22,6,"maxDepth"],[23,16,22,14],[23,21,22,19],[23,22,22,20],[23,24,22,22],[24,6,23,4],[24,13,23,11],[24,17,23,15],[25,4,24,2],[26,4,25,2],[26,8,25,6,"one"],[26,11,25,9],[26,16,25,14,"two"],[26,19,25,17],[26,21,25,19],[27,6,26,4],[28,6,27,4],[28,13,27,11],[28,18,27,16],[29,4,28,2],[30,4,29,2],[30,8,29,6],[30,15,29,13,"one"],[30,18,29,16],[30,23,29,21],[30,33,29,31],[30,37,29,35],[30,44,29,42,"two"],[30,47,29,45],[30,52,29,50],[30,62,29,60],[30,64,29,62],[31,6,30,4],[32,6,31,4],[32,13,31,11],[32,18,31,16],[33,4,32,2],[34,4,33,2],[34,8,33,6],[34,15,33,13,"one"],[34,18,33,16],[34,23,33,21],[34,31,33,29],[34,35,33,33,"one"],[34,38,33,36],[34,43,33,41],[34,47,33,45],[34,49,33,47],[35,6,34,4],[36,6,35,4],[36,13,35,11,"one"],[36,16,35,14],[36,21,35,19,"two"],[36,24,35,22],[37,4,36,2],[38,4,37,2],[38,8,37,6],[38,15,37,13,"two"],[38,18,37,16],[38,23,37,21],[38,31,37,29],[38,35,37,33,"two"],[38,38,37,36],[38,43,37,41],[38,47,37,45],[38,49,37,47],[39,6,38,4],[40,6,39,4],[41,6,40,4],[41,13,40,11],[41,17,40,15],[42,4,41,2],[43,4,42,2],[43,8,42,6,"one"],[43,11,42,9],[43,12,42,10,"constructor"],[43,23,42,21],[43,28,42,26,"two"],[43,31,42,29],[43,32,42,30,"constructor"],[43,43,42,41],[43,45,42,43],[44,6,43,4],[44,13,43,11],[44,17,43,15],[45,4,44,2],[46,4,45,2],[46,8,45,6,"Array"],[46,13,45,11],[46,14,45,12,"isArray"],[46,21,45,19],[46,22,45,20,"one"],[46,25,45,23],[46,26,45,24],[46,28,45,26],[47,6,46,4],[48,6,47,4],[48,10,47,8,"len"],[48,13,47,11],[48,16,47,14,"one"],[48,19,47,17],[48,20,47,18,"length"],[48,26,47,24],[49,6,48,4],[49,10,48,8,"two"],[49,13,48,11],[49,14,48,12,"length"],[49,20,48,18],[49,25,48,23,"len"],[49,28,48,26],[49,30,48,28],[50,8,49,6],[50,15,49,13],[50,19,49,17],[51,6,50,4],[52,6,51,4],[52,11,51,9],[52,15,51,13,"ii"],[52,17,51,15],[52,20,51,18],[52,21,51,19],[52,23,51,21,"ii"],[52,25,51,23],[52,28,51,26,"len"],[52,31,51,29],[52,33,51,31,"ii"],[52,35,51,33],[52,37,51,35],[52,39,51,37],[53,8,52,6],[53,12,52,10,"deepDiffer"],[53,22,52,20],[53,23,52,21,"one"],[53,26,52,24],[53,27,52,25,"ii"],[53,29,52,27],[53,30,52,28],[53,32,52,30,"two"],[53,35,52,33],[53,36,52,34,"ii"],[53,38,52,36],[53,39,52,37],[53,41,52,39,"maxDepth"],[53,49,52,47],[53,52,52,50],[53,53,52,51],[53,54,52,52],[53,56,52,54],[54,10,53,8],[54,17,53,15],[54,21,53,19],[55,8,54,6],[56,6,55,4],[57,4,56,2],[57,5,56,3],[57,11,56,9],[58,6,57,4],[58,11,57,9],[58,15,57,13,"key"],[58,18,57,16],[58,22,57,20,"one"],[58,25,57,23],[58,27,57,25],[59,8,58,6],[59,12,58,10,"deepDiffer"],[59,22,58,20],[59,23,58,21,"one"],[59,26,58,24],[59,27,58,25,"key"],[59,30,58,28],[59,31,58,29],[59,33,58,31,"two"],[59,36,58,34],[59,37,58,35,"key"],[59,40,58,38],[59,41,58,39],[59,43,58,41,"maxDepth"],[59,51,58,49],[59,54,58,52],[59,55,58,53],[59,56,58,54],[59,58,58,56],[60,10,59,8],[60,17,59,15],[60,21,59,19],[61,8,60,6],[62,6,61,4],[63,6,62,4],[63,11,62,9],[63,15,62,13,"twoKey"],[63,21,62,19],[63,25,62,23,"two"],[63,28,62,26],[63,30,62,28],[64,8,63,6],[65,8,64,6],[66,8,65,6],[66,12,65,10,"one"],[66,15,65,13],[66,16,65,14,"twoKey"],[66,22,65,20],[66,23,65,21],[66,28,65,26,"undefined"],[66,37,65,35],[66,41,65,39,"two"],[66,44,65,42],[66,45,65,43,"twoKey"],[66,51,65,49],[66,52,65,50],[66,57,65,55,"undefined"],[66,66,65,64],[66,68,65,66],[67,10,66,8],[67,17,66,15],[67,21,66,19],[68,8,67,6],[69,6,68,4],[70,4,69,2],[71,4,70,2],[71,11,70,9],[71,16,70,14],[72,2,71,0],[72,3,71,1],[73,2,72,0],[73,6,72,4,"_default"],[73,14,72,12],[73,17,72,15,"exports"],[73,24,72,22],[73,25,72,23,"default"],[73,32,72,30],[73,35,72,33,"deepDiffer"],[73,45,72,43],[74,2,73,0,"module"],[74,8,73,6],[74,9,73,7,"exports"],[74,16,73,14],[74,19,73,17,"exports"],[74,26,73,24],[74,27,73,25,"default"],[74,34,73,32],[75,0,73,33],[75,3]],"functionMap":{"names":["<global>","deepDiffer"],"mappings":"AAA;iBCiB;CDqD"},"hasCjsExports":true},"type":"js/module"}]}