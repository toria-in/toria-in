{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":29,"index":44},"end":{"line":3,"column":84,"index":99}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"../../modules/isSelectionValid","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":47,"index":475},"end":{"line":11,"column":88,"index":516}}],"key":"DYfpsxQ23Vz8zpegiK5ul+2lWg8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.getLowestCommonAncestor = getLowestCommonAncestor;\n  exports.getResponderPaths = getResponderPaths;\n  exports.hasTargetTouches = hasTargetTouches;\n  exports.hasValidSelection = hasValidSelection;\n  exports.isPrimaryPointerDown = isPrimaryPointerDown;\n  exports.setResponderId = setResponderId;\n  var _isSelectionValid = _interopRequireDefault(require(_dependencyMap[1], \"../../modules/isSelectionValid\"));\n  /**\n   * Copyright (c) Nicolas Gallagher\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  var keyName = '__reactResponderId';\n  function getEventPath(domEvent) {\n    // The 'selectionchange' event always has the 'document' as the target.\n    // Use the anchor node as the initial target to reconstruct a path.\n    // (We actually only need the first \"responder\" node in practice.)\n    if (domEvent.type === 'selectionchange') {\n      var target = window.getSelection().anchorNode;\n      return composedPathFallback(target);\n    } else {\n      var path = domEvent.composedPath != null ? domEvent.composedPath() : composedPathFallback(domEvent.target);\n      return path;\n    }\n  }\n  function composedPathFallback(target) {\n    var path = [];\n    while (target != null && target !== document.body) {\n      path.push(target);\n      target = target.parentNode;\n    }\n    return path;\n  }\n\n  /**\n   * Retrieve the responderId from a host node\n   */\n  function getResponderId(node) {\n    if (node != null) {\n      return node[keyName];\n    }\n    return null;\n  }\n\n  /**\n   * Store the responderId on a host node\n   */\n  function setResponderId(node, id) {\n    if (node != null) {\n      node[keyName] = id;\n    }\n  }\n\n  /**\n   * Filter the event path to contain only the nodes attached to the responder system\n   */\n  function getResponderPaths(domEvent) {\n    var idPath = [];\n    var nodePath = [];\n    var eventPath = getEventPath(domEvent);\n    for (var i = 0; i < eventPath.length; i++) {\n      var node = eventPath[i];\n      var id = getResponderId(node);\n      if (id != null) {\n        idPath.push(id);\n        nodePath.push(node);\n      }\n    }\n    return {\n      idPath,\n      nodePath\n    };\n  }\n\n  /**\n   * Walk the paths and find the first common ancestor\n   */\n  function getLowestCommonAncestor(pathA, pathB) {\n    var pathALength = pathA.length;\n    var pathBLength = pathB.length;\n    if (\n    // If either path is empty\n    pathALength === 0 || pathBLength === 0 ||\n    // If the last elements aren't the same there can't be a common ancestor\n    // that is connected to the responder system\n    pathA[pathALength - 1] !== pathB[pathBLength - 1]) {\n      return null;\n    }\n    var itemA = pathA[0];\n    var indexA = 0;\n    var itemB = pathB[0];\n    var indexB = 0;\n\n    // If A is deeper, skip indices that can't match.\n    if (pathALength - pathBLength > 0) {\n      indexA = pathALength - pathBLength;\n      itemA = pathA[indexA];\n      pathALength = pathBLength;\n    }\n\n    // If B is deeper, skip indices that can't match\n    if (pathBLength - pathALength > 0) {\n      indexB = pathBLength - pathALength;\n      itemB = pathB[indexB];\n      pathBLength = pathALength;\n    }\n\n    // Walk in lockstep until a match is found\n    var depth = pathALength;\n    while (depth--) {\n      if (itemA === itemB) {\n        return itemA;\n      }\n      itemA = pathA[indexA++];\n      itemB = pathB[indexB++];\n    }\n    return null;\n  }\n\n  /**\n   * Determine whether any of the active touches are within the current responder.\n   * This cannot rely on W3C `targetTouches`, as neither IE11 nor Safari implement it.\n   */\n  function hasTargetTouches(target, touches) {\n    if (!touches || touches.length === 0) {\n      return false;\n    }\n    for (var i = 0; i < touches.length; i++) {\n      var node = touches[i].target;\n      if (node != null) {\n        if (target.contains(node)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Ignore 'selectionchange' events that don't correspond with a person's intent to\n   * select text.\n   */\n  function hasValidSelection(domEvent) {\n    if (domEvent.type === 'selectionchange') {\n      return (0, _isSelectionValid.default)();\n    }\n    return domEvent.type === 'select';\n  }\n\n  /**\n   * Events are only valid if the primary button was used without specific modifier keys.\n   */\n  function isPrimaryPointerDown(domEvent) {\n    var altKey = domEvent.altKey,\n      button = domEvent.button,\n      buttons = domEvent.buttons,\n      ctrlKey = domEvent.ctrlKey,\n      type = domEvent.type;\n    var isTouch = type === 'touchstart' || type === 'touchmove';\n    var isPrimaryMouseDown = type === 'mousedown' && (button === 0 || buttons === 1);\n    var isPrimaryMouseMove = type === 'mousemove' && buttons === 1;\n    var noModifiers = altKey === false && ctrlKey === false;\n    if (isTouch || isPrimaryMouseDown && noModifiers || isPrimaryMouseMove && noModifiers) {\n      return true;\n    }\n    return false;\n  }\n});","lineCount":177,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"_interopRequireDefault"],[4,28,3,26],[4,31,3,29,"require"],[4,38,3,36],[4,39,3,36,"_dependencyMap"],[4,53,3,36],[4,104,3,83],[4,105,3,84],[4,106,3,85,"default"],[4,113,3,92],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"__esModule"],[5,20,4,18],[5,23,4,21],[5,27,4,25],[6,2,5,0,"exports"],[6,9,5,7],[6,10,5,8,"getLowestCommonAncestor"],[6,33,5,31],[6,36,5,34,"getLowestCommonAncestor"],[6,59,5,57],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"getResponderPaths"],[7,27,6,25],[7,30,6,28,"getResponderPaths"],[7,47,6,45],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"hasTargetTouches"],[8,26,7,24],[8,29,7,27,"hasTargetTouches"],[8,45,7,43],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"hasValidSelection"],[9,27,8,25],[9,30,8,28,"hasValidSelection"],[9,47,8,45],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"isPrimaryPointerDown"],[10,30,9,28],[10,33,9,31,"isPrimaryPointerDown"],[10,53,9,51],[11,2,10,0,"exports"],[11,9,10,7],[11,10,10,8,"setResponderId"],[11,24,10,22],[11,27,10,25,"setResponderId"],[11,41,10,39],[12,2,11,0],[12,6,11,4,"_isSelectionValid"],[12,23,11,21],[12,26,11,24,"_interopRequireDefault"],[12,48,11,46],[12,49,11,47,"require"],[12,56,11,54],[12,57,11,54,"_dependencyMap"],[12,71,11,54],[12,108,11,87],[12,109,11,88],[12,110,11,89],[13,2,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[22,2,21,0],[22,6,21,4,"keyName"],[22,13,21,11],[22,16,21,14],[22,36,21,34],[23,2,22,0],[23,11,22,9,"getEventPath"],[23,23,22,21,"getEventPath"],[23,24,22,22,"domEvent"],[23,32,22,30],[23,34,22,32],[24,4,23,2],[25,4,24,2],[26,4,25,2],[27,4,26,2],[27,8,26,6,"domEvent"],[27,16,26,14],[27,17,26,15,"type"],[27,21,26,19],[27,26,26,24],[27,43,26,41],[27,45,26,43],[28,6,27,4],[28,10,27,8,"target"],[28,16,27,14],[28,19,27,17,"window"],[28,25,27,23],[28,26,27,24,"getSelection"],[28,38,27,36],[28,39,27,37],[28,40,27,38],[28,41,27,39,"anchorNode"],[28,51,27,49],[29,6,28,4],[29,13,28,11,"composedPathFallback"],[29,33,28,31],[29,34,28,32,"target"],[29,40,28,38],[29,41,28,39],[30,4,29,2],[30,5,29,3],[30,11,29,9],[31,6,30,4],[31,10,30,8,"path"],[31,14,30,12],[31,17,30,15,"domEvent"],[31,25,30,23],[31,26,30,24,"composedPath"],[31,38,30,36],[31,42,30,40],[31,46,30,44],[31,49,30,47,"domEvent"],[31,57,30,55],[31,58,30,56,"composedPath"],[31,70,30,68],[31,71,30,69],[31,72,30,70],[31,75,30,73,"composedPathFallback"],[31,95,30,93],[31,96,30,94,"domEvent"],[31,104,30,102],[31,105,30,103,"target"],[31,111,30,109],[31,112,30,110],[32,6,31,4],[32,13,31,11,"path"],[32,17,31,15],[33,4,32,2],[34,2,33,0],[35,2,34,0],[35,11,34,9,"composedPathFallback"],[35,31,34,29,"composedPathFallback"],[35,32,34,30,"target"],[35,38,34,36],[35,40,34,38],[36,4,35,2],[36,8,35,6,"path"],[36,12,35,10],[36,15,35,13],[36,17,35,15],[37,4,36,2],[37,11,36,9,"target"],[37,17,36,15],[37,21,36,19],[37,25,36,23],[37,29,36,27,"target"],[37,35,36,33],[37,40,36,38,"document"],[37,48,36,46],[37,49,36,47,"body"],[37,53,36,51],[37,55,36,53],[38,6,37,4,"path"],[38,10,37,8],[38,11,37,9,"push"],[38,15,37,13],[38,16,37,14,"target"],[38,22,37,20],[38,23,37,21],[39,6,38,4,"target"],[39,12,38,10],[39,15,38,13,"target"],[39,21,38,19],[39,22,38,20,"parentNode"],[39,32,38,30],[40,4,39,2],[41,4,40,2],[41,11,40,9,"path"],[41,15,40,13],[42,2,41,0],[44,2,43,0],[45,0,44,0],[46,0,45,0],[47,2,46,0],[47,11,46,9,"getResponderId"],[47,25,46,23,"getResponderId"],[47,26,46,24,"node"],[47,30,46,28],[47,32,46,30],[48,4,47,2],[48,8,47,6,"node"],[48,12,47,10],[48,16,47,14],[48,20,47,18],[48,22,47,20],[49,6,48,4],[49,13,48,11,"node"],[49,17,48,15],[49,18,48,16,"keyName"],[49,25,48,23],[49,26,48,24],[50,4,49,2],[51,4,50,2],[51,11,50,9],[51,15,50,13],[52,2,51,0],[54,2,53,0],[55,0,54,0],[56,0,55,0],[57,2,56,0],[57,11,56,9,"setResponderId"],[57,25,56,23,"setResponderId"],[57,26,56,24,"node"],[57,30,56,28],[57,32,56,30,"id"],[57,34,56,32],[57,36,56,34],[58,4,57,2],[58,8,57,6,"node"],[58,12,57,10],[58,16,57,14],[58,20,57,18],[58,22,57,20],[59,6,58,4,"node"],[59,10,58,8],[59,11,58,9,"keyName"],[59,18,58,16],[59,19,58,17],[59,22,58,20,"id"],[59,24,58,22],[60,4,59,2],[61,2,60,0],[63,2,62,0],[64,0,63,0],[65,0,64,0],[66,2,65,0],[66,11,65,9,"getResponderPaths"],[66,28,65,26,"getResponderPaths"],[66,29,65,27,"domEvent"],[66,37,65,35],[66,39,65,37],[67,4,66,2],[67,8,66,6,"idPath"],[67,14,66,12],[67,17,66,15],[67,19,66,17],[68,4,67,2],[68,8,67,6,"nodePath"],[68,16,67,14],[68,19,67,17],[68,21,67,19],[69,4,68,2],[69,8,68,6,"eventPath"],[69,17,68,15],[69,20,68,18,"getEventPath"],[69,32,68,30],[69,33,68,31,"domEvent"],[69,41,68,39],[69,42,68,40],[70,4,69,2],[70,9,69,7],[70,13,69,11,"i"],[70,14,69,12],[70,17,69,15],[70,18,69,16],[70,20,69,18,"i"],[70,21,69,19],[70,24,69,22,"eventPath"],[70,33,69,31],[70,34,69,32,"length"],[70,40,69,38],[70,42,69,40,"i"],[70,43,69,41],[70,45,69,43],[70,47,69,45],[71,6,70,4],[71,10,70,8,"node"],[71,14,70,12],[71,17,70,15,"eventPath"],[71,26,70,24],[71,27,70,25,"i"],[71,28,70,26],[71,29,70,27],[72,6,71,4],[72,10,71,8,"id"],[72,12,71,10],[72,15,71,13,"getResponderId"],[72,29,71,27],[72,30,71,28,"node"],[72,34,71,32],[72,35,71,33],[73,6,72,4],[73,10,72,8,"id"],[73,12,72,10],[73,16,72,14],[73,20,72,18],[73,22,72,20],[74,8,73,6,"idPath"],[74,14,73,12],[74,15,73,13,"push"],[74,19,73,17],[74,20,73,18,"id"],[74,22,73,20],[74,23,73,21],[75,8,74,6,"nodePath"],[75,16,74,14],[75,17,74,15,"push"],[75,21,74,19],[75,22,74,20,"node"],[75,26,74,24],[75,27,74,25],[76,6,75,4],[77,4,76,2],[78,4,77,2],[78,11,77,9],[79,6,78,4,"idPath"],[79,12,78,10],[80,6,79,4,"nodePath"],[81,4,80,2],[81,5,80,3],[82,2,81,0],[84,2,83,0],[85,0,84,0],[86,0,85,0],[87,2,86,0],[87,11,86,9,"getLowestCommonAncestor"],[87,34,86,32,"getLowestCommonAncestor"],[87,35,86,33,"pathA"],[87,40,86,38],[87,42,86,40,"pathB"],[87,47,86,45],[87,49,86,47],[88,4,87,2],[88,8,87,6,"pathALength"],[88,19,87,17],[88,22,87,20,"pathA"],[88,27,87,25],[88,28,87,26,"length"],[88,34,87,32],[89,4,88,2],[89,8,88,6,"pathBLength"],[89,19,88,17],[89,22,88,20,"pathB"],[89,27,88,25],[89,28,88,26,"length"],[89,34,88,32],[90,4,89,2],[91,4,90,2],[92,4,91,2,"pathALength"],[92,15,91,13],[92,20,91,18],[92,21,91,19],[92,25,91,23,"pathBLength"],[92,36,91,34],[92,41,91,39],[92,42,91,40],[93,4,92,2],[94,4,93,2],[95,4,94,2,"pathA"],[95,9,94,7],[95,10,94,8,"pathALength"],[95,21,94,19],[95,24,94,22],[95,25,94,23],[95,26,94,24],[95,31,94,29,"pathB"],[95,36,94,34],[95,37,94,35,"pathBLength"],[95,48,94,46],[95,51,94,49],[95,52,94,50],[95,53,94,51],[95,55,94,53],[96,6,95,4],[96,13,95,11],[96,17,95,15],[97,4,96,2],[98,4,97,2],[98,8,97,6,"itemA"],[98,13,97,11],[98,16,97,14,"pathA"],[98,21,97,19],[98,22,97,20],[98,23,97,21],[98,24,97,22],[99,4,98,2],[99,8,98,6,"indexA"],[99,14,98,12],[99,17,98,15],[99,18,98,16],[100,4,99,2],[100,8,99,6,"itemB"],[100,13,99,11],[100,16,99,14,"pathB"],[100,21,99,19],[100,22,99,20],[100,23,99,21],[100,24,99,22],[101,4,100,2],[101,8,100,6,"indexB"],[101,14,100,12],[101,17,100,15],[101,18,100,16],[103,4,102,2],[104,4,103,2],[104,8,103,6,"pathALength"],[104,19,103,17],[104,22,103,20,"pathBLength"],[104,33,103,31],[104,36,103,34],[104,37,103,35],[104,39,103,37],[105,6,104,4,"indexA"],[105,12,104,10],[105,15,104,13,"pathALength"],[105,26,104,24],[105,29,104,27,"pathBLength"],[105,40,104,38],[106,6,105,4,"itemA"],[106,11,105,9],[106,14,105,12,"pathA"],[106,19,105,17],[106,20,105,18,"indexA"],[106,26,105,24],[106,27,105,25],[107,6,106,4,"pathALength"],[107,17,106,15],[107,20,106,18,"pathBLength"],[107,31,106,29],[108,4,107,2],[110,4,109,2],[111,4,110,2],[111,8,110,6,"pathBLength"],[111,19,110,17],[111,22,110,20,"pathALength"],[111,33,110,31],[111,36,110,34],[111,37,110,35],[111,39,110,37],[112,6,111,4,"indexB"],[112,12,111,10],[112,15,111,13,"pathBLength"],[112,26,111,24],[112,29,111,27,"pathALength"],[112,40,111,38],[113,6,112,4,"itemB"],[113,11,112,9],[113,14,112,12,"pathB"],[113,19,112,17],[113,20,112,18,"indexB"],[113,26,112,24],[113,27,112,25],[114,6,113,4,"pathBLength"],[114,17,113,15],[114,20,113,18,"pathALength"],[114,31,113,29],[115,4,114,2],[117,4,116,2],[118,4,117,2],[118,8,117,6,"depth"],[118,13,117,11],[118,16,117,14,"pathALength"],[118,27,117,25],[119,4,118,2],[119,11,118,9,"depth"],[119,16,118,14],[119,18,118,16],[119,20,118,18],[120,6,119,4],[120,10,119,8,"itemA"],[120,15,119,13],[120,20,119,18,"itemB"],[120,25,119,23],[120,27,119,25],[121,8,120,6],[121,15,120,13,"itemA"],[121,20,120,18],[122,6,121,4],[123,6,122,4,"itemA"],[123,11,122,9],[123,14,122,12,"pathA"],[123,19,122,17],[123,20,122,18,"indexA"],[123,26,122,24],[123,28,122,26],[123,29,122,27],[124,6,123,4,"itemB"],[124,11,123,9],[124,14,123,12,"pathB"],[124,19,123,17],[124,20,123,18,"indexB"],[124,26,123,24],[124,28,123,26],[124,29,123,27],[125,4,124,2],[126,4,125,2],[126,11,125,9],[126,15,125,13],[127,2,126,0],[129,2,128,0],[130,0,129,0],[131,0,130,0],[132,0,131,0],[133,2,132,0],[133,11,132,9,"hasTargetTouches"],[133,27,132,25,"hasTargetTouches"],[133,28,132,26,"target"],[133,34,132,32],[133,36,132,34,"touches"],[133,43,132,41],[133,45,132,43],[134,4,133,2],[134,8,133,6],[134,9,133,7,"touches"],[134,16,133,14],[134,20,133,18,"touches"],[134,27,133,25],[134,28,133,26,"length"],[134,34,133,32],[134,39,133,37],[134,40,133,38],[134,42,133,40],[135,6,134,4],[135,13,134,11],[135,18,134,16],[136,4,135,2],[137,4,136,2],[137,9,136,7],[137,13,136,11,"i"],[137,14,136,12],[137,17,136,15],[137,18,136,16],[137,20,136,18,"i"],[137,21,136,19],[137,24,136,22,"touches"],[137,31,136,29],[137,32,136,30,"length"],[137,38,136,36],[137,40,136,38,"i"],[137,41,136,39],[137,43,136,41],[137,45,136,43],[138,6,137,4],[138,10,137,8,"node"],[138,14,137,12],[138,17,137,15,"touches"],[138,24,137,22],[138,25,137,23,"i"],[138,26,137,24],[138,27,137,25],[138,28,137,26,"target"],[138,34,137,32],[139,6,138,4],[139,10,138,8,"node"],[139,14,138,12],[139,18,138,16],[139,22,138,20],[139,24,138,22],[140,8,139,6],[140,12,139,10,"target"],[140,18,139,16],[140,19,139,17,"contains"],[140,27,139,25],[140,28,139,26,"node"],[140,32,139,30],[140,33,139,31],[140,35,139,33],[141,10,140,8],[141,17,140,15],[141,21,140,19],[142,8,141,6],[143,6,142,4],[144,4,143,2],[145,4,144,2],[145,11,144,9],[145,16,144,14],[146,2,145,0],[148,2,147,0],[149,0,148,0],[150,0,149,0],[151,0,150,0],[152,2,151,0],[152,11,151,9,"hasValidSelection"],[152,28,151,26,"hasValidSelection"],[152,29,151,27,"domEvent"],[152,37,151,35],[152,39,151,37],[153,4,152,2],[153,8,152,6,"domEvent"],[153,16,152,14],[153,17,152,15,"type"],[153,21,152,19],[153,26,152,24],[153,43,152,41],[153,45,152,43],[154,6,153,4],[154,13,153,11],[154,14,153,12],[154,15,153,13],[154,17,153,15,"_isSelectionValid"],[154,34,153,32],[154,35,153,33,"default"],[154,42,153,40],[154,44,153,42],[154,45,153,43],[155,4,154,2],[156,4,155,2],[156,11,155,9,"domEvent"],[156,19,155,17],[156,20,155,18,"type"],[156,24,155,22],[156,29,155,27],[156,37,155,35],[157,2,156,0],[159,2,158,0],[160,0,159,0],[161,0,160,0],[162,2,161,0],[162,11,161,9,"isPrimaryPointerDown"],[162,31,161,29,"isPrimaryPointerDown"],[162,32,161,30,"domEvent"],[162,40,161,38],[162,42,161,40],[163,4,162,2],[163,8,162,6,"altKey"],[163,14,162,12],[163,17,162,15,"domEvent"],[163,25,162,23],[163,26,162,24,"altKey"],[163,32,162,30],[164,6,163,4,"button"],[164,12,163,10],[164,15,163,13,"domEvent"],[164,23,163,21],[164,24,163,22,"button"],[164,30,163,28],[165,6,164,4,"buttons"],[165,13,164,11],[165,16,164,14,"domEvent"],[165,24,164,22],[165,25,164,23,"buttons"],[165,32,164,30],[166,6,165,4,"ctrlKey"],[166,13,165,11],[166,16,165,14,"domEvent"],[166,24,165,22],[166,25,165,23,"ctrlKey"],[166,32,165,30],[167,6,166,4,"type"],[167,10,166,8],[167,13,166,11,"domEvent"],[167,21,166,19],[167,22,166,20,"type"],[167,26,166,24],[168,4,167,2],[168,8,167,6,"isTouch"],[168,15,167,13],[168,18,167,16,"type"],[168,22,167,20],[168,27,167,25],[168,39,167,37],[168,43,167,41,"type"],[168,47,167,45],[168,52,167,50],[168,63,167,61],[169,4,168,2],[169,8,168,6,"isPrimaryMouseDown"],[169,26,168,24],[169,29,168,27,"type"],[169,33,168,31],[169,38,168,36],[169,49,168,47],[169,54,168,52,"button"],[169,60,168,58],[169,65,168,63],[169,66,168,64],[169,70,168,68,"buttons"],[169,77,168,75],[169,82,168,80],[169,83,168,81],[169,84,168,82],[170,4,169,2],[170,8,169,6,"isPrimaryMouseMove"],[170,26,169,24],[170,29,169,27,"type"],[170,33,169,31],[170,38,169,36],[170,49,169,47],[170,53,169,51,"buttons"],[170,60,169,58],[170,65,169,63],[170,66,169,64],[171,4,170,2],[171,8,170,6,"noModifiers"],[171,19,170,17],[171,22,170,20,"altKey"],[171,28,170,26],[171,33,170,31],[171,38,170,36],[171,42,170,40,"ctrlKey"],[171,49,170,47],[171,54,170,52],[171,59,170,57],[172,4,171,2],[172,8,171,6,"isTouch"],[172,15,171,13],[172,19,171,17,"isPrimaryMouseDown"],[172,37,171,35],[172,41,171,39,"noModifiers"],[172,52,171,50],[172,56,171,54,"isPrimaryMouseMove"],[172,74,171,72],[172,78,171,76,"noModifiers"],[172,89,171,87],[172,91,171,89],[173,6,172,4],[173,13,172,11],[173,17,172,15],[174,4,173,2],[175,4,174,2],[175,11,174,9],[175,16,174,14],[176,2,175,0],[177,0,175,1],[177,3]],"functionMap":{"names":["<global>","getEventPath","composedPathFallback","getResponderId","setResponderId","getResponderPaths","getLowestCommonAncestor","hasTargetTouches","hasValidSelection","isPrimaryPointerDown"],"mappings":"AAA;ACqB;CDW;AEC;CFO;AGK;CHK;AIK;CJI;AKK;CLgB;AMK;CNwC;AOM;CPa;AQM;CRK;ASK"},"hasCjsExports":true},"type":"js/module"}]}