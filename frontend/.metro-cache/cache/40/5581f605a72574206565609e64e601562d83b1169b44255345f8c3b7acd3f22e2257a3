{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.VelocityTracker = void 0;\n  /**\n   * Tracks and calculates velocity for scroll/drag movements\n   * Used to determine momentum scrolling behavior\n   */\n  var VelocityTracker = /** @class */function () {\n    function VelocityTracker() {\n      /** Timestamp of the last velocity update */\n      this.lastUpdateTime = Date.now();\n      /** Current velocity vector with x and y components */\n      this.velocity = {\n        x: 0,\n        y: 0\n      };\n      /** Reference to the momentum end timeout */\n      this.timeoutId = null;\n    }\n    /**\n     * Calculates velocity based on position change over time\n     * @param newOffset Current position value\n     * @param oldOffset Previous position value\n     * @param isHorizontal Whether movement is horizontal (true) or vertical (false)\n     * @param isRTL Whether layout direction is right-to-left\n     * @param callback Function to call with velocity updates and momentum end signal\n     */\n    VelocityTracker.prototype.computeVelocity = function (newOffset, oldOffset, isHorizontal, callback) {\n      var _this = this;\n      // Clear any pending momentum end timeout\n      this.cleanUp();\n      // Calculate time since last update\n      var currentTime = Date.now();\n      var timeSinceLastUpdate = Math.max(1, currentTime - this.lastUpdateTime);\n      // Calculate velocity as distance/time\n      var newVelocity = (newOffset - oldOffset) / timeSinceLastUpdate;\n      // console.log(\n      //   \"newVelocity\",\n      //   newOffset,\n      //   oldOffset,\n      //   currentTime,\n      //   this.lastUpdateTime,\n      //   timeSinceLastUpdate,\n      //   newVelocity\n      // );\n      this.lastUpdateTime = currentTime;\n      // Apply velocity to the correct axis\n      this.velocity.x = isHorizontal ? newVelocity : 0;\n      this.velocity.y = isHorizontal ? 0 : newVelocity;\n      // Trigger callback with current velocity\n      callback(this.velocity, false);\n      // Set timeout to signal momentum end after 100ms of no updates\n      this.timeoutId = setTimeout(function () {\n        _this.cleanUp();\n        _this.lastUpdateTime = Date.now();\n        _this.velocity.x = 0;\n        _this.velocity.y = 0;\n        callback(_this.velocity, true);\n      }, 100);\n    };\n    /**\n     * Cleans up resources by clearing any pending timeout\n     */\n    VelocityTracker.prototype.cleanUp = function () {\n      if (this.timeoutId !== null) {\n        clearTimeout(this.timeoutId);\n        this.timeoutId = null;\n      }\n    };\n    return VelocityTracker;\n  }();\n  exports.VelocityTracker = VelocityTracker;\n});","lineCount":77,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"VelocityTracker"],[7,25,3,23],[7,28,3,26],[7,33,3,31],[7,34,3,32],[8,2,4,0],[9,0,5,0],[10,0,6,0],[11,0,7,0],[12,2,8,0],[12,6,8,4,"VelocityTracker"],[12,21,8,19],[12,24,8,22],[12,37,8,37],[12,49,8,49],[13,4,9,4],[13,13,9,13,"VelocityTracker"],[13,28,9,28,"VelocityTracker"],[13,29,9,28],[13,31,9,31],[14,6,10,8],[15,6,11,8],[15,10,11,12],[15,11,11,13,"lastUpdateTime"],[15,25,11,27],[15,28,11,30,"Date"],[15,32,11,34],[15,33,11,35,"now"],[15,36,11,38],[15,37,11,39],[15,38,11,40],[16,6,12,8],[17,6,13,8],[17,10,13,12],[17,11,13,13,"velocity"],[17,19,13,21],[17,22,13,24],[18,8,13,26,"x"],[18,9,13,27],[18,11,13,29],[18,12,13,30],[19,8,13,32,"y"],[19,9,13,33],[19,11,13,35],[20,6,13,37],[20,7,13,38],[21,6,14,8],[22,6,15,8],[22,10,15,12],[22,11,15,13,"timeoutId"],[22,20,15,22],[22,23,15,25],[22,27,15,29],[23,4,16,4],[24,4,17,4],[25,0,18,0],[26,0,19,0],[27,0,20,0],[28,0,21,0],[29,0,22,0],[30,0,23,0],[31,0,24,0],[32,4,25,4,"VelocityTracker"],[32,19,25,19],[32,20,25,20,"prototype"],[32,29,25,29],[32,30,25,30,"computeVelocity"],[32,45,25,45],[32,48,25,48],[32,58,25,58,"newOffset"],[32,67,25,67],[32,69,25,69,"oldOffset"],[32,78,25,78],[32,80,25,80,"isHorizontal"],[32,92,25,92],[32,94,25,94,"callback"],[32,102,25,102],[32,104,25,104],[33,6,26,8],[33,10,26,12,"_this"],[33,15,26,17],[33,18,26,20],[33,22,26,24],[34,6,27,8],[35,6,28,8],[35,10,28,12],[35,11,28,13,"cleanUp"],[35,18,28,20],[35,19,28,21],[35,20,28,22],[36,6,29,8],[37,6,30,8],[37,10,30,12,"currentTime"],[37,21,30,23],[37,24,30,26,"Date"],[37,28,30,30],[37,29,30,31,"now"],[37,32,30,34],[37,33,30,35],[37,34,30,36],[38,6,31,8],[38,10,31,12,"timeSinceLastUpdate"],[38,29,31,31],[38,32,31,34,"Math"],[38,36,31,38],[38,37,31,39,"max"],[38,40,31,42],[38,41,31,43],[38,42,31,44],[38,44,31,46,"currentTime"],[38,55,31,57],[38,58,31,60],[38,62,31,64],[38,63,31,65,"lastUpdateTime"],[38,77,31,79],[38,78,31,80],[39,6,32,8],[40,6,33,8],[40,10,33,12,"newVelocity"],[40,21,33,23],[40,24,33,26],[40,25,33,27,"newOffset"],[40,34,33,36],[40,37,33,39,"oldOffset"],[40,46,33,48],[40,50,33,52,"timeSinceLastUpdate"],[40,69,33,71],[41,6,34,8],[42,6,35,8],[43,6,36,8],[44,6,37,8],[45,6,38,8],[46,6,39,8],[47,6,40,8],[48,6,41,8],[49,6,42,8],[50,6,43,8],[50,10,43,12],[50,11,43,13,"lastUpdateTime"],[50,25,43,27],[50,28,43,30,"currentTime"],[50,39,43,41],[51,6,44,8],[52,6,45,8],[52,10,45,12],[52,11,45,13,"velocity"],[52,19,45,21],[52,20,45,22,"x"],[52,21,45,23],[52,24,45,26,"isHorizontal"],[52,36,45,38],[52,39,45,41,"newVelocity"],[52,50,45,52],[52,53,45,55],[52,54,45,56],[53,6,46,8],[53,10,46,12],[53,11,46,13,"velocity"],[53,19,46,21],[53,20,46,22,"y"],[53,21,46,23],[53,24,46,26,"isHorizontal"],[53,36,46,38],[53,39,46,41],[53,40,46,42],[53,43,46,45,"newVelocity"],[53,54,46,56],[54,6,47,8],[55,6,48,8,"callback"],[55,14,48,16],[55,15,48,17],[55,19,48,21],[55,20,48,22,"velocity"],[55,28,48,30],[55,30,48,32],[55,35,48,37],[55,36,48,38],[56,6,49,8],[57,6,50,8],[57,10,50,12],[57,11,50,13,"timeoutId"],[57,20,50,22],[57,23,50,25,"setTimeout"],[57,33,50,35],[57,34,50,36],[57,46,50,48],[58,8,51,12,"_this"],[58,13,51,17],[58,14,51,18,"cleanUp"],[58,21,51,25],[58,22,51,26],[58,23,51,27],[59,8,52,12,"_this"],[59,13,52,17],[59,14,52,18,"lastUpdateTime"],[59,28,52,32],[59,31,52,35,"Date"],[59,35,52,39],[59,36,52,40,"now"],[59,39,52,43],[59,40,52,44],[59,41,52,45],[60,8,53,12,"_this"],[60,13,53,17],[60,14,53,18,"velocity"],[60,22,53,26],[60,23,53,27,"x"],[60,24,53,28],[60,27,53,31],[60,28,53,32],[61,8,54,12,"_this"],[61,13,54,17],[61,14,54,18,"velocity"],[61,22,54,26],[61,23,54,27,"y"],[61,24,54,28],[61,27,54,31],[61,28,54,32],[62,8,55,12,"callback"],[62,16,55,20],[62,17,55,21,"_this"],[62,22,55,26],[62,23,55,27,"velocity"],[62,31,55,35],[62,33,55,37],[62,37,55,41],[62,38,55,42],[63,6,56,8],[63,7,56,9],[63,9,56,11],[63,12,56,14],[63,13,56,15],[64,4,57,4],[64,5,57,5],[65,4,58,4],[66,0,59,0],[67,0,60,0],[68,4,61,4,"VelocityTracker"],[68,19,61,19],[68,20,61,20,"prototype"],[68,29,61,29],[68,30,61,30,"cleanUp"],[68,37,61,37],[68,40,61,40],[68,52,61,52],[69,6,62,8],[69,10,62,12],[69,14,62,16],[69,15,62,17,"timeoutId"],[69,24,62,26],[69,29,62,31],[69,33,62,35],[69,35,62,37],[70,8,63,12,"clearTimeout"],[70,20,63,24],[70,21,63,25],[70,25,63,29],[70,26,63,30,"timeoutId"],[70,35,63,39],[70,36,63,40],[71,8,64,12],[71,12,64,16],[71,13,64,17,"timeoutId"],[71,22,64,26],[71,25,64,29],[71,29,64,33],[72,6,65,8],[73,4,66,4],[73,5,66,5],[74,4,67,4],[74,11,67,11,"VelocityTracker"],[74,26,67,26],[75,2,68,0],[75,3,68,1],[75,4,68,2],[75,5,68,4],[76,2,69,0,"exports"],[76,9,69,7],[76,10,69,8,"VelocityTracker"],[76,25,69,23],[76,28,69,26,"VelocityTracker"],[76,43,69,41],[77,0,69,42],[77,3]],"functionMap":{"names":["<global>","<anonymous>","VelocityTracker","prototype.computeVelocity","setTimeout$argument_0","prototype.cleanUp"],"mappings":"AAA;qCCO;ICC;KDO;gDES;oCCyB;SDM;KFC;wCII;KJK;CDE"},"hasCjsExports":true},"type":"js/module"}]}