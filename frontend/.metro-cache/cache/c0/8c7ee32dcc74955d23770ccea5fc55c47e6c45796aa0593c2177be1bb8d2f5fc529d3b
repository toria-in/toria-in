{"dependencies":[{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":14,"index":138},"end":{"line":4,"column":30,"index":154}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useDataMultiplier = useDataMultiplier;\n  var tslib_1 = require(_dependencyMap[0], \"tslib\");\n  /**\n   * Increases the data size by duplicating it, it's kept in hook format so that in future we can add auto pagination support.\n   * If you're using this with FlatList then make sure you remove `keyExtractor` because this method might duplicate ids that might be in the data.\n   * @param data The data to duplicate\n   * @param count Final count of data to be returned from this hook\n   * @returns Multiplied data.\n   */\n  function useDataMultiplier(data, count) {\n    var len = data.length;\n    var arr = new Array(count);\n    var isObject = false;\n    if (typeof data[0] === \"object\") {\n      isObject = true;\n    }\n    for (var i = 0; i < count; i++) {\n      arr[i] = isObject ? tslib_1.__assign({}, data[i % len]) : data[i % len];\n    }\n    return [arr];\n  }\n});","lineCount":28,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"useDataMultiplier"],[7,27,3,25],[7,30,3,28,"useDataMultiplier"],[7,47,3,45],[8,2,4,0],[8,6,4,4,"tslib_1"],[8,13,4,11],[8,16,4,14,"require"],[8,23,4,21],[8,24,4,21,"_dependencyMap"],[8,38,4,21],[8,50,4,29],[8,51,4,30],[9,2,5,0],[10,0,6,0],[11,0,7,0],[12,0,8,0],[13,0,9,0],[14,0,10,0],[15,0,11,0],[16,2,12,0],[16,11,12,9,"useDataMultiplier"],[16,28,12,26,"useDataMultiplier"],[16,29,12,27,"data"],[16,33,12,31],[16,35,12,33,"count"],[16,40,12,38],[16,42,12,40],[17,4,13,4],[17,8,13,8,"len"],[17,11,13,11],[17,14,13,14,"data"],[17,18,13,18],[17,19,13,19,"length"],[17,25,13,25],[18,4,14,4],[18,8,14,8,"arr"],[18,11,14,11],[18,14,14,14],[18,18,14,18,"Array"],[18,23,14,23],[18,24,14,24,"count"],[18,29,14,29],[18,30,14,30],[19,4,15,4],[19,8,15,8,"isObject"],[19,16,15,16],[19,19,15,19],[19,24,15,24],[20,4,16,4],[20,8,16,8],[20,15,16,15,"data"],[20,19,16,19],[20,20,16,20],[20,21,16,21],[20,22,16,22],[20,27,16,27],[20,35,16,35],[20,37,16,37],[21,6,17,8,"isObject"],[21,14,17,16],[21,17,17,19],[21,21,17,23],[22,4,18,4],[23,4,19,4],[23,9,19,9],[23,13,19,13,"i"],[23,14,19,14],[23,17,19,17],[23,18,19,18],[23,20,19,20,"i"],[23,21,19,21],[23,24,19,24,"count"],[23,29,19,29],[23,31,19,31,"i"],[23,32,19,32],[23,34,19,34],[23,36,19,36],[24,6,20,8,"arr"],[24,9,20,11],[24,10,20,12,"i"],[24,11,20,13],[24,12,20,14],[24,15,20,17,"isObject"],[24,23,20,25],[24,26,20,28,"tslib_1"],[24,33,20,35],[24,34,20,36,"__assign"],[24,42,20,44],[24,43,20,45],[24,44,20,46],[24,45,20,47],[24,47,20,49,"data"],[24,51,20,53],[24,52,20,54,"i"],[24,53,20,55],[24,56,20,58,"len"],[24,59,20,61],[24,60,20,62],[24,61,20,63],[24,64,20,66,"data"],[24,68,20,70],[24,69,20,71,"i"],[24,70,20,72],[24,73,20,75,"len"],[24,76,20,78],[24,77,20,79],[25,4,21,4],[26,4,22,4],[26,11,22,11],[26,12,22,12,"arr"],[26,15,22,15],[26,16,22,16],[27,2,23,0],[28,0,23,1],[28,3]],"functionMap":{"names":["<global>","useDataMultiplier"],"mappings":"AAA;ACW;CDW"},"hasCjsExports":true},"type":"js/module"}]}