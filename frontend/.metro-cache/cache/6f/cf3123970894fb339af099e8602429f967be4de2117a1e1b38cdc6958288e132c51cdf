{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":4,"column":0,"index":36},"end":{"line":4,"column":31,"index":67}}],"key":"RtGiGa+/H7VrI7GDQDLhO1UbpU8=","exportNames":["*"],"imports":1}},{"name":"@tanstack/query-core","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":5,"column":0,"index":68},"end":{"line":10,"column":30,"index":167}}],"key":"GAsr4MDTe9ve1mRxgvML4iY2BZg=","exportNames":["*"],"imports":1}},{"name":"./QueryClientProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":168},"end":{"line":11,"column":58,"index":226}}],"key":"R2Cn87b3k6V9pZdY+hWd8Ft8C58=","exportNames":["*"],"imports":1}},{"name":"./IsRestoringProvider.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":227},"end":{"line":12,"column":58,"index":285}}],"key":"LsIgHmr91y5USktZ56HoA6qLNhc=","exportNames":["*"],"imports":1}},{"name":"./QueryErrorResetBoundary.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":13,"column":0,"index":286},"end":{"line":13,"column":74,"index":360}}],"key":"v0npNLmYOKsdEK0iJ4RVpe647XQ=","exportNames":["*"],"imports":1}},{"name":"./errorBoundaryUtils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":14,"column":0,"index":361},"end":{"line":18,"column":33,"index":482}}],"key":"vPVIYzX/U31yYyVDl4UaADFDRRQ=","exportNames":["*"],"imports":1}},{"name":"./suspense.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":19,"column":0,"index":483},"end":{"line":24,"column":23,"index":587}}],"key":"0Q+BFfol1+EurGmLVTwxCgLGwZ8=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use client\";\n\n  // src/useQueries.ts\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopNamespace(e) {\n    if (e && e.__esModule) return e;\n    var n = {};\n    if (e) Object.keys(e).forEach(function (k) {\n      var d = Object.getOwnPropertyDescriptor(e, k);\n      Object.defineProperty(n, k, d.get ? d : {\n        enumerable: true,\n        get: function () {\n          return e[k];\n        }\n      });\n    });\n    n.default = e;\n    return n;\n  }\n  Object.defineProperty(exports, \"useQueries\", {\n    enumerable: true,\n    get: function () {\n      return useQueries;\n    }\n  });\n  var _react = require(_dependencyMap[0], \"react\");\n  var React = _interopNamespace(_react);\n  var _tanstackQueryCore = require(_dependencyMap[1], \"@tanstack/query-core\");\n  var _QueryClientProviderJs = require(_dependencyMap[2], \"./QueryClientProvider.js\");\n  var _IsRestoringProviderJs = require(_dependencyMap[3], \"./IsRestoringProvider.js\");\n  var _QueryErrorResetBoundaryJs = require(_dependencyMap[4], \"./QueryErrorResetBoundary.js\");\n  var _errorBoundaryUtilsJs = require(_dependencyMap[5], \"./errorBoundaryUtils.js\");\n  var _suspenseJs = require(_dependencyMap[6], \"./suspense.js\");\n  function useQueries({\n    queries,\n    ...options\n  }, queryClient) {\n    const client = (0, _QueryClientProviderJs.useQueryClient)(queryClient);\n    const isRestoring = (0, _IsRestoringProviderJs.useIsRestoring)();\n    const errorResetBoundary = (0, _QueryErrorResetBoundaryJs.useQueryErrorResetBoundary)();\n    const defaultedQueries = React.useMemo(() => queries.map(opts => {\n      const defaultedOptions = client.defaultQueryOptions(opts);\n      defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n      return defaultedOptions;\n    }), [queries, client, isRestoring]);\n    defaultedQueries.forEach(query => {\n      (0, _suspenseJs.ensureSuspenseTimers)(query);\n      (0, _errorBoundaryUtilsJs.ensurePreventErrorBoundaryRetry)(query, errorResetBoundary);\n    });\n    (0, _errorBoundaryUtilsJs.useClearResetErrorBoundary)(errorResetBoundary);\n    const [observer] = React.useState(() => new _tanstackQueryCore.QueriesObserver(client, defaultedQueries, options));\n    const [optimisticResult, getCombinedResult, trackResult] = observer.getOptimisticResult(defaultedQueries, options.combine);\n    const shouldSubscribe = !isRestoring && options.subscribed !== false;\n    React.useSyncExternalStore(React.useCallback(onStoreChange => shouldSubscribe ? observer.subscribe(_tanstackQueryCore.notifyManager.batchCalls(onStoreChange)) : _tanstackQueryCore.noop, [observer, shouldSubscribe]), () => observer.getCurrentResult(), () => observer.getCurrentResult());\n    React.useEffect(() => {\n      observer.setQueries(defaultedQueries, options);\n    }, [defaultedQueries, options, observer]);\n    const shouldAtLeastOneSuspend = optimisticResult.some((result, index) => (0, _suspenseJs.shouldSuspend)(defaultedQueries[index], result));\n    const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n      const opts = defaultedQueries[index];\n      if (opts) {\n        const queryObserver = new _tanstackQueryCore.QueryObserver(client, opts);\n        if ((0, _suspenseJs.shouldSuspend)(opts, result)) {\n          return (0, _suspenseJs.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        } else if ((0, _suspenseJs.willFetch)(result, isRestoring)) {\n          void (0, _suspenseJs.fetchOptimistic)(opts, queryObserver, errorResetBoundary);\n        }\n      }\n      return [];\n    }) : [];\n    if (suspensePromises.length > 0) {\n      throw Promise.all(suspensePromises);\n    }\n    const firstSingleResultWhichShouldThrow = optimisticResult.find((result, index) => {\n      const query = defaultedQueries[index];\n      return query && (0, _errorBoundaryUtilsJs.getHasError)({\n        result,\n        errorResetBoundary,\n        throwOnError: query.throwOnError,\n        query: client.getQueryCache().get(query.queryHash),\n        suspense: query.suspense\n      });\n    });\n    if (firstSingleResultWhichShouldThrow?.error) {\n      throw firstSingleResultWhichShouldThrow.error;\n    }\n    return getCombinedResult(trackResult());\n  }\n});","lineCount":94,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,2,3,0],[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"value"],[8,9,3,0],[9,2,3,0],[10,2,3,0],[10,11,3,0,"_interopNamespace"],[10,29,3,0,"e"],[10,30,3,0],[11,4,3,0],[11,8,3,0,"e"],[11,9,3,0],[11,13,3,0,"e"],[11,14,3,0],[11,15,3,0,"__esModule"],[11,25,3,0],[11,34,3,0,"e"],[11,35,3,0],[12,4,3,0],[12,8,3,0,"n"],[12,9,3,0],[13,4,3,0],[13,8,3,0,"e"],[13,9,3,0],[13,11,3,0,"Object"],[13,17,3,0],[13,18,3,0,"keys"],[13,22,3,0],[13,23,3,0,"e"],[13,24,3,0],[13,26,3,0,"forEach"],[13,33,3,0],[13,44,3,0,"k"],[13,45,3,0],[14,6,3,0],[14,10,3,0,"d"],[14,11,3,0],[14,14,3,0,"Object"],[14,20,3,0],[14,21,3,0,"getOwnPropertyDescriptor"],[14,45,3,0],[14,46,3,0,"e"],[14,47,3,0],[14,49,3,0,"k"],[14,50,3,0],[15,6,3,0,"Object"],[15,12,3,0],[15,13,3,0,"defineProperty"],[15,27,3,0],[15,28,3,0,"n"],[15,29,3,0],[15,31,3,0,"k"],[15,32,3,0],[15,34,3,0,"d"],[15,35,3,0],[15,36,3,0,"get"],[15,39,3,0],[15,42,3,0,"d"],[15,43,3,0],[16,8,3,0,"enumerable"],[16,18,3,0],[17,8,3,0,"get"],[17,11,3,0],[17,22,3,0,"get"],[17,23,3,0],[18,10,3,0],[18,17,3,0,"e"],[18,18,3,0],[18,19,3,0,"k"],[18,20,3,0],[19,8,3,0],[20,6,3,0],[21,4,3,0],[22,4,3,0,"n"],[22,5,3,0],[22,6,3,0,"default"],[22,13,3,0],[22,16,3,0,"e"],[22,17,3,0],[23,4,3,0],[23,11,3,0,"n"],[23,12,3,0],[24,2,3,0],[25,2,108,0,"Object"],[25,8,108,0],[25,9,108,0,"defineProperty"],[25,23,108,0],[25,24,108,0,"exports"],[25,31,108,0],[26,4,108,0,"enumerable"],[26,14,108,0],[27,4,108,0,"get"],[27,7,108,0],[27,18,108,0,"get"],[27,19,108,0],[28,6,108,0],[28,13,109,2,"useQueries"],[28,23,109,12],[29,4,109,12],[30,2,109,12],[31,2,4,0],[31,6,4,0,"_react"],[31,12,4,0],[31,15,4,0,"require"],[31,22,4,0],[31,23,4,0,"_dependencyMap"],[31,37,4,0],[32,2,4,0],[32,6,4,0,"React"],[32,11,4,0],[32,14,4,0,"_interopNamespace"],[32,31,4,0],[32,32,4,0,"_react"],[32,38,4,0],[33,2,5,0],[33,6,5,0,"_tanstackQueryCore"],[33,24,5,0],[33,27,5,0,"require"],[33,34,5,0],[33,35,5,0,"_dependencyMap"],[33,49,5,0],[34,2,11,0],[34,6,11,0,"_QueryClientProviderJs"],[34,28,11,0],[34,31,11,0,"require"],[34,38,11,0],[34,39,11,0,"_dependencyMap"],[34,53,11,0],[35,2,12,0],[35,6,12,0,"_IsRestoringProviderJs"],[35,28,12,0],[35,31,12,0,"require"],[35,38,12,0],[35,39,12,0,"_dependencyMap"],[35,53,12,0],[36,2,13,0],[36,6,13,0,"_QueryErrorResetBoundaryJs"],[36,32,13,0],[36,35,13,0,"require"],[36,42,13,0],[36,43,13,0,"_dependencyMap"],[36,57,13,0],[37,2,14,0],[37,6,14,0,"_errorBoundaryUtilsJs"],[37,27,14,0],[37,30,14,0,"require"],[37,37,14,0],[37,38,14,0,"_dependencyMap"],[37,52,14,0],[38,2,19,0],[38,6,19,0,"_suspenseJs"],[38,17,19,0],[38,20,19,0,"require"],[38,27,19,0],[38,28,19,0,"_dependencyMap"],[38,42,19,0],[39,2,25,0],[39,11,25,9,"useQueries"],[39,21,25,19,"useQueries"],[39,22,25,20],[40,4,26,2,"queries"],[40,11,26,9],[41,4,27,2],[41,7,27,5,"options"],[42,2,28,0],[42,3,28,1],[42,5,28,3,"queryClient"],[42,16,28,14],[42,18,28,16],[43,4,29,2],[43,10,29,8,"client"],[43,16,29,14],[43,19,29,17],[43,23,29,17,"useQueryClient"],[43,45,29,31],[43,46,29,31,"useQueryClient"],[43,60,29,31],[43,62,29,32,"queryClient"],[43,73,29,43],[43,74,29,44],[44,4,30,2],[44,10,30,8,"isRestoring"],[44,21,30,19],[44,24,30,22],[44,28,30,22,"useIsRestoring"],[44,50,30,36],[44,51,30,36,"useIsRestoring"],[44,65,30,36],[44,67,30,37],[44,68,30,38],[45,4,31,2],[45,10,31,8,"errorResetBoundary"],[45,28,31,26],[45,31,31,29],[45,35,31,29,"useQueryErrorResetBoundary"],[45,61,31,55],[45,62,31,55,"useQueryErrorResetBoundary"],[45,88,31,55],[45,90,31,56],[45,91,31,57],[46,4,32,2],[46,10,32,8,"defaultedQueries"],[46,26,32,24],[46,29,32,27,"React"],[46,34,32,32],[46,35,32,33,"useMemo"],[46,42,32,40],[46,43,33,4],[46,49,33,10,"queries"],[46,56,33,17],[46,57,33,18,"map"],[46,60,33,21],[46,61,33,23,"opts"],[46,65,33,27],[46,69,33,32],[47,6,34,6],[47,12,34,12,"defaultedOptions"],[47,28,34,28],[47,31,34,31,"client"],[47,37,34,37],[47,38,34,38,"defaultQueryOptions"],[47,57,34,57],[47,58,35,8,"opts"],[47,62,36,6],[47,63,36,7],[48,6,37,6,"defaultedOptions"],[48,22,37,22],[48,23,37,23,"_optimisticResults"],[48,41,37,41],[48,44,37,44,"isRestoring"],[48,55,37,55],[48,58,37,58],[48,71,37,71],[48,74,37,74],[48,86,37,86],[49,6,38,6],[49,13,38,13,"defaultedOptions"],[49,29,38,29],[50,4,39,4],[50,5,39,5],[50,6,39,6],[50,8,40,4],[50,9,40,5,"queries"],[50,16,40,12],[50,18,40,14,"client"],[50,24,40,20],[50,26,40,22,"isRestoring"],[50,37,40,33],[50,38,41,2],[50,39,41,3],[51,4,42,2,"defaultedQueries"],[51,20,42,18],[51,21,42,19,"forEach"],[51,28,42,26],[51,29,42,28,"query"],[51,34,42,33],[51,38,42,38],[52,6,43,4],[52,10,43,4,"ensureSuspenseTimers"],[52,21,43,24],[52,22,43,24,"ensureSuspenseTimers"],[52,42,43,24],[52,44,43,25,"query"],[52,49,43,30],[52,50,43,31],[53,6,44,4],[53,10,44,4,"ensurePreventErrorBoundaryRetry"],[53,31,44,35],[53,32,44,35,"ensurePreventErrorBoundaryRetry"],[53,63,44,35],[53,65,44,36,"query"],[53,70,44,41],[53,72,44,43,"errorResetBoundary"],[53,90,44,61],[53,91,44,62],[54,4,45,2],[54,5,45,3],[54,6,45,4],[55,4,46,2],[55,8,46,2,"useClearResetErrorBoundary"],[55,29,46,28],[55,30,46,28,"useClearResetErrorBoundary"],[55,56,46,28],[55,58,46,29,"errorResetBoundary"],[55,76,46,47],[55,77,46,48],[56,4,47,2],[56,10,47,8],[56,11,47,9,"observer"],[56,19,47,17],[56,20,47,18],[56,23,47,21,"React"],[56,28,47,26],[56,29,47,27,"useState"],[56,37,47,35],[56,38,48,4],[56,44,48,10],[56,48,48,14,"QueriesObserver"],[56,66,48,29],[56,67,48,29,"QueriesObserver"],[56,82,48,29],[56,83,49,6,"client"],[56,89,49,12],[56,91,50,6,"defaultedQueries"],[56,107,50,22],[56,109,51,6,"options"],[56,116,52,4],[56,117,53,2],[56,118,53,3],[57,4,54,2],[57,10,54,8],[57,11,54,9,"optimisticResult"],[57,27,54,25],[57,29,54,27,"getCombinedResult"],[57,46,54,44],[57,48,54,46,"trackResult"],[57,59,54,57],[57,60,54,58],[57,63,54,61,"observer"],[57,71,54,69],[57,72,54,70,"getOptimisticResult"],[57,91,54,89],[57,92,55,4,"defaultedQueries"],[57,108,55,20],[57,110,56,4,"options"],[57,117,56,11],[57,118,56,12,"combine"],[57,125,57,2],[57,126,57,3],[58,4,58,2],[58,10,58,8,"shouldSubscribe"],[58,25,58,23],[58,28,58,26],[58,29,58,27,"isRestoring"],[58,40,58,38],[58,44,58,42,"options"],[58,51,58,49],[58,52,58,50,"subscribed"],[58,62,58,60],[58,67,58,65],[58,72,58,70],[59,4,59,2,"React"],[59,9,59,7],[59,10,59,8,"useSyncExternalStore"],[59,30,59,28],[59,31,60,4,"React"],[59,36,60,9],[59,37,60,10,"useCallback"],[59,48,60,21],[59,49,61,7,"onStoreChange"],[59,62,61,20],[59,66,61,25,"shouldSubscribe"],[59,81,61,40],[59,84,61,43,"observer"],[59,92,61,51],[59,93,61,52,"subscribe"],[59,102,61,61],[59,103,61,62,"notifyManager"],[59,121,61,75],[59,122,61,75,"notifyManager"],[59,135,61,75],[59,136,61,76,"batchCalls"],[59,146,61,86],[59,147,61,87,"onStoreChange"],[59,160,61,100],[59,161,61,101],[59,162,61,102],[59,165,61,105,"noop"],[59,183,61,109],[59,184,61,109,"noop"],[59,188,61,109],[59,190,62,6],[59,191,62,7,"observer"],[59,199,62,15],[59,201,62,17,"shouldSubscribe"],[59,216,62,32],[59,217,63,4],[59,218,63,5],[59,220,64,4],[59,226,64,10,"observer"],[59,234,64,18],[59,235,64,19,"getCurrentResult"],[59,251,64,35],[59,252,64,36],[59,253,64,37],[59,255,65,4],[59,261,65,10,"observer"],[59,269,65,18],[59,270,65,19,"getCurrentResult"],[59,286,65,35],[59,287,65,36],[59,288,66,2],[59,289,66,3],[60,4,67,2,"React"],[60,9,67,7],[60,10,67,8,"useEffect"],[60,19,67,17],[60,20,67,18],[60,26,67,24],[61,6,68,4,"observer"],[61,14,68,12],[61,15,68,13,"setQueries"],[61,25,68,23],[61,26,69,6,"defaultedQueries"],[61,42,69,22],[61,44,70,6,"options"],[61,51,71,4],[61,52,71,5],[62,4,72,2],[62,5,72,3],[62,7,72,5],[62,8,72,6,"defaultedQueries"],[62,24,72,22],[62,26,72,24,"options"],[62,33,72,31],[62,35,72,33,"observer"],[62,43,72,41],[62,44,72,42],[62,45,72,43],[63,4,73,2],[63,10,73,8,"shouldAtLeastOneSuspend"],[63,33,73,31],[63,36,73,34,"optimisticResult"],[63,52,73,50],[63,53,73,51,"some"],[63,57,73,55],[63,58,74,4],[63,59,74,5,"result"],[63,65,74,11],[63,67,74,13,"index"],[63,72,74,18],[63,77,74,23],[63,81,74,23,"shouldSuspend"],[63,92,74,36],[63,93,74,36,"shouldSuspend"],[63,106,74,36],[63,108,74,37,"defaultedQueries"],[63,124,74,53],[63,125,74,54,"index"],[63,130,74,59],[63,131,74,60],[63,133,74,62,"result"],[63,139,74,68],[63,140,75,2],[63,141,75,3],[64,4,76,2],[64,10,76,8,"suspensePromises"],[64,26,76,24],[64,29,76,27,"shouldAtLeastOneSuspend"],[64,52,76,50],[64,55,76,53,"optimisticResult"],[64,71,76,69],[64,72,76,70,"flatMap"],[64,79,76,77],[64,80,76,78],[64,81,76,79,"result"],[64,87,76,85],[64,89,76,87,"index"],[64,94,76,92],[64,99,76,97],[65,6,77,4],[65,12,77,10,"opts"],[65,16,77,14],[65,19,77,17,"defaultedQueries"],[65,35,77,33],[65,36,77,34,"index"],[65,41,77,39],[65,42,77,40],[66,6,78,4],[66,10,78,8,"opts"],[66,14,78,12],[66,16,78,14],[67,8,79,6],[67,14,79,12,"queryObserver"],[67,27,79,25],[67,30,79,28],[67,34,79,32,"QueryObserver"],[67,52,79,45],[67,53,79,45,"QueryObserver"],[67,66,79,45],[67,67,79,46,"client"],[67,73,79,52],[67,75,79,54,"opts"],[67,79,79,58],[67,80,79,59],[68,8,80,6],[68,12,80,10],[68,16,80,10,"shouldSuspend"],[68,27,80,23],[68,28,80,23,"shouldSuspend"],[68,41,80,23],[68,43,80,24,"opts"],[68,47,80,28],[68,49,80,30,"result"],[68,55,80,36],[68,56,80,37],[68,58,80,39],[69,10,81,8],[69,17,81,15],[69,21,81,15,"fetchOptimistic"],[69,32,81,30],[69,33,81,30,"fetchOptimistic"],[69,48,81,30],[69,50,81,31,"opts"],[69,54,81,35],[69,56,81,37,"queryObserver"],[69,69,81,50],[69,71,81,52,"errorResetBoundary"],[69,89,81,70],[69,90,81,71],[70,8,82,6],[70,9,82,7],[70,15,82,13],[70,19,82,17],[70,23,82,17,"willFetch"],[70,34,82,26],[70,35,82,26,"willFetch"],[70,44,82,26],[70,46,82,27,"result"],[70,52,82,33],[70,54,82,35,"isRestoring"],[70,65,82,46],[70,66,82,47],[70,68,82,49],[71,10,83,8],[71,15,83,13],[71,19,83,13,"fetchOptimistic"],[71,30,83,28],[71,31,83,28,"fetchOptimistic"],[71,46,83,28],[71,48,83,29,"opts"],[71,52,83,33],[71,54,83,35,"queryObserver"],[71,67,83,48],[71,69,83,50,"errorResetBoundary"],[71,87,83,68],[71,88,83,69],[72,8,84,6],[73,6,85,4],[74,6,86,4],[74,13,86,11],[74,15,86,13],[75,4,87,2],[75,5,87,3],[75,6,87,4],[75,9,87,7],[75,11,87,9],[76,4,88,2],[76,8,88,6,"suspensePromises"],[76,24,88,22],[76,25,88,23,"length"],[76,31,88,29],[76,34,88,32],[76,35,88,33],[76,37,88,35],[77,6,89,4],[77,12,89,10,"Promise"],[77,19,89,17],[77,20,89,18,"all"],[77,23,89,21],[77,24,89,22,"suspensePromises"],[77,40,89,38],[77,41,89,39],[78,4,90,2],[79,4,91,2],[79,10,91,8,"firstSingleResultWhichShouldThrow"],[79,43,91,41],[79,46,91,44,"optimisticResult"],[79,62,91,60],[79,63,91,61,"find"],[79,67,91,65],[79,68,92,4],[79,69,92,5,"result"],[79,75,92,11],[79,77,92,13,"index"],[79,82,92,18],[79,87,92,23],[80,6,93,6],[80,12,93,12,"query"],[80,17,93,17],[80,20,93,20,"defaultedQueries"],[80,36,93,36],[80,37,93,37,"index"],[80,42,93,42],[80,43,93,43],[81,6,94,6],[81,13,94,13,"query"],[81,18,94,18],[81,22,94,22],[81,26,94,22,"getHasError"],[81,47,94,33],[81,48,94,33,"getHasError"],[81,59,94,33],[81,61,94,34],[82,8,95,8,"result"],[82,14,95,14],[83,8,96,8,"errorResetBoundary"],[83,26,96,26],[84,8,97,8,"throwOnError"],[84,20,97,20],[84,22,97,22,"query"],[84,27,97,27],[84,28,97,28,"throwOnError"],[84,40,97,40],[85,8,98,8,"query"],[85,13,98,13],[85,15,98,15,"client"],[85,21,98,21],[85,22,98,22,"getQueryCache"],[85,35,98,35],[85,36,98,36],[85,37,98,37],[85,38,98,38,"get"],[85,41,98,41],[85,42,98,42,"query"],[85,47,98,47],[85,48,98,48,"queryHash"],[85,57,98,57],[85,58,98,58],[86,8,99,8,"suspense"],[86,16,99,16],[86,18,99,18,"query"],[86,23,99,23],[86,24,99,24,"suspense"],[87,6,100,6],[87,7,100,7],[87,8,100,8],[88,4,101,4],[88,5,102,2],[88,6,102,3],[89,4,103,2],[89,8,103,6,"firstSingleResultWhichShouldThrow"],[89,41,103,39],[89,43,103,41,"error"],[89,48,103,46],[89,50,103,48],[90,6,104,4],[90,12,104,10,"firstSingleResultWhichShouldThrow"],[90,45,104,43],[90,46,104,44,"error"],[90,51,104,49],[91,4,105,2],[92,4,106,2],[92,11,106,9,"getCombinedResult"],[92,28,106,26],[92,29,106,27,"trackResult"],[92,40,106,38],[92,41,106,39],[92,42,106,40],[92,43,106,41],[93,2,107,0],[94,0,107,1],[94,3]],"functionMap":{"names":["<global>","useQueries","React.useMemo$argument_0","queries.map$argument_0","defaultedQueries.forEach$argument_0","React.useState$argument_0","React.useSyncExternalStore$argument_0","React.useSyncExternalStore$argument_1","React.useSyncExternalStore$argument_2","React.useEffect$argument_0","optimisticResult.some$argument_0","optimisticResult.flatMap$argument_0","optimisticResult.find$argument_0"],"mappings":"AAA;ACwB;ICQ,kBC;KDM,CD;2BGG;GHG;IIG;KJI;MKS,uGL;IMG,iCN;IOC,iCP;kBQE;GRK;ISE,iET;8EUE;GVW;IWK;KXS;CDM"},"hasCjsExports":false},"type":"js/module"}]}