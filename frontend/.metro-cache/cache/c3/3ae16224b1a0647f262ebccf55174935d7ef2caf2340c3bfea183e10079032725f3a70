{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"hideOthers\", {\n    enumerable: true,\n    get: function () {\n      return hideOthers;\n    }\n  });\n  Object.defineProperty(exports, \"inertOthers\", {\n    enumerable: true,\n    get: function () {\n      return inertOthers;\n    }\n  });\n  Object.defineProperty(exports, \"supportsInert\", {\n    enumerable: true,\n    get: function () {\n      return supportsInert;\n    }\n  });\n  Object.defineProperty(exports, \"suppressOthers\", {\n    enumerable: true,\n    get: function () {\n      return suppressOthers;\n    }\n  });\n  var getDefaultParent = function (originalTarget) {\n    if (typeof document === 'undefined') {\n      return null;\n    }\n    var sampleTarget = Array.isArray(originalTarget) ? originalTarget[0] : originalTarget;\n    return sampleTarget.ownerDocument.body;\n  };\n  var counterMap = new WeakMap();\n  var uncontrolledNodes = new WeakMap();\n  var markerMap = {};\n  var lockCount = 0;\n  var unwrapHost = function (node) {\n    return node && (node.host || unwrapHost(node.parentNode));\n  };\n  var correctTargets = function (parent, targets) {\n    return targets.map(function (target) {\n      if (parent.contains(target)) {\n        return target;\n      }\n      var correctedTarget = unwrapHost(target);\n      if (correctedTarget && parent.contains(correctedTarget)) {\n        return correctedTarget;\n      }\n      console.error('aria-hidden', target, 'in not contained inside', parent, '. Doing nothing');\n      return null;\n    }).filter(function (x) {\n      return Boolean(x);\n    });\n  };\n  /**\n   * Marks everything except given node(or nodes) as aria-hidden\n   * @param {Element | Element[]} originalTarget - elements to keep on the page\n   * @param [parentNode] - top element, defaults to document.body\n   * @param {String} [markerName] - a special attribute to mark every node\n   * @param {String} [controlAttribute] - html Attribute to control\n   * @return {Undo} undo command\n   */\n  var applyAttributeToOthers = function (originalTarget, parentNode, markerName, controlAttribute) {\n    var targets = correctTargets(parentNode, Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    if (!markerMap[markerName]) {\n      markerMap[markerName] = new WeakMap();\n    }\n    var markerCounter = markerMap[markerName];\n    var hiddenNodes = [];\n    var elementsToKeep = new Set();\n    var elementsToStop = new Set(targets);\n    var keep = function (el) {\n      if (!el || elementsToKeep.has(el)) {\n        return;\n      }\n      elementsToKeep.add(el);\n      keep(el.parentNode);\n    };\n    targets.forEach(keep);\n    var deep = function (parent) {\n      if (!parent || elementsToStop.has(parent)) {\n        return;\n      }\n      Array.prototype.forEach.call(parent.children, function (node) {\n        if (elementsToKeep.has(node)) {\n          deep(node);\n        } else {\n          try {\n            var attr = node.getAttribute(controlAttribute);\n            var alreadyHidden = attr !== null && attr !== 'false';\n            var counterValue = (counterMap.get(node) || 0) + 1;\n            var markerValue = (markerCounter.get(node) || 0) + 1;\n            counterMap.set(node, counterValue);\n            markerCounter.set(node, markerValue);\n            hiddenNodes.push(node);\n            if (counterValue === 1 && alreadyHidden) {\n              uncontrolledNodes.set(node, true);\n            }\n            if (markerValue === 1) {\n              node.setAttribute(markerName, 'true');\n            }\n            if (!alreadyHidden) {\n              node.setAttribute(controlAttribute, 'true');\n            }\n          } catch (e) {\n            console.error('aria-hidden: cannot operate on ', node, e);\n          }\n        }\n      });\n    };\n    deep(parentNode);\n    elementsToKeep.clear();\n    lockCount++;\n    return function () {\n      hiddenNodes.forEach(function (node) {\n        var counterValue = counterMap.get(node) - 1;\n        var markerValue = markerCounter.get(node) - 1;\n        counterMap.set(node, counterValue);\n        markerCounter.set(node, markerValue);\n        if (!counterValue) {\n          if (!uncontrolledNodes.has(node)) {\n            node.removeAttribute(controlAttribute);\n          }\n          uncontrolledNodes.delete(node);\n        }\n        if (!markerValue) {\n          node.removeAttribute(markerName);\n        }\n      });\n      lockCount--;\n      if (!lockCount) {\n        // clear\n        counterMap = new WeakMap();\n        counterMap = new WeakMap();\n        uncontrolledNodes = new WeakMap();\n        markerMap = {};\n      }\n    };\n  };\n  /**\n   * Marks everything except given node(or nodes) as aria-hidden\n   * @param {Element | Element[]} originalTarget - elements to keep on the page\n   * @param [parentNode] - top element, defaults to document.body\n   * @param {String} [markerName] - a special attribute to mark every node\n   * @return {Undo} undo command\n   */\n  var hideOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) {\n      markerName = 'data-aria-hidden';\n    }\n    var targets = Array.from(Array.isArray(originalTarget) ? originalTarget : [originalTarget]);\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n      return function () {\n        return null;\n      };\n    }\n    // we should not hide aria-live elements - https://github.com/theKashey/aria-hidden/issues/10\n    // and script elements, as they have no impact on accessibility.\n    targets.push.apply(targets, Array.from(activeParentNode.querySelectorAll('[aria-live], script')));\n    return applyAttributeToOthers(targets, activeParentNode, markerName, 'aria-hidden');\n  };\n  /**\n   * Marks everything except given node(or nodes) as inert\n   * @param {Element | Element[]} originalTarget - elements to keep on the page\n   * @param [parentNode] - top element, defaults to document.body\n   * @param {String} [markerName] - a special attribute to mark every node\n   * @return {Undo} undo command\n   */\n  var inertOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) {\n      markerName = 'data-inert-ed';\n    }\n    var activeParentNode = parentNode || getDefaultParent(originalTarget);\n    if (!activeParentNode) {\n      return function () {\n        return null;\n      };\n    }\n    return applyAttributeToOthers(originalTarget, activeParentNode, markerName, 'inert');\n  };\n  /**\n   * @returns if current browser supports inert\n   */\n  var supportsInert = function () {\n    return typeof HTMLElement !== 'undefined' && HTMLElement.prototype.hasOwnProperty('inert');\n  };\n  /**\n   * Automatic function to \"suppress\" DOM elements - _hide_ or _inert_ in the best possible way\n   * @param {Element | Element[]} originalTarget - elements to keep on the page\n   * @param [parentNode] - top element, defaults to document.body\n   * @param {String} [markerName] - a special attribute to mark every node\n   * @return {Undo} undo command\n   */\n  var suppressOthers = function (originalTarget, parentNode, markerName) {\n    if (markerName === void 0) {\n      markerName = 'data-suppressed';\n    }\n    return (supportsInert() ? inertOthers : hideOthers)(originalTarget, parentNode, markerName);\n  };\n});","lineCount":206,"map":[[7,2,124,0,"Object"],[7,8,124,0],[7,9,124,0,"defineProperty"],[7,23,124,0],[7,24,124,0,"exports"],[7,31,124,0],[8,4,124,0,"enumerable"],[8,14,124,0],[9,4,124,0,"get"],[9,7,124,0],[9,18,124,0,"get"],[9,19,124,0],[10,6,124,0],[10,13,124,0,"hideOthers"],[10,23,124,0],[11,4,124,0],[12,2,124,0],[13,2,143,0,"Object"],[13,8,143,0],[13,9,143,0,"defineProperty"],[13,23,143,0],[13,24,143,0,"exports"],[13,31,143,0],[14,4,143,0,"enumerable"],[14,14,143,0],[15,4,143,0,"get"],[15,7,143,0],[15,18,143,0,"get"],[15,19,143,0],[16,6,143,0],[16,13,143,0,"inertOthers"],[16,24,143,0],[17,4,143,0],[18,2,143,0],[19,2,154,0,"Object"],[19,8,154,0],[19,9,154,0,"defineProperty"],[19,23,154,0],[19,24,154,0,"exports"],[19,31,154,0],[20,4,154,0,"enumerable"],[20,14,154,0],[21,4,154,0,"get"],[21,7,154,0],[21,18,154,0,"get"],[21,19,154,0],[22,6,154,0],[22,13,154,0,"supportsInert"],[22,26,154,0],[23,4,154,0],[24,2,154,0],[25,2,164,0,"Object"],[25,8,164,0],[25,9,164,0,"defineProperty"],[25,23,164,0],[25,24,164,0,"exports"],[25,31,164,0],[26,4,164,0,"enumerable"],[26,14,164,0],[27,4,164,0,"get"],[27,7,164,0],[27,18,164,0,"get"],[27,19,164,0],[28,6,164,0],[28,13,164,0,"suppressOthers"],[28,27,164,0],[29,4,164,0],[30,2,164,0],[31,2,1,0],[31,6,1,4,"getDefaultParent"],[31,22,1,20],[31,25,1,23],[31,34,1,23,"getDefaultParent"],[31,35,1,33,"originalTarget"],[31,49,1,47],[31,51,1,49],[32,4,2,4],[32,8,2,8],[32,15,2,15,"document"],[32,23,2,23],[32,28,2,28],[32,39,2,39],[32,41,2,41],[33,6,3,8],[33,13,3,15],[33,17,3,19],[34,4,4,4],[35,4,5,4],[35,8,5,8,"sampleTarget"],[35,20,5,20],[35,23,5,23,"Array"],[35,28,5,28],[35,29,5,29,"isArray"],[35,36,5,36],[35,37,5,37,"originalTarget"],[35,51,5,51],[35,52,5,52],[35,55,5,55,"originalTarget"],[35,69,5,69],[35,70,5,70],[35,71,5,71],[35,72,5,72],[35,75,5,75,"originalTarget"],[35,89,5,89],[36,4,6,4],[36,11,6,11,"sampleTarget"],[36,23,6,23],[36,24,6,24,"ownerDocument"],[36,37,6,37],[36,38,6,38,"body"],[36,42,6,42],[37,2,7,0],[37,3,7,1],[38,2,8,0],[38,6,8,4,"counterMap"],[38,16,8,14],[38,19,8,17],[38,23,8,21,"WeakMap"],[38,30,8,28],[38,31,8,29],[38,32,8,30],[39,2,9,0],[39,6,9,4,"uncontrolledNodes"],[39,23,9,21],[39,26,9,24],[39,30,9,28,"WeakMap"],[39,37,9,35],[39,38,9,36],[39,39,9,37],[40,2,10,0],[40,6,10,4,"markerMap"],[40,15,10,13],[40,18,10,16],[40,19,10,17],[40,20,10,18],[41,2,11,0],[41,6,11,4,"lockCount"],[41,15,11,13],[41,18,11,16],[41,19,11,17],[42,2,12,0],[42,6,12,4,"unwrapHost"],[42,16,12,14],[42,19,12,17],[42,28,12,17,"unwrapHost"],[42,29,12,27,"node"],[42,33,12,31],[42,35,12,33],[43,4,13,4],[43,11,13,11,"node"],[43,15,13,15],[43,20,13,20,"node"],[43,24,13,24],[43,25,13,25,"host"],[43,29,13,29],[43,33,13,33,"unwrapHost"],[43,43,13,43],[43,44,13,44,"node"],[43,48,13,48],[43,49,13,49,"parentNode"],[43,59,13,59],[43,60,13,60],[43,61,13,61],[44,2,14,0],[44,3,14,1],[45,2,15,0],[45,6,15,4,"correctTargets"],[45,20,15,18],[45,23,15,21],[45,32,15,21,"correctTargets"],[45,33,15,31,"parent"],[45,39,15,37],[45,41,15,39,"targets"],[45,48,15,46],[45,50,15,48],[46,4,16,4],[46,11,16,11,"targets"],[46,18,16,18],[46,19,17,9,"map"],[46,22,17,12],[46,23,17,13],[46,33,17,23,"target"],[46,39,17,29],[46,41,17,31],[47,6,18,8],[47,10,18,12,"parent"],[47,16,18,18],[47,17,18,19,"contains"],[47,25,18,27],[47,26,18,28,"target"],[47,32,18,34],[47,33,18,35],[47,35,18,37],[48,8,19,12],[48,15,19,19,"target"],[48,21,19,25],[49,6,20,8],[50,6,21,8],[50,10,21,12,"correctedTarget"],[50,25,21,27],[50,28,21,30,"unwrapHost"],[50,38,21,40],[50,39,21,41,"target"],[50,45,21,47],[50,46,21,48],[51,6,22,8],[51,10,22,12,"correctedTarget"],[51,25,22,27],[51,29,22,31,"parent"],[51,35,22,37],[51,36,22,38,"contains"],[51,44,22,46],[51,45,22,47,"correctedTarget"],[51,60,22,62],[51,61,22,63],[51,63,22,65],[52,8,23,12],[52,15,23,19,"correctedTarget"],[52,30,23,34],[53,6,24,8],[54,6,25,8,"console"],[54,13,25,15],[54,14,25,16,"error"],[54,19,25,21],[54,20,25,22],[54,33,25,35],[54,35,25,37,"target"],[54,41,25,43],[54,43,25,45],[54,68,25,70],[54,70,25,72,"parent"],[54,76,25,78],[54,78,25,80],[54,95,25,97],[54,96,25,98],[55,6,26,8],[55,13,26,15],[55,17,26,19],[56,4,27,4],[56,5,27,5],[56,6,27,6],[56,7,28,9,"filter"],[56,13,28,15],[56,14,28,16],[56,24,28,26,"x"],[56,25,28,27],[56,27,28,29],[57,6,28,31],[57,13,28,38,"Boolean"],[57,20,28,45],[57,21,28,46,"x"],[57,22,28,47],[57,23,28,48],[58,4,28,50],[58,5,28,51],[58,6,28,52],[59,2,29,0],[59,3,29,1],[60,2,30,0],[61,0,31,0],[62,0,32,0],[63,0,33,0],[64,0,34,0],[65,0,35,0],[66,0,36,0],[67,0,37,0],[68,2,38,0],[68,6,38,4,"applyAttributeToOthers"],[68,28,38,26],[68,31,38,29],[68,40,38,29,"applyAttributeToOthers"],[68,41,38,39,"originalTarget"],[68,55,38,53],[68,57,38,55,"parentNode"],[68,67,38,65],[68,69,38,67,"markerName"],[68,79,38,77],[68,81,38,79,"controlAttribute"],[68,97,38,95],[68,99,38,97],[69,4,39,4],[69,8,39,8,"targets"],[69,15,39,15],[69,18,39,18,"correctTargets"],[69,32,39,32],[69,33,39,33,"parentNode"],[69,43,39,43],[69,45,39,45,"Array"],[69,50,39,50],[69,51,39,51,"isArray"],[69,58,39,58],[69,59,39,59,"originalTarget"],[69,73,39,73],[69,74,39,74],[69,77,39,77,"originalTarget"],[69,91,39,91],[69,94,39,94],[69,95,39,95,"originalTarget"],[69,109,39,109],[69,110,39,110],[69,111,39,111],[70,4,40,4],[70,8,40,8],[70,9,40,9,"markerMap"],[70,18,40,18],[70,19,40,19,"markerName"],[70,29,40,29],[70,30,40,30],[70,32,40,32],[71,6,41,8,"markerMap"],[71,15,41,17],[71,16,41,18,"markerName"],[71,26,41,28],[71,27,41,29],[71,30,41,32],[71,34,41,36,"WeakMap"],[71,41,41,43],[71,42,41,44],[71,43,41,45],[72,4,42,4],[73,4,43,4],[73,8,43,8,"markerCounter"],[73,21,43,21],[73,24,43,24,"markerMap"],[73,33,43,33],[73,34,43,34,"markerName"],[73,44,43,44],[73,45,43,45],[74,4,44,4],[74,8,44,8,"hiddenNodes"],[74,19,44,19],[74,22,44,22],[74,24,44,24],[75,4,45,4],[75,8,45,8,"elementsToKeep"],[75,22,45,22],[75,25,45,25],[75,29,45,29,"Set"],[75,32,45,32],[75,33,45,33],[75,34,45,34],[76,4,46,4],[76,8,46,8,"elementsToStop"],[76,22,46,22],[76,25,46,25],[76,29,46,29,"Set"],[76,32,46,32],[76,33,46,33,"targets"],[76,40,46,40],[76,41,46,41],[77,4,47,4],[77,8,47,8,"keep"],[77,12,47,12],[77,15,47,15],[77,24,47,15,"keep"],[77,25,47,25,"el"],[77,27,47,27],[77,29,47,29],[78,6,48,8],[78,10,48,12],[78,11,48,13,"el"],[78,13,48,15],[78,17,48,19,"elementsToKeep"],[78,31,48,33],[78,32,48,34,"has"],[78,35,48,37],[78,36,48,38,"el"],[78,38,48,40],[78,39,48,41],[78,41,48,43],[79,8,49,12],[80,6,50,8],[81,6,51,8,"elementsToKeep"],[81,20,51,22],[81,21,51,23,"add"],[81,24,51,26],[81,25,51,27,"el"],[81,27,51,29],[81,28,51,30],[82,6,52,8,"keep"],[82,10,52,12],[82,11,52,13,"el"],[82,13,52,15],[82,14,52,16,"parentNode"],[82,24,52,26],[82,25,52,27],[83,4,53,4],[83,5,53,5],[84,4,54,4,"targets"],[84,11,54,11],[84,12,54,12,"forEach"],[84,19,54,19],[84,20,54,20,"keep"],[84,24,54,24],[84,25,54,25],[85,4,55,4],[85,8,55,8,"deep"],[85,12,55,12],[85,15,55,15],[85,24,55,15,"deep"],[85,25,55,25,"parent"],[85,31,55,31],[85,33,55,33],[86,6,56,8],[86,10,56,12],[86,11,56,13,"parent"],[86,17,56,19],[86,21,56,23,"elementsToStop"],[86,35,56,37],[86,36,56,38,"has"],[86,39,56,41],[86,40,56,42,"parent"],[86,46,56,48],[86,47,56,49],[86,49,56,51],[87,8,57,12],[88,6,58,8],[89,6,59,8,"Array"],[89,11,59,13],[89,12,59,14,"prototype"],[89,21,59,23],[89,22,59,24,"forEach"],[89,29,59,31],[89,30,59,32,"call"],[89,34,59,36],[89,35,59,37,"parent"],[89,41,59,43],[89,42,59,44,"children"],[89,50,59,52],[89,52,59,54],[89,62,59,64,"node"],[89,66,59,68],[89,68,59,70],[90,8,60,12],[90,12,60,16,"elementsToKeep"],[90,26,60,30],[90,27,60,31,"has"],[90,30,60,34],[90,31,60,35,"node"],[90,35,60,39],[90,36,60,40],[90,38,60,42],[91,10,61,16,"deep"],[91,14,61,20],[91,15,61,21,"node"],[91,19,61,25],[91,20,61,26],[92,8,62,12],[92,9,62,13],[92,15,63,17],[93,10,64,16],[93,14,64,20],[94,12,65,20],[94,16,65,24,"attr"],[94,20,65,28],[94,23,65,31,"node"],[94,27,65,35],[94,28,65,36,"getAttribute"],[94,40,65,48],[94,41,65,49,"controlAttribute"],[94,57,65,65],[94,58,65,66],[95,12,66,20],[95,16,66,24,"alreadyHidden"],[95,29,66,37],[95,32,66,40,"attr"],[95,36,66,44],[95,41,66,49],[95,45,66,53],[95,49,66,57,"attr"],[95,53,66,61],[95,58,66,66],[95,65,66,73],[96,12,67,20],[96,16,67,24,"counterValue"],[96,28,67,36],[96,31,67,39],[96,32,67,40,"counterMap"],[96,42,67,50],[96,43,67,51,"get"],[96,46,67,54],[96,47,67,55,"node"],[96,51,67,59],[96,52,67,60],[96,56,67,64],[96,57,67,65],[96,61,67,69],[96,62,67,70],[97,12,68,20],[97,16,68,24,"markerValue"],[97,27,68,35],[97,30,68,38],[97,31,68,39,"markerCounter"],[97,44,68,52],[97,45,68,53,"get"],[97,48,68,56],[97,49,68,57,"node"],[97,53,68,61],[97,54,68,62],[97,58,68,66],[97,59,68,67],[97,63,68,71],[97,64,68,72],[98,12,69,20,"counterMap"],[98,22,69,30],[98,23,69,31,"set"],[98,26,69,34],[98,27,69,35,"node"],[98,31,69,39],[98,33,69,41,"counterValue"],[98,45,69,53],[98,46,69,54],[99,12,70,20,"markerCounter"],[99,25,70,33],[99,26,70,34,"set"],[99,29,70,37],[99,30,70,38,"node"],[99,34,70,42],[99,36,70,44,"markerValue"],[99,47,70,55],[99,48,70,56],[100,12,71,20,"hiddenNodes"],[100,23,71,31],[100,24,71,32,"push"],[100,28,71,36],[100,29,71,37,"node"],[100,33,71,41],[100,34,71,42],[101,12,72,20],[101,16,72,24,"counterValue"],[101,28,72,36],[101,33,72,41],[101,34,72,42],[101,38,72,46,"alreadyHidden"],[101,51,72,59],[101,53,72,61],[102,14,73,24,"uncontrolledNodes"],[102,31,73,41],[102,32,73,42,"set"],[102,35,73,45],[102,36,73,46,"node"],[102,40,73,50],[102,42,73,52],[102,46,73,56],[102,47,73,57],[103,12,74,20],[104,12,75,20],[104,16,75,24,"markerValue"],[104,27,75,35],[104,32,75,40],[104,33,75,41],[104,35,75,43],[105,14,76,24,"node"],[105,18,76,28],[105,19,76,29,"setAttribute"],[105,31,76,41],[105,32,76,42,"markerName"],[105,42,76,52],[105,44,76,54],[105,50,76,60],[105,51,76,61],[106,12,77,20],[107,12,78,20],[107,16,78,24],[107,17,78,25,"alreadyHidden"],[107,30,78,38],[107,32,78,40],[108,14,79,24,"node"],[108,18,79,28],[108,19,79,29,"setAttribute"],[108,31,79,41],[108,32,79,42,"controlAttribute"],[108,48,79,58],[108,50,79,60],[108,56,79,66],[108,57,79,67],[109,12,80,20],[110,10,81,16],[110,11,81,17],[110,12,82,16],[110,19,82,23,"e"],[110,20,82,24],[110,22,82,26],[111,12,83,20,"console"],[111,19,83,27],[111,20,83,28,"error"],[111,25,83,33],[111,26,83,34],[111,59,83,67],[111,61,83,69,"node"],[111,65,83,73],[111,67,83,75,"e"],[111,68,83,76],[111,69,83,77],[112,10,84,16],[113,8,85,12],[114,6,86,8],[114,7,86,9],[114,8,86,10],[115,4,87,4],[115,5,87,5],[116,4,88,4,"deep"],[116,8,88,8],[116,9,88,9,"parentNode"],[116,19,88,19],[116,20,88,20],[117,4,89,4,"elementsToKeep"],[117,18,89,18],[117,19,89,19,"clear"],[117,24,89,24],[117,25,89,25],[117,26,89,26],[118,4,90,4,"lockCount"],[118,13,90,13],[118,15,90,15],[119,4,91,4],[119,11,91,11],[119,23,91,23],[120,6,92,8,"hiddenNodes"],[120,17,92,19],[120,18,92,20,"forEach"],[120,25,92,27],[120,26,92,28],[120,36,92,38,"node"],[120,40,92,42],[120,42,92,44],[121,8,93,12],[121,12,93,16,"counterValue"],[121,24,93,28],[121,27,93,31,"counterMap"],[121,37,93,41],[121,38,93,42,"get"],[121,41,93,45],[121,42,93,46,"node"],[121,46,93,50],[121,47,93,51],[121,50,93,54],[121,51,93,55],[122,8,94,12],[122,12,94,16,"markerValue"],[122,23,94,27],[122,26,94,30,"markerCounter"],[122,39,94,43],[122,40,94,44,"get"],[122,43,94,47],[122,44,94,48,"node"],[122,48,94,52],[122,49,94,53],[122,52,94,56],[122,53,94,57],[123,8,95,12,"counterMap"],[123,18,95,22],[123,19,95,23,"set"],[123,22,95,26],[123,23,95,27,"node"],[123,27,95,31],[123,29,95,33,"counterValue"],[123,41,95,45],[123,42,95,46],[124,8,96,12,"markerCounter"],[124,21,96,25],[124,22,96,26,"set"],[124,25,96,29],[124,26,96,30,"node"],[124,30,96,34],[124,32,96,36,"markerValue"],[124,43,96,47],[124,44,96,48],[125,8,97,12],[125,12,97,16],[125,13,97,17,"counterValue"],[125,25,97,29],[125,27,97,31],[126,10,98,16],[126,14,98,20],[126,15,98,21,"uncontrolledNodes"],[126,32,98,38],[126,33,98,39,"has"],[126,36,98,42],[126,37,98,43,"node"],[126,41,98,47],[126,42,98,48],[126,44,98,50],[127,12,99,20,"node"],[127,16,99,24],[127,17,99,25,"removeAttribute"],[127,32,99,40],[127,33,99,41,"controlAttribute"],[127,49,99,57],[127,50,99,58],[128,10,100,16],[129,10,101,16,"uncontrolledNodes"],[129,27,101,33],[129,28,101,34,"delete"],[129,34,101,40],[129,35,101,41,"node"],[129,39,101,45],[129,40,101,46],[130,8,102,12],[131,8,103,12],[131,12,103,16],[131,13,103,17,"markerValue"],[131,24,103,28],[131,26,103,30],[132,10,104,16,"node"],[132,14,104,20],[132,15,104,21,"removeAttribute"],[132,30,104,36],[132,31,104,37,"markerName"],[132,41,104,47],[132,42,104,48],[133,8,105,12],[134,6,106,8],[134,7,106,9],[134,8,106,10],[135,6,107,8,"lockCount"],[135,15,107,17],[135,17,107,19],[136,6,108,8],[136,10,108,12],[136,11,108,13,"lockCount"],[136,20,108,22],[136,22,108,24],[137,8,109,12],[138,8,110,12,"counterMap"],[138,18,110,22],[138,21,110,25],[138,25,110,29,"WeakMap"],[138,32,110,36],[138,33,110,37],[138,34,110,38],[139,8,111,12,"counterMap"],[139,18,111,22],[139,21,111,25],[139,25,111,29,"WeakMap"],[139,32,111,36],[139,33,111,37],[139,34,111,38],[140,8,112,12,"uncontrolledNodes"],[140,25,112,29],[140,28,112,32],[140,32,112,36,"WeakMap"],[140,39,112,43],[140,40,112,44],[140,41,112,45],[141,8,113,12,"markerMap"],[141,17,113,21],[141,20,113,24],[141,21,113,25],[141,22,113,26],[142,6,114,8],[143,4,115,4],[143,5,115,5],[144,2,116,0],[144,3,116,1],[145,2,117,0],[146,0,118,0],[147,0,119,0],[148,0,120,0],[149,0,121,0],[150,0,122,0],[151,0,123,0],[152,2,124,7],[152,6,124,11,"hideOthers"],[152,16,124,21],[152,19,124,24],[152,28,124,24,"hideOthers"],[152,29,124,34,"originalTarget"],[152,43,124,48],[152,45,124,50,"parentNode"],[152,55,124,60],[152,57,124,62,"markerName"],[152,67,124,72],[152,69,124,74],[153,4,125,4],[153,8,125,8,"markerName"],[153,18,125,18],[153,23,125,23],[153,28,125,28],[153,29,125,29],[153,31,125,31],[154,6,125,33,"markerName"],[154,16,125,43],[154,19,125,46],[154,37,125,64],[155,4,125,66],[156,4,126,4],[156,8,126,8,"targets"],[156,15,126,15],[156,18,126,18,"Array"],[156,23,126,23],[156,24,126,24,"from"],[156,28,126,28],[156,29,126,29,"Array"],[156,34,126,34],[156,35,126,35,"isArray"],[156,42,126,42],[156,43,126,43,"originalTarget"],[156,57,126,57],[156,58,126,58],[156,61,126,61,"originalTarget"],[156,75,126,75],[156,78,126,78],[156,79,126,79,"originalTarget"],[156,93,126,93],[156,94,126,94],[156,95,126,95],[157,4,127,4],[157,8,127,8,"activeParentNode"],[157,24,127,24],[157,27,127,27,"parentNode"],[157,37,127,37],[157,41,127,41,"getDefaultParent"],[157,57,127,57],[157,58,127,58,"originalTarget"],[157,72,127,72],[157,73,127,73],[158,4,128,4],[158,8,128,8],[158,9,128,9,"activeParentNode"],[158,25,128,25],[158,27,128,27],[159,6,129,8],[159,13,129,15],[159,25,129,27],[160,8,129,29],[160,15,129,36],[160,19,129,40],[161,6,129,42],[161,7,129,43],[162,4,130,4],[163,4,131,4],[164,4,132,4],[165,4,133,4,"targets"],[165,11,133,11],[165,12,133,12,"push"],[165,16,133,16],[165,17,133,17,"apply"],[165,22,133,22],[165,23,133,23,"targets"],[165,30,133,30],[165,32,133,32,"Array"],[165,37,133,37],[165,38,133,38,"from"],[165,42,133,42],[165,43,133,43,"activeParentNode"],[165,59,133,59],[165,60,133,60,"querySelectorAll"],[165,76,133,76],[165,77,133,77],[165,98,133,98],[165,99,133,99],[165,100,133,100],[165,101,133,101],[166,4,134,4],[166,11,134,11,"applyAttributeToOthers"],[166,33,134,33],[166,34,134,34,"targets"],[166,41,134,41],[166,43,134,43,"activeParentNode"],[166,59,134,59],[166,61,134,61,"markerName"],[166,71,134,71],[166,73,134,73],[166,86,134,86],[166,87,134,87],[167,2,135,0],[167,3,135,1],[168,2,136,0],[169,0,137,0],[170,0,138,0],[171,0,139,0],[172,0,140,0],[173,0,141,0],[174,0,142,0],[175,2,143,7],[175,6,143,11,"inertOthers"],[175,17,143,22],[175,20,143,25],[175,29,143,25,"inertOthers"],[175,30,143,35,"originalTarget"],[175,44,143,49],[175,46,143,51,"parentNode"],[175,56,143,61],[175,58,143,63,"markerName"],[175,68,143,73],[175,70,143,75],[176,4,144,4],[176,8,144,8,"markerName"],[176,18,144,18],[176,23,144,23],[176,28,144,28],[176,29,144,29],[176,31,144,31],[177,6,144,33,"markerName"],[177,16,144,43],[177,19,144,46],[177,34,144,61],[178,4,144,63],[179,4,145,4],[179,8,145,8,"activeParentNode"],[179,24,145,24],[179,27,145,27,"parentNode"],[179,37,145,37],[179,41,145,41,"getDefaultParent"],[179,57,145,57],[179,58,145,58,"originalTarget"],[179,72,145,72],[179,73,145,73],[180,4,146,4],[180,8,146,8],[180,9,146,9,"activeParentNode"],[180,25,146,25],[180,27,146,27],[181,6,147,8],[181,13,147,15],[181,25,147,27],[182,8,147,29],[182,15,147,36],[182,19,147,40],[183,6,147,42],[183,7,147,43],[184,4,148,4],[185,4,149,4],[185,11,149,11,"applyAttributeToOthers"],[185,33,149,33],[185,34,149,34,"originalTarget"],[185,48,149,48],[185,50,149,50,"activeParentNode"],[185,66,149,66],[185,68,149,68,"markerName"],[185,78,149,78],[185,80,149,80],[185,87,149,87],[185,88,149,88],[186,2,150,0],[186,3,150,1],[187,2,151,0],[188,0,152,0],[189,0,153,0],[190,2,154,7],[190,6,154,11,"supportsInert"],[190,19,154,24],[190,22,154,27],[190,31,154,27,"supportsInert"],[190,32,154,27],[190,34,154,39],[191,4,155,4],[191,11,155,11],[191,18,155,18,"HTMLElement"],[191,29,155,29],[191,34,155,34],[191,45,155,45],[191,49,155,49,"HTMLElement"],[191,60,155,60],[191,61,155,61,"prototype"],[191,70,155,70],[191,71,155,71,"hasOwnProperty"],[191,85,155,85],[191,86,155,86],[191,93,155,93],[191,94,155,94],[192,2,156,0],[192,3,156,1],[193,2,157,0],[194,0,158,0],[195,0,159,0],[196,0,160,0],[197,0,161,0],[198,0,162,0],[199,0,163,0],[200,2,164,7],[200,6,164,11,"suppressOthers"],[200,20,164,25],[200,23,164,28],[200,32,164,28,"suppressOthers"],[200,33,164,38,"originalTarget"],[200,47,164,52],[200,49,164,54,"parentNode"],[200,59,164,64],[200,61,164,66,"markerName"],[200,71,164,76],[200,73,164,78],[201,4,165,4],[201,8,165,8,"markerName"],[201,18,165,18],[201,23,165,23],[201,28,165,28],[201,29,165,29],[201,31,165,31],[202,6,165,33,"markerName"],[202,16,165,43],[202,19,165,46],[202,36,165,63],[203,4,165,65],[204,4,166,4],[204,11,166,11],[204,12,166,12,"supportsInert"],[204,25,166,25],[204,26,166,26],[204,27,166,27],[204,30,166,30,"inertOthers"],[204,41,166,41],[204,44,166,44,"hideOthers"],[204,54,166,54],[204,56,166,56,"originalTarget"],[204,70,166,70],[204,72,166,72,"parentNode"],[204,82,166,82],[204,84,166,84,"markerName"],[204,94,166,94],[204,95,166,95],[205,2,167,0],[205,3,167,1],[206,0,167,2],[206,3]],"functionMap":{"names":["<global>","getDefaultParent","unwrapHost","correctTargets","targets.map$argument_0","targets.map.filter$argument_0","applyAttributeToOthers","keep","deep","Array.prototype.forEach.call$argument_1","<anonymous>","hiddenNodes.forEach$argument_0","hideOthers","inertOthers","supportsInert","suppressOthers"],"mappings":"AAA,uBC;CDM;iBEK;CFE;qBGC;aCE;KDU;gBEC,mCF;CHC;6BMS;eCS;KDM;eEE;sDCI;SD2B;KFC;WII;4BCC;SDc;KJS;CNC;wBYQ;eFK,4BE;CZM;yBaQ;eHI,4BG;CbG;2BcI;CdE;4BeQ;CfG"},"hasCjsExports":false},"type":"js/module"}]}