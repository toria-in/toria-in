{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":29,"index":44},"end":{"line":3,"column":84,"index":99}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"./createResponderEvent","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":10,"column":51,"index":384},"end":{"line":10,"column":84,"index":417}}],"key":"j8Rn/w7huiwryDubu8HSroS+poQ=","exportNames":["*"],"imports":1}},{"name":"./ResponderEventTypes","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":11,"column":27,"index":447},"end":{"line":11,"column":59,"index":479}}],"key":"XyD2A5kTeHmArYKSNNPQ/hBybV8=","exportNames":["*"],"imports":1}},{"name":"./utils","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":12,"column":13,"index":494},"end":{"line":12,"column":31,"index":512}}],"key":"Arg6QRuIuy5D/jfcnxX1qJiHjX8=","exportNames":["*"],"imports":1}},{"name":"./ResponderTouchHistoryStore","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":13,"column":34,"index":548},"end":{"line":13,"column":73,"index":587}}],"key":"fZ99zkTFUrSv/mhLgtcaWkI+gs8=","exportNames":["*"],"imports":1}},{"name":"../canUseDom","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":14,"column":40,"index":629},"end":{"line":14,"column":63,"index":652}}],"key":"H9nuXvJCDdkb32zOAGy+8nYoQXM=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.addNode = addNode;\n  exports.attachListeners = attachListeners;\n  exports.getResponderNode = getResponderNode;\n  exports.removeNode = removeNode;\n  exports.terminateResponder = terminateResponder;\n  var _createResponderEvent = _interopRequireDefault(require(_dependencyMap[1], \"./createResponderEvent\"));\n  var _ResponderEventTypes = require(_dependencyMap[2], \"./ResponderEventTypes\");\n  var _utils = require(_dependencyMap[3], \"./utils\");\n  var _ResponderTouchHistoryStore = require(_dependencyMap[4], \"./ResponderTouchHistoryStore\");\n  var _canUseDom = _interopRequireDefault(require(_dependencyMap[5], \"../canUseDom\"));\n  /**\n   * Copyright (c) Nicolas Gallagher\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  /**\n   * RESPONDER EVENT SYSTEM\n   *\n   * A single, global \"interaction lock\" on views. For a view to be the \"responder\" means\n   * that pointer interactions are exclusive to that view and none other. The \"interaction\n   * lock\" can be transferred (only) to ancestors of the current \"responder\" as long as\n   * pointers continue to be active.\n   *\n   * Responder being granted:\n   *\n   * A view can become the \"responder\" after the following events:\n   *  * \"pointerdown\" (implemented using \"touchstart\", \"mousedown\")\n   *  * \"pointermove\" (implemented using \"touchmove\", \"mousemove\")\n   *  * \"scroll\" (while a pointer is down)\n   *  * \"selectionchange\" (while a pointer is down)\n   *\n   * If nothing is already the \"responder\", the event propagates to (capture) and from\n   * (bubble) the event target until a view returns `true` for\n   * `on*ShouldSetResponder(Capture)`.\n   *\n   * If something is already the responder, the event propagates to (capture) and from\n   * (bubble) the lowest common ancestor of the event target and the current \"responder\".\n   * Then negotiation happens between the current \"responder\" and a view that wants to\n   * become the \"responder\": see the timing diagram below.\n   *\n   * (NOTE: Scrolled views either automatically become the \"responder\" or release the\n   * \"interaction lock\". A native scroll view that isn't built on top of the responder\n   * system must result in the current \"responder\" being notified that it no longer has\n   * the \"interaction lock\" - the native system has taken over.\n   *\n   * Responder being released:\n   *\n   * As soon as there are no more active pointers that *started* inside descendants\n   * of the *current* \"responder\", an `onResponderRelease` event is dispatched to the\n   * current \"responder\", and the responder lock is released.\n   *\n   * Typical sequence of events:\n   *  * startShouldSetResponder\n   *  * responderGrant/Reject\n   *  * responderStart\n   *  * responderMove\n   *  * responderEnd\n   *  * responderRelease\n   */\n\n  /*                                             Negotiation Performed\n                                               +-----------------------+\n                                              /                         \\\n  Process low level events to    +     Current Responder      +   wantsResponderID\n  determine who to perform negot-|   (if any exists at all)   |\n  iation/transition              | Otherwise just pass through|\n  -------------------------------+----------------------------+------------------+\n  Bubble to find first ID        |                            |\n  to return true:wantsResponderID|                            |\n                                 |                            |\n       +--------------+          |                            |\n       | onTouchStart |          |                            |\n       +------+-------+    none  |                            |\n              |            return|                            |\n  +-----------v-------------+true| +------------------------+ |\n  |onStartShouldSetResponder|----->| onResponderStart (cur) |<-----------+\n  +-----------+-------------+    | +------------------------+ |          |\n              |                  |                            | +--------+-------+\n              | returned true for|       false:REJECT +-------->|onResponderReject\n              | wantsResponderID |                    |       | +----------------+\n              | (now attempt     | +------------------+-----+ |\n              |  handoff)        | | onResponder            | |\n              +------------------->|    TerminationRequest  | |\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |         true:GRANT +-------->|onResponderGrant|\n                                 |                            | +--------+-------+\n                                 | +------------------------+ |          |\n                                 | | onResponderTerminate   |<-----------+\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |                    +-------->|onResponderStart|\n                                 |                            | +----------------+\n  Bubble to find first ID        |                            |\n  to return true:wantsResponderID|                            |\n                                 |                            |\n       +-------------+           |                            |\n       | onTouchMove |           |                            |\n       +------+------+     none  |                            |\n              |            return|                            |\n  +-----------v-------------+true| +------------------------+ |\n  |onMoveShouldSetResponder |----->| onResponderMove (cur)  |<-----------+\n  +-----------+-------------+    | +------------------------+ |          |\n              |                  |                            | +--------+-------+\n              | returned true for|       false:REJECT +-------->|onResponderReject\n              | wantsResponderID |                    |       | +----------------+\n              | (now attempt     | +------------------+-----+ |\n              |  handoff)        | |   onResponder          | |\n              +------------------->|      TerminationRequest| |\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |         true:GRANT +-------->|onResponderGrant|\n                                 |                            | +--------+-------+\n                                 | +------------------------+ |          |\n                                 | |   onResponderTerminate |<-----------+\n                                 | +------------------+-----+ |\n                                 |                    |       | +----------------+\n                                 |                    +-------->|onResponderMove |\n                                 |                            | +----------------+\n                                 |                            |\n                                 |                            |\n        Some active touch started|                            |\n        inside current responder | +------------------------+ |\n        +------------------------->|      onResponderEnd    | |\n        |                        | +------------------------+ |\n    +---+---------+              |                            |\n    | onTouchEnd  |              |                            |\n    +---+---------+              |                            |\n        |                        | +------------------------+ |\n        +------------------------->|     onResponderEnd     | |\n        No active touches started| +-----------+------------+ |\n        inside current responder |             |              |\n                                 |             v              |\n                                 | +------------------------+ |\n                                 | |    onResponderRelease  | |\n                                 | +------------------------+ |\n                                 |                            |\n                                 +                            + */\n\n  /* ------------ TYPES ------------ */\n\n  var emptyObject = {};\n\n  /* ------------ IMPLEMENTATION ------------ */\n\n  var startRegistration = ['onStartShouldSetResponderCapture', 'onStartShouldSetResponder', {\n    bubbles: true\n  }];\n  var moveRegistration = ['onMoveShouldSetResponderCapture', 'onMoveShouldSetResponder', {\n    bubbles: true\n  }];\n  var scrollRegistration = ['onScrollShouldSetResponderCapture', 'onScrollShouldSetResponder', {\n    bubbles: false\n  }];\n  var shouldSetResponderEvents = {\n    touchstart: startRegistration,\n    mousedown: startRegistration,\n    touchmove: moveRegistration,\n    mousemove: moveRegistration,\n    scroll: scrollRegistration\n  };\n  var emptyResponder = {\n    id: null,\n    idPath: null,\n    node: null\n  };\n  var responderListenersMap = new Map();\n  var isEmulatingMouseEvents = false;\n  var trackedTouchCount = 0;\n  var currentResponder = {\n    id: null,\n    node: null,\n    idPath: null\n  };\n  var responderTouchHistoryStore = new _ResponderTouchHistoryStore.ResponderTouchHistoryStore();\n  function changeCurrentResponder(responder) {\n    currentResponder = responder;\n  }\n  function getResponderConfig(id) {\n    var config = responderListenersMap.get(id);\n    return config != null ? config : emptyObject;\n  }\n\n  /**\n   * Process native events\n   *\n   * A single event listener is used to manage the responder system.\n   * All pointers are tracked in the ResponderTouchHistoryStore. Native events\n   * are interpreted in terms of the Responder System and checked to see if\n   * the responder should be transferred. Each host node that is attached to\n   * the Responder System has an ID, which is used to look up its associated\n   * callbacks.\n   */\n  function eventListener(domEvent) {\n    var eventType = domEvent.type;\n    var eventTarget = domEvent.target;\n\n    /**\n     * Manage emulated events and early bailout.\n     * Since PointerEvent is not used yet (lack of support in older Safari), it's\n     * necessary to manually manage the mess of browser touch/mouse events.\n     * And bailout early for termination events when there is no active responder.\n     */\n\n    // Flag when browser may produce emulated events\n    if (eventType === 'touchstart') {\n      isEmulatingMouseEvents = true;\n    }\n    // Remove flag when browser will not produce emulated events\n    if (eventType === 'touchmove' || trackedTouchCount > 1) {\n      isEmulatingMouseEvents = false;\n    }\n    // Ignore various events in particular circumstances\n    if (\n    // Ignore browser emulated mouse events\n    eventType === 'mousedown' && isEmulatingMouseEvents || eventType === 'mousemove' && isEmulatingMouseEvents ||\n    // Ignore mousemove if a mousedown didn't occur first\n    eventType === 'mousemove' && trackedTouchCount < 1) {\n      return;\n    }\n    // Remove flag after emulated events are finished\n    if (isEmulatingMouseEvents && eventType === 'mouseup') {\n      if (trackedTouchCount === 0) {\n        isEmulatingMouseEvents = false;\n      }\n      return;\n    }\n    var isStartEvent = (0, _ResponderEventTypes.isStartish)(eventType) && (0, _utils.isPrimaryPointerDown)(domEvent);\n    var isMoveEvent = (0, _ResponderEventTypes.isMoveish)(eventType);\n    var isEndEvent = (0, _ResponderEventTypes.isEndish)(eventType);\n    var isScrollEvent = (0, _ResponderEventTypes.isScroll)(eventType);\n    var isSelectionChangeEvent = (0, _ResponderEventTypes.isSelectionChange)(eventType);\n    var responderEvent = (0, _createResponderEvent.default)(domEvent, responderTouchHistoryStore);\n\n    /**\n     * Record the state of active pointers\n     */\n\n    if (isStartEvent || isMoveEvent || isEndEvent) {\n      if (domEvent.touches) {\n        trackedTouchCount = domEvent.touches.length;\n      } else {\n        if (isStartEvent) {\n          trackedTouchCount = 1;\n        } else if (isEndEvent) {\n          trackedTouchCount = 0;\n        }\n      }\n      responderTouchHistoryStore.recordTouchTrack(eventType, responderEvent.nativeEvent);\n    }\n\n    /**\n     * Responder System logic\n     */\n\n    var eventPaths = (0, _utils.getResponderPaths)(domEvent);\n    var wasNegotiated = false;\n    var wantsResponder;\n\n    // If an event occured that might change the current responder...\n    if (isStartEvent || isMoveEvent || isScrollEvent && trackedTouchCount > 0) {\n      // If there is already a responder, prune the event paths to the lowest common ancestor\n      // of the existing responder and deepest target of the event.\n      var currentResponderIdPath = currentResponder.idPath;\n      var eventIdPath = eventPaths.idPath;\n      if (currentResponderIdPath != null && eventIdPath != null) {\n        var lowestCommonAncestor = (0, _utils.getLowestCommonAncestor)(currentResponderIdPath, eventIdPath);\n        if (lowestCommonAncestor != null) {\n          var indexOfLowestCommonAncestor = eventIdPath.indexOf(lowestCommonAncestor);\n          // Skip the current responder so it doesn't receive unexpected \"shouldSet\" events.\n          var index = indexOfLowestCommonAncestor + (lowestCommonAncestor === currentResponder.id ? 1 : 0);\n          eventPaths = {\n            idPath: eventIdPath.slice(index),\n            nodePath: eventPaths.nodePath.slice(index)\n          };\n        } else {\n          eventPaths = null;\n        }\n      }\n      if (eventPaths != null) {\n        // If a node wants to become the responder, attempt to transfer.\n        wantsResponder = findWantsResponder(eventPaths, domEvent, responderEvent);\n        if (wantsResponder != null) {\n          // Sets responder if none exists, or negotates with existing responder.\n          attemptTransfer(responderEvent, wantsResponder);\n          wasNegotiated = true;\n        }\n      }\n    }\n\n    // If there is now a responder, invoke its callbacks for the lifecycle of the gesture.\n    if (currentResponder.id != null && currentResponder.node != null) {\n      var _currentResponder = currentResponder,\n        id = _currentResponder.id,\n        node = _currentResponder.node;\n      var _getResponderConfig = getResponderConfig(id),\n        onResponderStart = _getResponderConfig.onResponderStart,\n        onResponderMove = _getResponderConfig.onResponderMove,\n        onResponderEnd = _getResponderConfig.onResponderEnd,\n        onResponderRelease = _getResponderConfig.onResponderRelease,\n        onResponderTerminate = _getResponderConfig.onResponderTerminate,\n        onResponderTerminationRequest = _getResponderConfig.onResponderTerminationRequest;\n      responderEvent.bubbles = false;\n      responderEvent.cancelable = false;\n      responderEvent.currentTarget = node;\n\n      // Start\n      if (isStartEvent) {\n        if (onResponderStart != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderStart';\n          onResponderStart(responderEvent);\n        }\n      }\n      // Move\n      else if (isMoveEvent) {\n        if (onResponderMove != null) {\n          responderEvent.dispatchConfig.registrationName = 'onResponderMove';\n          onResponderMove(responderEvent);\n        }\n      } else {\n        var isTerminateEvent = (0, _ResponderEventTypes.isCancelish)(eventType) ||\n        // native context menu\n        eventType === 'contextmenu' ||\n        // window blur\n        eventType === 'blur' && eventTarget === window ||\n        // responder (or ancestors) blur\n        eventType === 'blur' && eventTarget.contains(node) && domEvent.relatedTarget !== node ||\n        // native scroll without using a pointer\n        isScrollEvent && trackedTouchCount === 0 ||\n        // native scroll on node that is parent of the responder (allow siblings to scroll)\n        isScrollEvent && eventTarget.contains(node) && eventTarget !== node ||\n        // native select/selectionchange on node\n        isSelectionChangeEvent && (0, _utils.hasValidSelection)(domEvent);\n        var isReleaseEvent = isEndEvent && !isTerminateEvent && !(0, _utils.hasTargetTouches)(node, domEvent.touches);\n\n        // End\n        if (isEndEvent) {\n          if (onResponderEnd != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderEnd';\n            onResponderEnd(responderEvent);\n          }\n        }\n        // Release\n        if (isReleaseEvent) {\n          if (onResponderRelease != null) {\n            responderEvent.dispatchConfig.registrationName = 'onResponderRelease';\n            onResponderRelease(responderEvent);\n          }\n          changeCurrentResponder(emptyResponder);\n        }\n        // Terminate\n        if (isTerminateEvent) {\n          var shouldTerminate = true;\n\n          // Responders can still avoid termination but only for these events.\n          if (eventType === 'contextmenu' || eventType === 'scroll' || eventType === 'selectionchange') {\n            // Only call this function is it wasn't already called during negotiation.\n            if (wasNegotiated) {\n              shouldTerminate = false;\n            } else if (onResponderTerminationRequest != null) {\n              responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n              if (onResponderTerminationRequest(responderEvent) === false) {\n                shouldTerminate = false;\n              }\n            }\n          }\n          if (shouldTerminate) {\n            if (onResponderTerminate != null) {\n              responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n              onResponderTerminate(responderEvent);\n            }\n            changeCurrentResponder(emptyResponder);\n            isEmulatingMouseEvents = false;\n            trackedTouchCount = 0;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Walk the event path to/from the target node. At each node, stop and call the\n   * relevant \"shouldSet\" functions for the given event type. If any of those functions\n   * call \"stopPropagation\" on the event, stop searching for a responder.\n   */\n  function findWantsResponder(eventPaths, domEvent, responderEvent) {\n    var shouldSetCallbacks = shouldSetResponderEvents[domEvent.type]; // for Flow\n\n    if (shouldSetCallbacks != null) {\n      var idPath = eventPaths.idPath,\n        nodePath = eventPaths.nodePath;\n      var shouldSetCallbackCaptureName = shouldSetCallbacks[0];\n      var shouldSetCallbackBubbleName = shouldSetCallbacks[1];\n      var bubbles = shouldSetCallbacks[2].bubbles;\n      var check = function check(id, node, callbackName) {\n        var config = getResponderConfig(id);\n        var shouldSetCallback = config[callbackName];\n        if (shouldSetCallback != null) {\n          responderEvent.currentTarget = node;\n          if (shouldSetCallback(responderEvent) === true) {\n            // Start the path from the potential responder\n            var prunedIdPath = idPath.slice(idPath.indexOf(id));\n            return {\n              id,\n              node,\n              idPath: prunedIdPath\n            };\n          }\n        }\n      };\n\n      // capture\n      for (var i = idPath.length - 1; i >= 0; i--) {\n        var id = idPath[i];\n        var node = nodePath[i];\n        var result = check(id, node, shouldSetCallbackCaptureName);\n        if (result != null) {\n          return result;\n        }\n        if (responderEvent.isPropagationStopped() === true) {\n          return;\n        }\n      }\n\n      // bubble\n      if (bubbles) {\n        for (var _i = 0; _i < idPath.length; _i++) {\n          var _id = idPath[_i];\n          var _node = nodePath[_i];\n          var _result = check(_id, _node, shouldSetCallbackBubbleName);\n          if (_result != null) {\n            return _result;\n          }\n          if (responderEvent.isPropagationStopped() === true) {\n            return;\n          }\n        }\n      } else {\n        var _id2 = idPath[0];\n        var _node2 = nodePath[0];\n        var target = domEvent.target;\n        if (target === _node2) {\n          return check(_id2, _node2, shouldSetCallbackBubbleName);\n        }\n      }\n    }\n  }\n\n  /**\n   * Attempt to transfer the responder.\n   */\n  function attemptTransfer(responderEvent, wantsResponder) {\n    var _currentResponder2 = currentResponder,\n      currentId = _currentResponder2.id,\n      currentNode = _currentResponder2.node;\n    var id = wantsResponder.id,\n      node = wantsResponder.node;\n    var _getResponderConfig2 = getResponderConfig(id),\n      onResponderGrant = _getResponderConfig2.onResponderGrant,\n      onResponderReject = _getResponderConfig2.onResponderReject;\n    responderEvent.bubbles = false;\n    responderEvent.cancelable = false;\n    responderEvent.currentTarget = node;\n\n    // Set responder\n    if (currentId == null) {\n      if (onResponderGrant != null) {\n        responderEvent.currentTarget = node;\n        responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n        onResponderGrant(responderEvent);\n      }\n      changeCurrentResponder(wantsResponder);\n    }\n    // Negotiate with current responder\n    else {\n      var _getResponderConfig3 = getResponderConfig(currentId),\n        onResponderTerminate = _getResponderConfig3.onResponderTerminate,\n        onResponderTerminationRequest = _getResponderConfig3.onResponderTerminationRequest;\n      var allowTransfer = true;\n      if (onResponderTerminationRequest != null) {\n        responderEvent.currentTarget = currentNode;\n        responderEvent.dispatchConfig.registrationName = 'onResponderTerminationRequest';\n        if (onResponderTerminationRequest(responderEvent) === false) {\n          allowTransfer = false;\n        }\n      }\n      if (allowTransfer) {\n        // Terminate existing responder\n        if (onResponderTerminate != null) {\n          responderEvent.currentTarget = currentNode;\n          responderEvent.dispatchConfig.registrationName = 'onResponderTerminate';\n          onResponderTerminate(responderEvent);\n        }\n        // Grant next responder\n        if (onResponderGrant != null) {\n          responderEvent.currentTarget = node;\n          responderEvent.dispatchConfig.registrationName = 'onResponderGrant';\n          onResponderGrant(responderEvent);\n        }\n        changeCurrentResponder(wantsResponder);\n      } else {\n        // Reject responder request\n        if (onResponderReject != null) {\n          responderEvent.currentTarget = node;\n          responderEvent.dispatchConfig.registrationName = 'onResponderReject';\n          onResponderReject(responderEvent);\n        }\n      }\n    }\n  }\n\n  /* ------------ PUBLIC API ------------ */\n\n  /**\n   * Attach Listeners\n   *\n   * Use native events as ReactDOM doesn't have a non-plugin API to implement\n   * this system.\n   */\n  var documentEventsCapturePhase = ['blur', 'scroll'];\n  var documentEventsBubblePhase = [\n  // mouse\n  'mousedown', 'mousemove', 'mouseup', 'dragstart',\n  // touch\n  'touchstart', 'touchmove', 'touchend', 'touchcancel',\n  // other\n  'contextmenu', 'select', 'selectionchange'];\n  function attachListeners() {\n    if (_canUseDom.default && window.__reactResponderSystemActive == null) {\n      window.addEventListener('blur', eventListener);\n      documentEventsBubblePhase.forEach(eventType => {\n        document.addEventListener(eventType, eventListener);\n      });\n      documentEventsCapturePhase.forEach(eventType => {\n        document.addEventListener(eventType, eventListener, true);\n      });\n      window.__reactResponderSystemActive = true;\n    }\n  }\n\n  /**\n   * Register a node with the ResponderSystem.\n   */\n  function addNode(id, node, config) {\n    (0, _utils.setResponderId)(node, id);\n    responderListenersMap.set(id, config);\n  }\n\n  /**\n   * Unregister a node with the ResponderSystem.\n   */\n  function removeNode(id) {\n    if (currentResponder.id === id) {\n      terminateResponder();\n    }\n    if (responderListenersMap.has(id)) {\n      responderListenersMap.delete(id);\n    }\n  }\n\n  /**\n   * Allow the current responder to be terminated from within components to support\n   * more complex requirements, such as use with other React libraries for working\n   * with scroll views, input views, etc.\n   */\n  function terminateResponder() {\n    var _currentResponder3 = currentResponder,\n      id = _currentResponder3.id,\n      node = _currentResponder3.node;\n    if (id != null && node != null) {\n      var _getResponderConfig4 = getResponderConfig(id),\n        onResponderTerminate = _getResponderConfig4.onResponderTerminate;\n      if (onResponderTerminate != null) {\n        var event = (0, _createResponderEvent.default)({}, responderTouchHistoryStore);\n        event.currentTarget = node;\n        onResponderTerminate(event);\n      }\n      changeCurrentResponder(emptyResponder);\n    }\n    isEmulatingMouseEvents = false;\n    trackedTouchCount = 0;\n  }\n\n  /**\n   * Allow unit tests to inspect the current responder in the system.\n   * FOR TESTING ONLY.\n   */\n  function getResponderNode() {\n    return currentResponder.node;\n  }\n});","lineCount":600,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"_interopRequireDefault"],[4,28,3,26],[4,31,3,29,"require"],[4,38,3,36],[4,39,3,36,"_dependencyMap"],[4,53,3,36],[4,104,3,83],[4,105,3,84],[4,106,3,85,"default"],[4,113,3,92],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"__esModule"],[5,20,4,18],[5,23,4,21],[5,27,4,25],[6,2,5,0,"exports"],[6,9,5,7],[6,10,5,8,"addNode"],[6,17,5,15],[6,20,5,18,"addNode"],[6,27,5,25],[7,2,6,0,"exports"],[7,9,6,7],[7,10,6,8,"attachListeners"],[7,25,6,23],[7,28,6,26,"attachListeners"],[7,43,6,41],[8,2,7,0,"exports"],[8,9,7,7],[8,10,7,8,"getResponderNode"],[8,26,7,24],[8,29,7,27,"getResponderNode"],[8,45,7,43],[9,2,8,0,"exports"],[9,9,8,7],[9,10,8,8,"removeNode"],[9,20,8,18],[9,23,8,21,"removeNode"],[9,33,8,31],[10,2,9,0,"exports"],[10,9,9,7],[10,10,9,8,"terminateResponder"],[10,28,9,26],[10,31,9,29,"terminateResponder"],[10,49,9,47],[11,2,10,0],[11,6,10,4,"_createResponderEvent"],[11,27,10,25],[11,30,10,28,"_interopRequireDefault"],[11,52,10,50],[11,53,10,51,"require"],[11,60,10,58],[11,61,10,58,"_dependencyMap"],[11,75,10,58],[11,104,10,83],[11,105,10,84],[11,106,10,85],[12,2,11,0],[12,6,11,4,"_ResponderEventTypes"],[12,26,11,24],[12,29,11,27,"require"],[12,36,11,34],[12,37,11,34,"_dependencyMap"],[12,51,11,34],[12,79,11,58],[12,80,11,59],[13,2,12,0],[13,6,12,4,"_utils"],[13,12,12,10],[13,15,12,13,"require"],[13,22,12,20],[13,23,12,20,"_dependencyMap"],[13,37,12,20],[13,51,12,30],[13,52,12,31],[14,2,13,0],[14,6,13,4,"_ResponderTouchHistoryStore"],[14,33,13,31],[14,36,13,34,"require"],[14,43,13,41],[14,44,13,41,"_dependencyMap"],[14,58,13,41],[14,93,13,72],[14,94,13,73],[15,2,14,0],[15,6,14,4,"_canUseDom"],[15,16,14,14],[15,19,14,17,"_interopRequireDefault"],[15,41,14,39],[15,42,14,40,"require"],[15,49,14,47],[15,50,14,47,"_dependencyMap"],[15,64,14,47],[15,83,14,62],[15,84,14,63],[15,85,14,64],[16,2,15,0],[17,0,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[25,2,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,0,30,0],[32,0,31,0],[33,0,32,0],[34,0,33,0],[35,0,34,0],[36,0,35,0],[37,0,36,0],[38,0,37,0],[39,0,38,0],[40,0,39,0],[41,0,40,0],[42,0,41,0],[43,0,42,0],[44,0,43,0],[45,0,44,0],[46,0,45,0],[47,0,46,0],[48,0,47,0],[49,0,48,0],[50,0,49,0],[51,0,50,0],[52,0,51,0],[53,0,52,0],[54,0,53,0],[55,0,54,0],[56,0,55,0],[57,0,56,0],[58,0,57,0],[59,0,58,0],[60,0,59,0],[61,0,60,0],[62,0,61,0],[63,0,62,0],[64,0,63,0],[65,0,64,0],[66,0,65,0],[67,0,66,0],[68,0,67,0],[70,2,69,0],[71,0,70,0],[72,0,71,0],[73,0,72,0],[74,0,73,0],[75,0,74,0],[76,0,75,0],[77,0,76,0],[78,0,77,0],[79,0,78,0],[80,0,79,0],[81,0,80,0],[82,0,81,0],[83,0,82,0],[84,0,83,0],[85,0,84,0],[86,0,85,0],[87,0,86,0],[88,0,87,0],[89,0,88,0],[90,0,89,0],[91,0,90,0],[92,0,91,0],[93,0,92,0],[94,0,93,0],[95,0,94,0],[96,0,95,0],[97,0,96,0],[98,0,97,0],[99,0,98,0],[100,0,99,0],[101,0,100,0],[102,0,101,0],[103,0,102,0],[104,0,103,0],[105,0,104,0],[106,0,105,0],[107,0,106,0],[108,0,107,0],[109,0,108,0],[110,0,109,0],[111,0,110,0],[112,0,111,0],[113,0,112,0],[114,0,113,0],[115,0,114,0],[116,0,115,0],[117,0,116,0],[118,0,117,0],[119,0,118,0],[120,0,119,0],[121,0,120,0],[122,0,121,0],[123,0,122,0],[124,0,123,0],[125,0,124,0],[126,0,125,0],[127,0,126,0],[128,0,127,0],[129,0,128,0],[130,0,129,0],[131,0,130,0],[132,0,131,0],[133,0,132,0],[134,0,133,0],[135,0,134,0],[136,0,135,0],[137,0,136,0],[138,0,137,0],[139,0,138,0],[140,0,139,0],[141,0,140,0],[142,0,141,0],[143,0,142,0],[144,0,143,0],[145,0,144,0],[146,0,145,0],[147,0,146,0],[149,2,148,0],[151,2,150,0],[151,6,150,4,"emptyObject"],[151,17,150,15],[151,20,150,18],[151,21,150,19],[151,22,150,20],[153,2,152,0],[155,2,154,0],[155,6,154,4,"startRegistration"],[155,23,154,21],[155,26,154,24],[155,27,154,25],[155,61,154,59],[155,63,154,61],[155,90,154,88],[155,92,154,90],[156,4,155,2,"bubbles"],[156,11,155,9],[156,13,155,11],[157,2,156,0],[157,3,156,1],[157,4,156,2],[158,2,157,0],[158,6,157,4,"moveRegistration"],[158,22,157,20],[158,25,157,23],[158,26,157,24],[158,59,157,57],[158,61,157,59],[158,87,157,85],[158,89,157,87],[159,4,158,2,"bubbles"],[159,11,158,9],[159,13,158,11],[160,2,159,0],[160,3,159,1],[160,4,159,2],[161,2,160,0],[161,6,160,4,"scrollRegistration"],[161,24,160,22],[161,27,160,25],[161,28,160,26],[161,63,160,61],[161,65,160,63],[161,93,160,91],[161,95,160,93],[162,4,161,2,"bubbles"],[162,11,161,9],[162,13,161,11],[163,2,162,0],[163,3,162,1],[163,4,162,2],[164,2,163,0],[164,6,163,4,"shouldSetResponderEvents"],[164,30,163,28],[164,33,163,31],[165,4,164,2,"touchstart"],[165,14,164,12],[165,16,164,14,"startRegistration"],[165,33,164,31],[166,4,165,2,"mousedown"],[166,13,165,11],[166,15,165,13,"startRegistration"],[166,32,165,30],[167,4,166,2,"touchmove"],[167,13,166,11],[167,15,166,13,"moveRegistration"],[167,31,166,29],[168,4,167,2,"mousemove"],[168,13,167,11],[168,15,167,13,"moveRegistration"],[168,31,167,29],[169,4,168,2,"scroll"],[169,10,168,8],[169,12,168,10,"scrollRegistration"],[170,2,169,0],[170,3,169,1],[171,2,170,0],[171,6,170,4,"emptyResponder"],[171,20,170,18],[171,23,170,21],[172,4,171,2,"id"],[172,6,171,4],[172,8,171,6],[172,12,171,10],[173,4,172,2,"idPath"],[173,10,172,8],[173,12,172,10],[173,16,172,14],[174,4,173,2,"node"],[174,8,173,6],[174,10,173,8],[175,2,174,0],[175,3,174,1],[176,2,175,0],[176,6,175,4,"responderListenersMap"],[176,27,175,25],[176,30,175,28],[176,34,175,32,"Map"],[176,37,175,35],[176,38,175,36],[176,39,175,37],[177,2,176,0],[177,6,176,4,"isEmulatingMouseEvents"],[177,28,176,26],[177,31,176,29],[177,36,176,34],[178,2,177,0],[178,6,177,4,"trackedTouchCount"],[178,23,177,21],[178,26,177,24],[178,27,177,25],[179,2,178,0],[179,6,178,4,"currentResponder"],[179,22,178,20],[179,25,178,23],[180,4,179,2,"id"],[180,6,179,4],[180,8,179,6],[180,12,179,10],[181,4,180,2,"node"],[181,8,180,6],[181,10,180,8],[181,14,180,12],[182,4,181,2,"idPath"],[182,10,181,8],[182,12,181,10],[183,2,182,0],[183,3,182,1],[184,2,183,0],[184,6,183,4,"responderTouchHistoryStore"],[184,32,183,30],[184,35,183,33],[184,39,183,37,"_ResponderTouchHistoryStore"],[184,66,183,64],[184,67,183,65,"ResponderTouchHistoryStore"],[184,93,183,91],[184,94,183,92],[184,95,183,93],[185,2,184,0],[185,11,184,9,"changeCurrentResponder"],[185,33,184,31,"changeCurrentResponder"],[185,34,184,32,"responder"],[185,43,184,41],[185,45,184,43],[186,4,185,2,"currentResponder"],[186,20,185,18],[186,23,185,21,"responder"],[186,32,185,30],[187,2,186,0],[188,2,187,0],[188,11,187,9,"getResponderConfig"],[188,29,187,27,"getResponderConfig"],[188,30,187,28,"id"],[188,32,187,30],[188,34,187,32],[189,4,188,2],[189,8,188,6,"config"],[189,14,188,12],[189,17,188,15,"responderListenersMap"],[189,38,188,36],[189,39,188,37,"get"],[189,42,188,40],[189,43,188,41,"id"],[189,45,188,43],[189,46,188,44],[190,4,189,2],[190,11,189,9,"config"],[190,17,189,15],[190,21,189,19],[190,25,189,23],[190,28,189,26,"config"],[190,34,189,32],[190,37,189,35,"emptyObject"],[190,48,189,46],[191,2,190,0],[193,2,192,0],[194,0,193,0],[195,0,194,0],[196,0,195,0],[197,0,196,0],[198,0,197,0],[199,0,198,0],[200,0,199,0],[201,0,200,0],[202,0,201,0],[203,2,202,0],[203,11,202,9,"eventListener"],[203,24,202,22,"eventListener"],[203,25,202,23,"domEvent"],[203,33,202,31],[203,35,202,33],[204,4,203,2],[204,8,203,6,"eventType"],[204,17,203,15],[204,20,203,18,"domEvent"],[204,28,203,26],[204,29,203,27,"type"],[204,33,203,31],[205,4,204,2],[205,8,204,6,"eventTarget"],[205,19,204,17],[205,22,204,20,"domEvent"],[205,30,204,28],[205,31,204,29,"target"],[205,37,204,35],[207,4,206,2],[208,0,207,0],[209,0,208,0],[210,0,209,0],[211,0,210,0],[212,0,211,0],[214,4,213,2],[215,4,214,2],[215,8,214,6,"eventType"],[215,17,214,15],[215,22,214,20],[215,34,214,32],[215,36,214,34],[216,6,215,4,"isEmulatingMouseEvents"],[216,28,215,26],[216,31,215,29],[216,35,215,33],[217,4,216,2],[218,4,217,2],[219,4,218,2],[219,8,218,6,"eventType"],[219,17,218,15],[219,22,218,20],[219,33,218,31],[219,37,218,35,"trackedTouchCount"],[219,54,218,52],[219,57,218,55],[219,58,218,56],[219,60,218,58],[220,6,219,4,"isEmulatingMouseEvents"],[220,28,219,26],[220,31,219,29],[220,36,219,34],[221,4,220,2],[222,4,221,2],[223,4,222,2],[224,4,223,2],[225,4,224,2,"eventType"],[225,13,224,11],[225,18,224,16],[225,29,224,27],[225,33,224,31,"isEmulatingMouseEvents"],[225,55,224,53],[225,59,224,57,"eventType"],[225,68,224,66],[225,73,224,71],[225,84,224,82],[225,88,224,86,"isEmulatingMouseEvents"],[225,110,224,108],[226,4,225,2],[227,4,226,2,"eventType"],[227,13,226,11],[227,18,226,16],[227,29,226,27],[227,33,226,31,"trackedTouchCount"],[227,50,226,48],[227,53,226,51],[227,54,226,52],[227,56,226,54],[228,6,227,4],[229,4,228,2],[230,4,229,2],[231,4,230,2],[231,8,230,6,"isEmulatingMouseEvents"],[231,30,230,28],[231,34,230,32,"eventType"],[231,43,230,41],[231,48,230,46],[231,57,230,55],[231,59,230,57],[232,6,231,4],[232,10,231,8,"trackedTouchCount"],[232,27,231,25],[232,32,231,30],[232,33,231,31],[232,35,231,33],[233,8,232,6,"isEmulatingMouseEvents"],[233,30,232,28],[233,33,232,31],[233,38,232,36],[234,6,233,4],[235,6,234,4],[236,4,235,2],[237,4,236,2],[237,8,236,6,"isStartEvent"],[237,20,236,18],[237,23,236,21],[237,24,236,22],[237,25,236,23],[237,27,236,25,"_ResponderEventTypes"],[237,47,236,45],[237,48,236,46,"isStartish"],[237,58,236,56],[237,60,236,58,"eventType"],[237,69,236,67],[237,70,236,68],[237,74,236,72],[237,75,236,73],[237,76,236,74],[237,78,236,76,"_utils"],[237,84,236,82],[237,85,236,83,"isPrimaryPointerDown"],[237,105,236,103],[237,107,236,105,"domEvent"],[237,115,236,113],[237,116,236,114],[238,4,237,2],[238,8,237,6,"isMoveEvent"],[238,19,237,17],[238,22,237,20],[238,23,237,21],[238,24,237,22],[238,26,237,24,"_ResponderEventTypes"],[238,46,237,44],[238,47,237,45,"isMoveish"],[238,56,237,54],[238,58,237,56,"eventType"],[238,67,237,65],[238,68,237,66],[239,4,238,2],[239,8,238,6,"isEndEvent"],[239,18,238,16],[239,21,238,19],[239,22,238,20],[239,23,238,21],[239,25,238,23,"_ResponderEventTypes"],[239,45,238,43],[239,46,238,44,"isEndish"],[239,54,238,52],[239,56,238,54,"eventType"],[239,65,238,63],[239,66,238,64],[240,4,239,2],[240,8,239,6,"isScrollEvent"],[240,21,239,19],[240,24,239,22],[240,25,239,23],[240,26,239,24],[240,28,239,26,"_ResponderEventTypes"],[240,48,239,46],[240,49,239,47,"isScroll"],[240,57,239,55],[240,59,239,57,"eventType"],[240,68,239,66],[240,69,239,67],[241,4,240,2],[241,8,240,6,"isSelectionChangeEvent"],[241,30,240,28],[241,33,240,31],[241,34,240,32],[241,35,240,33],[241,37,240,35,"_ResponderEventTypes"],[241,57,240,55],[241,58,240,56,"isSelectionChange"],[241,75,240,73],[241,77,240,75,"eventType"],[241,86,240,84],[241,87,240,85],[242,4,241,2],[242,8,241,6,"responderEvent"],[242,22,241,20],[242,25,241,23],[242,26,241,24],[242,27,241,25],[242,29,241,27,"_createResponderEvent"],[242,50,241,48],[242,51,241,49,"default"],[242,58,241,56],[242,60,241,58,"domEvent"],[242,68,241,66],[242,70,241,68,"responderTouchHistoryStore"],[242,96,241,94],[242,97,241,95],[244,4,243,2],[245,0,244,0],[246,0,245,0],[248,4,247,2],[248,8,247,6,"isStartEvent"],[248,20,247,18],[248,24,247,22,"isMoveEvent"],[248,35,247,33],[248,39,247,37,"isEndEvent"],[248,49,247,47],[248,51,247,49],[249,6,248,4],[249,10,248,8,"domEvent"],[249,18,248,16],[249,19,248,17,"touches"],[249,26,248,24],[249,28,248,26],[250,8,249,6,"trackedTouchCount"],[250,25,249,23],[250,28,249,26,"domEvent"],[250,36,249,34],[250,37,249,35,"touches"],[250,44,249,42],[250,45,249,43,"length"],[250,51,249,49],[251,6,250,4],[251,7,250,5],[251,13,250,11],[252,8,251,6],[252,12,251,10,"isStartEvent"],[252,24,251,22],[252,26,251,24],[253,10,252,8,"trackedTouchCount"],[253,27,252,25],[253,30,252,28],[253,31,252,29],[254,8,253,6],[254,9,253,7],[254,15,253,13],[254,19,253,17,"isEndEvent"],[254,29,253,27],[254,31,253,29],[255,10,254,8,"trackedTouchCount"],[255,27,254,25],[255,30,254,28],[255,31,254,29],[256,8,255,6],[257,6,256,4],[258,6,257,4,"responderTouchHistoryStore"],[258,32,257,30],[258,33,257,31,"recordTouchTrack"],[258,49,257,47],[258,50,257,48,"eventType"],[258,59,257,57],[258,61,257,59,"responderEvent"],[258,75,257,73],[258,76,257,74,"nativeEvent"],[258,87,257,85],[258,88,257,86],[259,4,258,2],[261,4,260,2],[262,0,261,0],[263,0,262,0],[265,4,264,2],[265,8,264,6,"eventPaths"],[265,18,264,16],[265,21,264,19],[265,22,264,20],[265,23,264,21],[265,25,264,23,"_utils"],[265,31,264,29],[265,32,264,30,"getResponderPaths"],[265,49,264,47],[265,51,264,49,"domEvent"],[265,59,264,57],[265,60,264,58],[266,4,265,2],[266,8,265,6,"wasNegotiated"],[266,21,265,19],[266,24,265,22],[266,29,265,27],[267,4,266,2],[267,8,266,6,"wantsResponder"],[267,22,266,20],[269,4,268,2],[270,4,269,2],[270,8,269,6,"isStartEvent"],[270,20,269,18],[270,24,269,22,"isMoveEvent"],[270,35,269,33],[270,39,269,37,"isScrollEvent"],[270,52,269,50],[270,56,269,54,"trackedTouchCount"],[270,73,269,71],[270,76,269,74],[270,77,269,75],[270,79,269,77],[271,6,270,4],[272,6,271,4],[273,6,272,4],[273,10,272,8,"currentResponderIdPath"],[273,32,272,30],[273,35,272,33,"currentResponder"],[273,51,272,49],[273,52,272,50,"idPath"],[273,58,272,56],[274,6,273,4],[274,10,273,8,"eventIdPath"],[274,21,273,19],[274,24,273,22,"eventPaths"],[274,34,273,32],[274,35,273,33,"idPath"],[274,41,273,39],[275,6,274,4],[275,10,274,8,"currentResponderIdPath"],[275,32,274,30],[275,36,274,34],[275,40,274,38],[275,44,274,42,"eventIdPath"],[275,55,274,53],[275,59,274,57],[275,63,274,61],[275,65,274,63],[276,8,275,6],[276,12,275,10,"lowestCommonAncestor"],[276,32,275,30],[276,35,275,33],[276,36,275,34],[276,37,275,35],[276,39,275,37,"_utils"],[276,45,275,43],[276,46,275,44,"getLowestCommonAncestor"],[276,69,275,67],[276,71,275,69,"currentResponderIdPath"],[276,93,275,91],[276,95,275,93,"eventIdPath"],[276,106,275,104],[276,107,275,105],[277,8,276,6],[277,12,276,10,"lowestCommonAncestor"],[277,32,276,30],[277,36,276,34],[277,40,276,38],[277,42,276,40],[278,10,277,8],[278,14,277,12,"indexOfLowestCommonAncestor"],[278,41,277,39],[278,44,277,42,"eventIdPath"],[278,55,277,53],[278,56,277,54,"indexOf"],[278,63,277,61],[278,64,277,62,"lowestCommonAncestor"],[278,84,277,82],[278,85,277,83],[279,10,278,8],[280,10,279,8],[280,14,279,12,"index"],[280,19,279,17],[280,22,279,20,"indexOfLowestCommonAncestor"],[280,49,279,47],[280,53,279,51,"lowestCommonAncestor"],[280,73,279,71],[280,78,279,76,"currentResponder"],[280,94,279,92],[280,95,279,93,"id"],[280,97,279,95],[280,100,279,98],[280,101,279,99],[280,104,279,102],[280,105,279,103],[280,106,279,104],[281,10,280,8,"eventPaths"],[281,20,280,18],[281,23,280,21],[282,12,281,10,"idPath"],[282,18,281,16],[282,20,281,18,"eventIdPath"],[282,31,281,29],[282,32,281,30,"slice"],[282,37,281,35],[282,38,281,36,"index"],[282,43,281,41],[282,44,281,42],[283,12,282,10,"nodePath"],[283,20,282,18],[283,22,282,20,"eventPaths"],[283,32,282,30],[283,33,282,31,"nodePath"],[283,41,282,39],[283,42,282,40,"slice"],[283,47,282,45],[283,48,282,46,"index"],[283,53,282,51],[284,10,283,8],[284,11,283,9],[285,8,284,6],[285,9,284,7],[285,15,284,13],[286,10,285,8,"eventPaths"],[286,20,285,18],[286,23,285,21],[286,27,285,25],[287,8,286,6],[288,6,287,4],[289,6,288,4],[289,10,288,8,"eventPaths"],[289,20,288,18],[289,24,288,22],[289,28,288,26],[289,30,288,28],[290,8,289,6],[291,8,290,6,"wantsResponder"],[291,22,290,20],[291,25,290,23,"findWantsResponder"],[291,43,290,41],[291,44,290,42,"eventPaths"],[291,54,290,52],[291,56,290,54,"domEvent"],[291,64,290,62],[291,66,290,64,"responderEvent"],[291,80,290,78],[291,81,290,79],[292,8,291,6],[292,12,291,10,"wantsResponder"],[292,26,291,24],[292,30,291,28],[292,34,291,32],[292,36,291,34],[293,10,292,8],[294,10,293,8,"attemptTransfer"],[294,25,293,23],[294,26,293,24,"responderEvent"],[294,40,293,38],[294,42,293,40,"wantsResponder"],[294,56,293,54],[294,57,293,55],[295,10,294,8,"wasNegotiated"],[295,23,294,21],[295,26,294,24],[295,30,294,28],[296,8,295,6],[297,6,296,4],[298,4,297,2],[300,4,299,2],[301,4,300,2],[301,8,300,6,"currentResponder"],[301,24,300,22],[301,25,300,23,"id"],[301,27,300,25],[301,31,300,29],[301,35,300,33],[301,39,300,37,"currentResponder"],[301,55,300,53],[301,56,300,54,"node"],[301,60,300,58],[301,64,300,62],[301,68,300,66],[301,70,300,68],[302,6,301,4],[302,10,301,8,"_currentResponder"],[302,27,301,25],[302,30,301,28,"currentResponder"],[302,46,301,44],[303,8,302,6,"id"],[303,10,302,8],[303,13,302,11,"_currentResponder"],[303,30,302,28],[303,31,302,29,"id"],[303,33,302,31],[304,8,303,6,"node"],[304,12,303,10],[304,15,303,13,"_currentResponder"],[304,32,303,30],[304,33,303,31,"node"],[304,37,303,35],[305,6,304,4],[305,10,304,8,"_getResponderConfig"],[305,29,304,27],[305,32,304,30,"getResponderConfig"],[305,50,304,48],[305,51,304,49,"id"],[305,53,304,51],[305,54,304,52],[306,8,305,6,"onResponderStart"],[306,24,305,22],[306,27,305,25,"_getResponderConfig"],[306,46,305,44],[306,47,305,45,"onResponderStart"],[306,63,305,61],[307,8,306,6,"onResponderMove"],[307,23,306,21],[307,26,306,24,"_getResponderConfig"],[307,45,306,43],[307,46,306,44,"onResponderMove"],[307,61,306,59],[308,8,307,6,"onResponderEnd"],[308,22,307,20],[308,25,307,23,"_getResponderConfig"],[308,44,307,42],[308,45,307,43,"onResponderEnd"],[308,59,307,57],[309,8,308,6,"onResponderRelease"],[309,26,308,24],[309,29,308,27,"_getResponderConfig"],[309,48,308,46],[309,49,308,47,"onResponderRelease"],[309,67,308,65],[310,8,309,6,"onResponderTerminate"],[310,28,309,26],[310,31,309,29,"_getResponderConfig"],[310,50,309,48],[310,51,309,49,"onResponderTerminate"],[310,71,309,69],[311,8,310,6,"onResponderTerminationRequest"],[311,37,310,35],[311,40,310,38,"_getResponderConfig"],[311,59,310,57],[311,60,310,58,"onResponderTerminationRequest"],[311,89,310,87],[312,6,311,4,"responderEvent"],[312,20,311,18],[312,21,311,19,"bubbles"],[312,28,311,26],[312,31,311,29],[312,36,311,34],[313,6,312,4,"responderEvent"],[313,20,312,18],[313,21,312,19,"cancelable"],[313,31,312,29],[313,34,312,32],[313,39,312,37],[314,6,313,4,"responderEvent"],[314,20,313,18],[314,21,313,19,"currentTarget"],[314,34,313,32],[314,37,313,35,"node"],[314,41,313,39],[316,6,315,4],[317,6,316,4],[317,10,316,8,"isStartEvent"],[317,22,316,20],[317,24,316,22],[318,8,317,6],[318,12,317,10,"onResponderStart"],[318,28,317,26],[318,32,317,30],[318,36,317,34],[318,38,317,36],[319,10,318,8,"responderEvent"],[319,24,318,22],[319,25,318,23,"dispatchConfig"],[319,39,318,37],[319,40,318,38,"registrationName"],[319,56,318,54],[319,59,318,57],[319,77,318,75],[320,10,319,8,"onResponderStart"],[320,26,319,24],[320,27,319,25,"responderEvent"],[320,41,319,39],[320,42,319,40],[321,8,320,6],[322,6,321,4],[323,6,322,4],[324,6,322,4],[324,11,323,9],[324,15,323,13,"isMoveEvent"],[324,26,323,24],[324,28,323,26],[325,8,324,6],[325,12,324,10,"onResponderMove"],[325,27,324,25],[325,31,324,29],[325,35,324,33],[325,37,324,35],[326,10,325,8,"responderEvent"],[326,24,325,22],[326,25,325,23,"dispatchConfig"],[326,39,325,37],[326,40,325,38,"registrationName"],[326,56,325,54],[326,59,325,57],[326,76,325,74],[327,10,326,8,"onResponderMove"],[327,25,326,23],[327,26,326,24,"responderEvent"],[327,40,326,38],[327,41,326,39],[328,8,327,6],[329,6,328,4],[329,7,328,5],[329,13,328,11],[330,8,329,6],[330,12,329,10,"isTerminateEvent"],[330,28,329,26],[330,31,329,29],[330,32,329,30],[330,33,329,31],[330,35,329,33,"_ResponderEventTypes"],[330,55,329,53],[330,56,329,54,"isCancelish"],[330,67,329,65],[330,69,329,67,"eventType"],[330,78,329,76],[330,79,329,77],[331,8,330,6],[332,8,331,6,"eventType"],[332,17,331,15],[332,22,331,20],[332,35,331,33],[333,8,332,6],[334,8,333,6,"eventType"],[334,17,333,15],[334,22,333,20],[334,28,333,26],[334,32,333,30,"eventTarget"],[334,43,333,41],[334,48,333,46,"window"],[334,54,333,52],[335,8,334,6],[336,8,335,6,"eventType"],[336,17,335,15],[336,22,335,20],[336,28,335,26],[336,32,335,30,"eventTarget"],[336,43,335,41],[336,44,335,42,"contains"],[336,52,335,50],[336,53,335,51,"node"],[336,57,335,55],[336,58,335,56],[336,62,335,60,"domEvent"],[336,70,335,68],[336,71,335,69,"relatedTarget"],[336,84,335,82],[336,89,335,87,"node"],[336,93,335,91],[337,8,336,6],[338,8,337,6,"isScrollEvent"],[338,21,337,19],[338,25,337,23,"trackedTouchCount"],[338,42,337,40],[338,47,337,45],[338,48,337,46],[339,8,338,6],[340,8,339,6,"isScrollEvent"],[340,21,339,19],[340,25,339,23,"eventTarget"],[340,36,339,34],[340,37,339,35,"contains"],[340,45,339,43],[340,46,339,44,"node"],[340,50,339,48],[340,51,339,49],[340,55,339,53,"eventTarget"],[340,66,339,64],[340,71,339,69,"node"],[340,75,339,73],[341,8,340,6],[342,8,341,6,"isSelectionChangeEvent"],[342,30,341,28],[342,34,341,32],[342,35,341,33],[342,36,341,34],[342,38,341,36,"_utils"],[342,44,341,42],[342,45,341,43,"hasValidSelection"],[342,62,341,60],[342,64,341,62,"domEvent"],[342,72,341,70],[342,73,341,71],[343,8,342,6],[343,12,342,10,"isReleaseEvent"],[343,26,342,24],[343,29,342,27,"isEndEvent"],[343,39,342,37],[343,43,342,41],[343,44,342,42,"isTerminateEvent"],[343,60,342,58],[343,64,342,62],[343,65,342,63],[343,66,342,64],[343,67,342,65],[343,69,342,67,"_utils"],[343,75,342,73],[343,76,342,74,"hasTargetTouches"],[343,92,342,90],[343,94,342,92,"node"],[343,98,342,96],[343,100,342,98,"domEvent"],[343,108,342,106],[343,109,342,107,"touches"],[343,116,342,114],[343,117,342,115],[345,8,344,6],[346,8,345,6],[346,12,345,10,"isEndEvent"],[346,22,345,20],[346,24,345,22],[347,10,346,8],[347,14,346,12,"onResponderEnd"],[347,28,346,26],[347,32,346,30],[347,36,346,34],[347,38,346,36],[348,12,347,10,"responderEvent"],[348,26,347,24],[348,27,347,25,"dispatchConfig"],[348,41,347,39],[348,42,347,40,"registrationName"],[348,58,347,56],[348,61,347,59],[348,77,347,75],[349,12,348,10,"onResponderEnd"],[349,26,348,24],[349,27,348,25,"responderEvent"],[349,41,348,39],[349,42,348,40],[350,10,349,8],[351,8,350,6],[352,8,351,6],[353,8,352,6],[353,12,352,10,"isReleaseEvent"],[353,26,352,24],[353,28,352,26],[354,10,353,8],[354,14,353,12,"onResponderRelease"],[354,32,353,30],[354,36,353,34],[354,40,353,38],[354,42,353,40],[355,12,354,10,"responderEvent"],[355,26,354,24],[355,27,354,25,"dispatchConfig"],[355,41,354,39],[355,42,354,40,"registrationName"],[355,58,354,56],[355,61,354,59],[355,81,354,79],[356,12,355,10,"onResponderRelease"],[356,30,355,28],[356,31,355,29,"responderEvent"],[356,45,355,43],[356,46,355,44],[357,10,356,8],[358,10,357,8,"changeCurrentResponder"],[358,32,357,30],[358,33,357,31,"emptyResponder"],[358,47,357,45],[358,48,357,46],[359,8,358,6],[360,8,359,6],[361,8,360,6],[361,12,360,10,"isTerminateEvent"],[361,28,360,26],[361,30,360,28],[362,10,361,8],[362,14,361,12,"shouldTerminate"],[362,29,361,27],[362,32,361,30],[362,36,361,34],[364,10,363,8],[365,10,364,8],[365,14,364,12,"eventType"],[365,23,364,21],[365,28,364,26],[365,41,364,39],[365,45,364,43,"eventType"],[365,54,364,52],[365,59,364,57],[365,67,364,65],[365,71,364,69,"eventType"],[365,80,364,78],[365,85,364,83],[365,102,364,100],[365,104,364,102],[366,12,365,10],[367,12,366,10],[367,16,366,14,"wasNegotiated"],[367,29,366,27],[367,31,366,29],[368,14,367,12,"shouldTerminate"],[368,29,367,27],[368,32,367,30],[368,37,367,35],[369,12,368,10],[369,13,368,11],[369,19,368,17],[369,23,368,21,"onResponderTerminationRequest"],[369,52,368,50],[369,56,368,54],[369,60,368,58],[369,62,368,60],[370,14,369,12,"responderEvent"],[370,28,369,26],[370,29,369,27,"dispatchConfig"],[370,43,369,41],[370,44,369,42,"registrationName"],[370,60,369,58],[370,63,369,61],[370,94,369,92],[371,14,370,12],[371,18,370,16,"onResponderTerminationRequest"],[371,47,370,45],[371,48,370,46,"responderEvent"],[371,62,370,60],[371,63,370,61],[371,68,370,66],[371,73,370,71],[371,75,370,73],[372,16,371,14,"shouldTerminate"],[372,31,371,29],[372,34,371,32],[372,39,371,37],[373,14,372,12],[374,12,373,10],[375,10,374,8],[376,10,375,8],[376,14,375,12,"shouldTerminate"],[376,29,375,27],[376,31,375,29],[377,12,376,10],[377,16,376,14,"onResponderTerminate"],[377,36,376,34],[377,40,376,38],[377,44,376,42],[377,46,376,44],[378,14,377,12,"responderEvent"],[378,28,377,26],[378,29,377,27,"dispatchConfig"],[378,43,377,41],[378,44,377,42,"registrationName"],[378,60,377,58],[378,63,377,61],[378,85,377,83],[379,14,378,12,"onResponderTerminate"],[379,34,378,32],[379,35,378,33,"responderEvent"],[379,49,378,47],[379,50,378,48],[380,12,379,10],[381,12,380,10,"changeCurrentResponder"],[381,34,380,32],[381,35,380,33,"emptyResponder"],[381,49,380,47],[381,50,380,48],[382,12,381,10,"isEmulatingMouseEvents"],[382,34,381,32],[382,37,381,35],[382,42,381,40],[383,12,382,10,"trackedTouchCount"],[383,29,382,27],[383,32,382,30],[383,33,382,31],[384,10,383,8],[385,8,384,6],[386,6,385,4],[387,4,386,2],[388,2,387,0],[390,2,389,0],[391,0,390,0],[392,0,391,0],[393,0,392,0],[394,0,393,0],[395,2,394,0],[395,11,394,9,"findWantsResponder"],[395,29,394,27,"findWantsResponder"],[395,30,394,28,"eventPaths"],[395,40,394,38],[395,42,394,40,"domEvent"],[395,50,394,48],[395,52,394,50,"responderEvent"],[395,66,394,64],[395,68,394,66],[396,4,395,2],[396,8,395,6,"shouldSetCallbacks"],[396,26,395,24],[396,29,395,27,"shouldSetResponderEvents"],[396,53,395,51],[396,54,395,52,"domEvent"],[396,62,395,60],[396,63,395,61,"type"],[396,67,395,65],[396,68,395,66],[396,69,395,67],[396,70,395,68],[398,4,397,2],[398,8,397,6,"shouldSetCallbacks"],[398,26,397,24],[398,30,397,28],[398,34,397,32],[398,36,397,34],[399,6,398,4],[399,10,398,8,"idPath"],[399,16,398,14],[399,19,398,17,"eventPaths"],[399,29,398,27],[399,30,398,28,"idPath"],[399,36,398,34],[400,8,399,6,"nodePath"],[400,16,399,14],[400,19,399,17,"eventPaths"],[400,29,399,27],[400,30,399,28,"nodePath"],[400,38,399,36],[401,6,400,4],[401,10,400,8,"shouldSetCallbackCaptureName"],[401,38,400,36],[401,41,400,39,"shouldSetCallbacks"],[401,59,400,57],[401,60,400,58],[401,61,400,59],[401,62,400,60],[402,6,401,4],[402,10,401,8,"shouldSetCallbackBubbleName"],[402,37,401,35],[402,40,401,38,"shouldSetCallbacks"],[402,58,401,56],[402,59,401,57],[402,60,401,58],[402,61,401,59],[403,6,402,4],[403,10,402,8,"bubbles"],[403,17,402,15],[403,20,402,18,"shouldSetCallbacks"],[403,38,402,36],[403,39,402,37],[403,40,402,38],[403,41,402,39],[403,42,402,40,"bubbles"],[403,49,402,47],[404,6,403,4],[404,10,403,8,"check"],[404,15,403,13],[404,18,403,16],[404,27,403,25,"check"],[404,32,403,30,"check"],[404,33,403,31,"id"],[404,35,403,33],[404,37,403,35,"node"],[404,41,403,39],[404,43,403,41,"callbackName"],[404,55,403,53],[404,57,403,55],[405,8,404,6],[405,12,404,10,"config"],[405,18,404,16],[405,21,404,19,"getResponderConfig"],[405,39,404,37],[405,40,404,38,"id"],[405,42,404,40],[405,43,404,41],[406,8,405,6],[406,12,405,10,"shouldSetCallback"],[406,29,405,27],[406,32,405,30,"config"],[406,38,405,36],[406,39,405,37,"callbackName"],[406,51,405,49],[406,52,405,50],[407,8,406,6],[407,12,406,10,"shouldSetCallback"],[407,29,406,27],[407,33,406,31],[407,37,406,35],[407,39,406,37],[408,10,407,8,"responderEvent"],[408,24,407,22],[408,25,407,23,"currentTarget"],[408,38,407,36],[408,41,407,39,"node"],[408,45,407,43],[409,10,408,8],[409,14,408,12,"shouldSetCallback"],[409,31,408,29],[409,32,408,30,"responderEvent"],[409,46,408,44],[409,47,408,45],[409,52,408,50],[409,56,408,54],[409,58,408,56],[410,12,409,10],[411,12,410,10],[411,16,410,14,"prunedIdPath"],[411,28,410,26],[411,31,410,29,"idPath"],[411,37,410,35],[411,38,410,36,"slice"],[411,43,410,41],[411,44,410,42,"idPath"],[411,50,410,48],[411,51,410,49,"indexOf"],[411,58,410,56],[411,59,410,57,"id"],[411,61,410,59],[411,62,410,60],[411,63,410,61],[412,12,411,10],[412,19,411,17],[413,14,412,12,"id"],[413,16,412,14],[414,14,413,12,"node"],[414,18,413,16],[415,14,414,12,"idPath"],[415,20,414,18],[415,22,414,20,"prunedIdPath"],[416,12,415,10],[416,13,415,11],[417,10,416,8],[418,8,417,6],[419,6,418,4],[419,7,418,5],[421,6,420,4],[422,6,421,4],[422,11,421,9],[422,15,421,13,"i"],[422,16,421,14],[422,19,421,17,"idPath"],[422,25,421,23],[422,26,421,24,"length"],[422,32,421,30],[422,35,421,33],[422,36,421,34],[422,38,421,36,"i"],[422,39,421,37],[422,43,421,41],[422,44,421,42],[422,46,421,44,"i"],[422,47,421,45],[422,49,421,47],[422,51,421,49],[423,8,422,6],[423,12,422,10,"id"],[423,14,422,12],[423,17,422,15,"idPath"],[423,23,422,21],[423,24,422,22,"i"],[423,25,422,23],[423,26,422,24],[424,8,423,6],[424,12,423,10,"node"],[424,16,423,14],[424,19,423,17,"nodePath"],[424,27,423,25],[424,28,423,26,"i"],[424,29,423,27],[424,30,423,28],[425,8,424,6],[425,12,424,10,"result"],[425,18,424,16],[425,21,424,19,"check"],[425,26,424,24],[425,27,424,25,"id"],[425,29,424,27],[425,31,424,29,"node"],[425,35,424,33],[425,37,424,35,"shouldSetCallbackCaptureName"],[425,65,424,63],[425,66,424,64],[426,8,425,6],[426,12,425,10,"result"],[426,18,425,16],[426,22,425,20],[426,26,425,24],[426,28,425,26],[427,10,426,8],[427,17,426,15,"result"],[427,23,426,21],[428,8,427,6],[429,8,428,6],[429,12,428,10,"responderEvent"],[429,26,428,24],[429,27,428,25,"isPropagationStopped"],[429,47,428,45],[429,48,428,46],[429,49,428,47],[429,54,428,52],[429,58,428,56],[429,60,428,58],[430,10,429,8],[431,8,430,6],[432,6,431,4],[434,6,433,4],[435,6,434,4],[435,10,434,8,"bubbles"],[435,17,434,15],[435,19,434,17],[436,8,435,6],[436,13,435,11],[436,17,435,15,"_i"],[436,19,435,17],[436,22,435,20],[436,23,435,21],[436,25,435,23,"_i"],[436,27,435,25],[436,30,435,28,"idPath"],[436,36,435,34],[436,37,435,35,"length"],[436,43,435,41],[436,45,435,43,"_i"],[436,47,435,45],[436,49,435,47],[436,51,435,49],[437,10,436,8],[437,14,436,12,"_id"],[437,17,436,15],[437,20,436,18,"idPath"],[437,26,436,24],[437,27,436,25,"_i"],[437,29,436,27],[437,30,436,28],[438,10,437,8],[438,14,437,12,"_node"],[438,19,437,17],[438,22,437,20,"nodePath"],[438,30,437,28],[438,31,437,29,"_i"],[438,33,437,31],[438,34,437,32],[439,10,438,8],[439,14,438,12,"_result"],[439,21,438,19],[439,24,438,22,"check"],[439,29,438,27],[439,30,438,28,"_id"],[439,33,438,31],[439,35,438,33,"_node"],[439,40,438,38],[439,42,438,40,"shouldSetCallbackBubbleName"],[439,69,438,67],[439,70,438,68],[440,10,439,8],[440,14,439,12,"_result"],[440,21,439,19],[440,25,439,23],[440,29,439,27],[440,31,439,29],[441,12,440,10],[441,19,440,17,"_result"],[441,26,440,24],[442,10,441,8],[443,10,442,8],[443,14,442,12,"responderEvent"],[443,28,442,26],[443,29,442,27,"isPropagationStopped"],[443,49,442,47],[443,50,442,48],[443,51,442,49],[443,56,442,54],[443,60,442,58],[443,62,442,60],[444,12,443,10],[445,10,444,8],[446,8,445,6],[447,6,446,4],[447,7,446,5],[447,13,446,11],[448,8,447,6],[448,12,447,10,"_id2"],[448,16,447,14],[448,19,447,17,"idPath"],[448,25,447,23],[448,26,447,24],[448,27,447,25],[448,28,447,26],[449,8,448,6],[449,12,448,10,"_node2"],[449,18,448,16],[449,21,448,19,"nodePath"],[449,29,448,27],[449,30,448,28],[449,31,448,29],[449,32,448,30],[450,8,449,6],[450,12,449,10,"target"],[450,18,449,16],[450,21,449,19,"domEvent"],[450,29,449,27],[450,30,449,28,"target"],[450,36,449,34],[451,8,450,6],[451,12,450,10,"target"],[451,18,450,16],[451,23,450,21,"_node2"],[451,29,450,27],[451,31,450,29],[452,10,451,8],[452,17,451,15,"check"],[452,22,451,20],[452,23,451,21,"_id2"],[452,27,451,25],[452,29,451,27,"_node2"],[452,35,451,33],[452,37,451,35,"shouldSetCallbackBubbleName"],[452,64,451,62],[452,65,451,63],[453,8,452,6],[454,6,453,4],[455,4,454,2],[456,2,455,0],[458,2,457,0],[459,0,458,0],[460,0,459,0],[461,2,460,0],[461,11,460,9,"attemptTransfer"],[461,26,460,24,"attemptTransfer"],[461,27,460,25,"responderEvent"],[461,41,460,39],[461,43,460,41,"wantsResponder"],[461,57,460,55],[461,59,460,57],[462,4,461,2],[462,8,461,6,"_currentResponder2"],[462,26,461,24],[462,29,461,27,"currentResponder"],[462,45,461,43],[463,6,462,4,"currentId"],[463,15,462,13],[463,18,462,16,"_currentResponder2"],[463,36,462,34],[463,37,462,35,"id"],[463,39,462,37],[464,6,463,4,"currentNode"],[464,17,463,15],[464,20,463,18,"_currentResponder2"],[464,38,463,36],[464,39,463,37,"node"],[464,43,463,41],[465,4,464,2],[465,8,464,6,"id"],[465,10,464,8],[465,13,464,11,"wantsResponder"],[465,27,464,25],[465,28,464,26,"id"],[465,30,464,28],[466,6,465,4,"node"],[466,10,465,8],[466,13,465,11,"wantsResponder"],[466,27,465,25],[466,28,465,26,"node"],[466,32,465,30],[467,4,466,2],[467,8,466,6,"_getResponderConfig2"],[467,28,466,26],[467,31,466,29,"getResponderConfig"],[467,49,466,47],[467,50,466,48,"id"],[467,52,466,50],[467,53,466,51],[468,6,467,4,"onResponderGrant"],[468,22,467,20],[468,25,467,23,"_getResponderConfig2"],[468,45,467,43],[468,46,467,44,"onResponderGrant"],[468,62,467,60],[469,6,468,4,"onResponderReject"],[469,23,468,21],[469,26,468,24,"_getResponderConfig2"],[469,46,468,44],[469,47,468,45,"onResponderReject"],[469,64,468,62],[470,4,469,2,"responderEvent"],[470,18,469,16],[470,19,469,17,"bubbles"],[470,26,469,24],[470,29,469,27],[470,34,469,32],[471,4,470,2,"responderEvent"],[471,18,470,16],[471,19,470,17,"cancelable"],[471,29,470,27],[471,32,470,30],[471,37,470,35],[472,4,471,2,"responderEvent"],[472,18,471,16],[472,19,471,17,"currentTarget"],[472,32,471,30],[472,35,471,33,"node"],[472,39,471,37],[474,4,473,2],[475,4,474,2],[475,8,474,6,"currentId"],[475,17,474,15],[475,21,474,19],[475,25,474,23],[475,27,474,25],[476,6,475,4],[476,10,475,8,"onResponderGrant"],[476,26,475,24],[476,30,475,28],[476,34,475,32],[476,36,475,34],[477,8,476,6,"responderEvent"],[477,22,476,20],[477,23,476,21,"currentTarget"],[477,36,476,34],[477,39,476,37,"node"],[477,43,476,41],[478,8,477,6,"responderEvent"],[478,22,477,20],[478,23,477,21,"dispatchConfig"],[478,37,477,35],[478,38,477,36,"registrationName"],[478,54,477,52],[478,57,477,55],[478,75,477,73],[479,8,478,6,"onResponderGrant"],[479,24,478,22],[479,25,478,23,"responderEvent"],[479,39,478,37],[479,40,478,38],[480,6,479,4],[481,6,480,4,"changeCurrentResponder"],[481,28,480,26],[481,29,480,27,"wantsResponder"],[481,43,480,41],[481,44,480,42],[482,4,481,2],[483,4,482,2],[484,4,482,2],[484,9,483,7],[485,6,484,4],[485,10,484,8,"_getResponderConfig3"],[485,30,484,28],[485,33,484,31,"getResponderConfig"],[485,51,484,49],[485,52,484,50,"currentId"],[485,61,484,59],[485,62,484,60],[486,8,485,6,"onResponderTerminate"],[486,28,485,26],[486,31,485,29,"_getResponderConfig3"],[486,51,485,49],[486,52,485,50,"onResponderTerminate"],[486,72,485,70],[487,8,486,6,"onResponderTerminationRequest"],[487,37,486,35],[487,40,486,38,"_getResponderConfig3"],[487,60,486,58],[487,61,486,59,"onResponderTerminationRequest"],[487,90,486,88],[488,6,487,4],[488,10,487,8,"allowTransfer"],[488,23,487,21],[488,26,487,24],[488,30,487,28],[489,6,488,4],[489,10,488,8,"onResponderTerminationRequest"],[489,39,488,37],[489,43,488,41],[489,47,488,45],[489,49,488,47],[490,8,489,6,"responderEvent"],[490,22,489,20],[490,23,489,21,"currentTarget"],[490,36,489,34],[490,39,489,37,"currentNode"],[490,50,489,48],[491,8,490,6,"responderEvent"],[491,22,490,20],[491,23,490,21,"dispatchConfig"],[491,37,490,35],[491,38,490,36,"registrationName"],[491,54,490,52],[491,57,490,55],[491,88,490,86],[492,8,491,6],[492,12,491,10,"onResponderTerminationRequest"],[492,41,491,39],[492,42,491,40,"responderEvent"],[492,56,491,54],[492,57,491,55],[492,62,491,60],[492,67,491,65],[492,69,491,67],[493,10,492,8,"allowTransfer"],[493,23,492,21],[493,26,492,24],[493,31,492,29],[494,8,493,6],[495,6,494,4],[496,6,495,4],[496,10,495,8,"allowTransfer"],[496,23,495,21],[496,25,495,23],[497,8,496,6],[498,8,497,6],[498,12,497,10,"onResponderTerminate"],[498,32,497,30],[498,36,497,34],[498,40,497,38],[498,42,497,40],[499,10,498,8,"responderEvent"],[499,24,498,22],[499,25,498,23,"currentTarget"],[499,38,498,36],[499,41,498,39,"currentNode"],[499,52,498,50],[500,10,499,8,"responderEvent"],[500,24,499,22],[500,25,499,23,"dispatchConfig"],[500,39,499,37],[500,40,499,38,"registrationName"],[500,56,499,54],[500,59,499,57],[500,81,499,79],[501,10,500,8,"onResponderTerminate"],[501,30,500,28],[501,31,500,29,"responderEvent"],[501,45,500,43],[501,46,500,44],[502,8,501,6],[503,8,502,6],[504,8,503,6],[504,12,503,10,"onResponderGrant"],[504,28,503,26],[504,32,503,30],[504,36,503,34],[504,38,503,36],[505,10,504,8,"responderEvent"],[505,24,504,22],[505,25,504,23,"currentTarget"],[505,38,504,36],[505,41,504,39,"node"],[505,45,504,43],[506,10,505,8,"responderEvent"],[506,24,505,22],[506,25,505,23,"dispatchConfig"],[506,39,505,37],[506,40,505,38,"registrationName"],[506,56,505,54],[506,59,505,57],[506,77,505,75],[507,10,506,8,"onResponderGrant"],[507,26,506,24],[507,27,506,25,"responderEvent"],[507,41,506,39],[507,42,506,40],[508,8,507,6],[509,8,508,6,"changeCurrentResponder"],[509,30,508,28],[509,31,508,29,"wantsResponder"],[509,45,508,43],[509,46,508,44],[510,6,509,4],[510,7,509,5],[510,13,509,11],[511,8,510,6],[512,8,511,6],[512,12,511,10,"onResponderReject"],[512,29,511,27],[512,33,511,31],[512,37,511,35],[512,39,511,37],[513,10,512,8,"responderEvent"],[513,24,512,22],[513,25,512,23,"currentTarget"],[513,38,512,36],[513,41,512,39,"node"],[513,45,512,43],[514,10,513,8,"responderEvent"],[514,24,513,22],[514,25,513,23,"dispatchConfig"],[514,39,513,37],[514,40,513,38,"registrationName"],[514,56,513,54],[514,59,513,57],[514,78,513,76],[515,10,514,8,"onResponderReject"],[515,27,514,25],[515,28,514,26,"responderEvent"],[515,42,514,40],[515,43,514,41],[516,8,515,6],[517,6,516,4],[518,4,517,2],[519,2,518,0],[521,2,520,0],[523,2,522,0],[524,0,523,0],[525,0,524,0],[526,0,525,0],[527,0,526,0],[528,0,527,0],[529,2,528,0],[529,6,528,4,"documentEventsCapturePhase"],[529,32,528,30],[529,35,528,33],[529,36,528,34],[529,42,528,40],[529,44,528,42],[529,52,528,50],[529,53,528,51],[530,2,529,0],[530,6,529,4,"documentEventsBubblePhase"],[530,31,529,29],[530,34,529,32],[531,2,530,0],[532,2,531,0],[532,13,531,11],[532,15,531,13],[532,26,531,24],[532,28,531,26],[532,37,531,35],[532,39,531,37],[532,50,531,48],[533,2,532,0],[534,2,533,0],[534,14,533,12],[534,16,533,14],[534,27,533,25],[534,29,533,27],[534,39,533,37],[534,41,533,39],[534,54,533,52],[535,2,534,0],[536,2,535,0],[536,15,535,13],[536,17,535,15],[536,25,535,23],[536,27,535,25],[536,44,535,42],[536,45,535,43],[537,2,536,0],[537,11,536,9,"attachListeners"],[537,26,536,24,"attachListeners"],[537,27,536,24],[537,29,536,27],[538,4,537,2],[538,8,537,6,"_canUseDom"],[538,18,537,16],[538,19,537,17,"default"],[538,26,537,24],[538,30,537,28,"window"],[538,36,537,34],[538,37,537,35,"__reactResponderSystemActive"],[538,65,537,63],[538,69,537,67],[538,73,537,71],[538,75,537,73],[539,6,538,4,"window"],[539,12,538,10],[539,13,538,11,"addEventListener"],[539,29,538,27],[539,30,538,28],[539,36,538,34],[539,38,538,36,"eventListener"],[539,51,538,49],[539,52,538,50],[540,6,539,4,"documentEventsBubblePhase"],[540,31,539,29],[540,32,539,30,"forEach"],[540,39,539,37],[540,40,539,38,"eventType"],[540,49,539,47],[540,53,539,51],[541,8,540,6,"document"],[541,16,540,14],[541,17,540,15,"addEventListener"],[541,33,540,31],[541,34,540,32,"eventType"],[541,43,540,41],[541,45,540,43,"eventListener"],[541,58,540,56],[541,59,540,57],[542,6,541,4],[542,7,541,5],[542,8,541,6],[543,6,542,4,"documentEventsCapturePhase"],[543,32,542,30],[543,33,542,31,"forEach"],[543,40,542,38],[543,41,542,39,"eventType"],[543,50,542,48],[543,54,542,52],[544,8,543,6,"document"],[544,16,543,14],[544,17,543,15,"addEventListener"],[544,33,543,31],[544,34,543,32,"eventType"],[544,43,543,41],[544,45,543,43,"eventListener"],[544,58,543,56],[544,60,543,58],[544,64,543,62],[544,65,543,63],[545,6,544,4],[545,7,544,5],[545,8,544,6],[546,6,545,4,"window"],[546,12,545,10],[546,13,545,11,"__reactResponderSystemActive"],[546,41,545,39],[546,44,545,42],[546,48,545,46],[547,4,546,2],[548,2,547,0],[550,2,549,0],[551,0,550,0],[552,0,551,0],[553,2,552,0],[553,11,552,9,"addNode"],[553,18,552,16,"addNode"],[553,19,552,17,"id"],[553,21,552,19],[553,23,552,21,"node"],[553,27,552,25],[553,29,552,27,"config"],[553,35,552,33],[553,37,552,35],[554,4,553,2],[554,5,553,3],[554,6,553,4],[554,8,553,6,"_utils"],[554,14,553,12],[554,15,553,13,"setResponderId"],[554,29,553,27],[554,31,553,29,"node"],[554,35,553,33],[554,37,553,35,"id"],[554,39,553,37],[554,40,553,38],[555,4,554,2,"responderListenersMap"],[555,25,554,23],[555,26,554,24,"set"],[555,29,554,27],[555,30,554,28,"id"],[555,32,554,30],[555,34,554,32,"config"],[555,40,554,38],[555,41,554,39],[556,2,555,0],[558,2,557,0],[559,0,558,0],[560,0,559,0],[561,2,560,0],[561,11,560,9,"removeNode"],[561,21,560,19,"removeNode"],[561,22,560,20,"id"],[561,24,560,22],[561,26,560,24],[562,4,561,2],[562,8,561,6,"currentResponder"],[562,24,561,22],[562,25,561,23,"id"],[562,27,561,25],[562,32,561,30,"id"],[562,34,561,32],[562,36,561,34],[563,6,562,4,"terminateResponder"],[563,24,562,22],[563,25,562,23],[563,26,562,24],[564,4,563,2],[565,4,564,2],[565,8,564,6,"responderListenersMap"],[565,29,564,27],[565,30,564,28,"has"],[565,33,564,31],[565,34,564,32,"id"],[565,36,564,34],[565,37,564,35],[565,39,564,37],[566,6,565,4,"responderListenersMap"],[566,27,565,25],[566,28,565,26,"delete"],[566,34,565,32],[566,35,565,33,"id"],[566,37,565,35],[566,38,565,36],[567,4,566,2],[568,2,567,0],[570,2,569,0],[571,0,570,0],[572,0,571,0],[573,0,572,0],[574,0,573,0],[575,2,574,0],[575,11,574,9,"terminateResponder"],[575,29,574,27,"terminateResponder"],[575,30,574,27],[575,32,574,30],[576,4,575,2],[576,8,575,6,"_currentResponder3"],[576,26,575,24],[576,29,575,27,"currentResponder"],[576,45,575,43],[577,6,576,4,"id"],[577,8,576,6],[577,11,576,9,"_currentResponder3"],[577,29,576,27],[577,30,576,28,"id"],[577,32,576,30],[578,6,577,4,"node"],[578,10,577,8],[578,13,577,11,"_currentResponder3"],[578,31,577,29],[578,32,577,30,"node"],[578,36,577,34],[579,4,578,2],[579,8,578,6,"id"],[579,10,578,8],[579,14,578,12],[579,18,578,16],[579,22,578,20,"node"],[579,26,578,24],[579,30,578,28],[579,34,578,32],[579,36,578,34],[580,6,579,4],[580,10,579,8,"_getResponderConfig4"],[580,30,579,28],[580,33,579,31,"getResponderConfig"],[580,51,579,49],[580,52,579,50,"id"],[580,54,579,52],[580,55,579,53],[581,8,580,6,"onResponderTerminate"],[581,28,580,26],[581,31,580,29,"_getResponderConfig4"],[581,51,580,49],[581,52,580,50,"onResponderTerminate"],[581,72,580,70],[582,6,581,4],[582,10,581,8,"onResponderTerminate"],[582,30,581,28],[582,34,581,32],[582,38,581,36],[582,40,581,38],[583,8,582,6],[583,12,582,10,"event"],[583,17,582,15],[583,20,582,18],[583,21,582,19],[583,22,582,20],[583,24,582,22,"_createResponderEvent"],[583,45,582,43],[583,46,582,44,"default"],[583,53,582,51],[583,55,582,53],[583,56,582,54],[583,57,582,55],[583,59,582,57,"responderTouchHistoryStore"],[583,85,582,83],[583,86,582,84],[584,8,583,6,"event"],[584,13,583,11],[584,14,583,12,"currentTarget"],[584,27,583,25],[584,30,583,28,"node"],[584,34,583,32],[585,8,584,6,"onResponderTerminate"],[585,28,584,26],[585,29,584,27,"event"],[585,34,584,32],[585,35,584,33],[586,6,585,4],[587,6,586,4,"changeCurrentResponder"],[587,28,586,26],[587,29,586,27,"emptyResponder"],[587,43,586,41],[587,44,586,42],[588,4,587,2],[589,4,588,2,"isEmulatingMouseEvents"],[589,26,588,24],[589,29,588,27],[589,34,588,32],[590,4,589,2,"trackedTouchCount"],[590,21,589,19],[590,24,589,22],[590,25,589,23],[591,2,590,0],[593,2,592,0],[594,0,593,0],[595,0,594,0],[596,0,595,0],[597,2,596,0],[597,11,596,9,"getResponderNode"],[597,27,596,25,"getResponderNode"],[597,28,596,25],[597,30,596,28],[598,4,597,2],[598,11,597,9,"currentResponder"],[598,27,597,25],[598,28,597,26,"node"],[598,32,597,30],[599,2,598,0],[600,0,598,1],[600,3]],"functionMap":{"names":["<global>","changeCurrentResponder","getResponderConfig","eventListener","findWantsResponder","check","attemptTransfer","attachListeners","documentEventsBubblePhase.forEach$argument_0","documentEventsCapturePhase.forEach$argument_0","addNode","removeNode","terminateResponder","getResponderNode"],"mappings":"AAA;ACuL;CDE;AEC;CFG;AGY;CHyL;AIO;gBCS;KDe;CJqC;AMK;CN0D;AOkB;sCCG;KDE;uCEC;KFE;CPG;AUK;CVG;AWK;CXO;AYO;CZgB;AaM"},"hasCjsExports":true},"type":"js/module"}]}