{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":3,"column":29,"index":44},"end":{"line":3,"column":84,"index":99}}],"key":"kslwqCIsh6ew+I1KeA1rlVRjsAk=","exportNames":["*"],"imports":1}},{"name":"./normalizeValueWithProperty","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":57,"index":219},"end":{"line":6,"column":96,"index":258}}],"key":"/12IeszZBShxqi4svcfdPjFQkp0=","exportNames":["*"],"imports":1}},{"name":"../../../modules/canUseDom","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":40,"index":301},"end":{"line":7,"column":77,"index":338}}],"key":"T8fijJnzF1LKFTIgqFK0vJo5NhA=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\").default;\n  exports.__esModule = true;\n  exports.default = void 0;\n  var _normalizeValueWithProperty = _interopRequireDefault(require(_dependencyMap[1], \"./normalizeValueWithProperty\"));\n  var _canUseDom = _interopRequireDefault(require(_dependencyMap[2], \"../../../modules/canUseDom\"));\n  /**\n   * Copyright (c) Nicolas Gallagher.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   */\n\n  /**\n   * The browser implements the CSS cascade, where the order of properties is a\n   * factor in determining which styles to paint. React Native is different. It\n   * gives giving precedence to the more specific style property. For example,\n   * the value of `paddingTop` takes precedence over that of `padding`.\n   *\n   * This module creates mutally exclusive style declarations by expanding all of\n   * React Native's supported shortform properties (e.g. `padding`) to their\n   * longfrom equivalents.\n   */\n\n  var emptyObject = {};\n  var supportsCSS3TextDecoration = !_canUseDom.default || window.CSS != null && window.CSS.supports != null && (window.CSS.supports('text-decoration-line', 'none') || window.CSS.supports('-webkit-text-decoration-line', 'none'));\n  var MONOSPACE_FONT_STACK = 'monospace,monospace';\n  var SYSTEM_FONT_STACK = '-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif';\n  var STYLE_SHORT_FORM_EXPANSIONS = {\n    borderColor: ['borderTopColor', 'borderRightColor', 'borderBottomColor', 'borderLeftColor'],\n    borderBlockColor: ['borderTopColor', 'borderBottomColor'],\n    borderInlineColor: ['borderRightColor', 'borderLeftColor'],\n    borderRadius: ['borderTopLeftRadius', 'borderTopRightRadius', 'borderBottomRightRadius', 'borderBottomLeftRadius'],\n    borderStyle: ['borderTopStyle', 'borderRightStyle', 'borderBottomStyle', 'borderLeftStyle'],\n    borderBlockStyle: ['borderTopStyle', 'borderBottomStyle'],\n    borderInlineStyle: ['borderRightStyle', 'borderLeftStyle'],\n    borderWidth: ['borderTopWidth', 'borderRightWidth', 'borderBottomWidth', 'borderLeftWidth'],\n    borderBlockWidth: ['borderTopWidth', 'borderBottomWidth'],\n    borderInlineWidth: ['borderRightWidth', 'borderLeftWidth'],\n    insetBlock: ['top', 'bottom'],\n    insetInline: ['left', 'right'],\n    marginBlock: ['marginTop', 'marginBottom'],\n    marginInline: ['marginRight', 'marginLeft'],\n    paddingBlock: ['paddingTop', 'paddingBottom'],\n    paddingInline: ['paddingRight', 'paddingLeft'],\n    overflow: ['overflowX', 'overflowY'],\n    overscrollBehavior: ['overscrollBehaviorX', 'overscrollBehaviorY'],\n    borderBlockStartColor: ['borderTopColor'],\n    borderBlockStartStyle: ['borderTopStyle'],\n    borderBlockStartWidth: ['borderTopWidth'],\n    borderBlockEndColor: ['borderBottomColor'],\n    borderBlockEndStyle: ['borderBottomStyle'],\n    borderBlockEndWidth: ['borderBottomWidth'],\n    //borderInlineStartColor: ['borderLeftColor'],\n    //borderInlineStartStyle: ['borderLeftStyle'],\n    //borderInlineStartWidth: ['borderLeftWidth'],\n    //borderInlineEndColor: ['borderRightColor'],\n    //borderInlineEndStyle: ['borderRightStyle'],\n    //borderInlineEndWidth: ['borderRightWidth'],\n    borderEndStartRadius: ['borderBottomLeftRadius'],\n    borderEndEndRadius: ['borderBottomRightRadius'],\n    borderStartStartRadius: ['borderTopLeftRadius'],\n    borderStartEndRadius: ['borderTopRightRadius'],\n    insetBlockEnd: ['bottom'],\n    insetBlockStart: ['top'],\n    //insetInlineEnd: ['right'],\n    //insetInlineStart: ['left'],\n    marginBlockStart: ['marginTop'],\n    marginBlockEnd: ['marginBottom'],\n    //marginInlineStart: ['marginLeft'],\n    //marginInlineEnd: ['marginRight'],\n    paddingBlockStart: ['paddingTop'],\n    paddingBlockEnd: ['paddingBottom']\n    //paddingInlineStart: ['marginLeft'],\n    //paddingInlineEnd: ['marginRight'],\n  };\n\n  /**\n   * Reducer\n   */\n\n  var createReactDOMStyle = (style, isInline) => {\n    if (!style) {\n      return emptyObject;\n    }\n    var resolvedStyle = {};\n    var _loop = function _loop() {\n      var value = style[prop];\n      if (\n      // Ignore everything with a null value\n      value == null) {\n        return \"continue\";\n      }\n      if (prop === 'backgroundClip') {\n        // TODO: remove once this issue is fixed\n        // https://github.com/rofrischmann/inline-style-prefixer/issues/159\n        if (value === 'text') {\n          resolvedStyle.backgroundClip = value;\n          resolvedStyle.WebkitBackgroundClip = value;\n        }\n      } else if (prop === 'flex') {\n        if (value === -1) {\n          resolvedStyle.flexGrow = 0;\n          resolvedStyle.flexShrink = 1;\n          resolvedStyle.flexBasis = 'auto';\n        } else {\n          resolvedStyle.flex = value;\n        }\n      } else if (prop === 'font') {\n        resolvedStyle[prop] = value.replace('System', SYSTEM_FONT_STACK);\n      } else if (prop === 'fontFamily') {\n        if (value.indexOf('System') > -1) {\n          var stack = value.split(/,\\s*/);\n          stack[stack.indexOf('System')] = SYSTEM_FONT_STACK;\n          resolvedStyle[prop] = stack.join(',');\n        } else if (value === 'monospace') {\n          resolvedStyle[prop] = MONOSPACE_FONT_STACK;\n        } else {\n          resolvedStyle[prop] = value;\n        }\n      } else if (prop === 'textDecorationLine') {\n        // use 'text-decoration' for browsers that only support CSS2\n        // text-decoration (e.g., IE, Edge)\n        if (!supportsCSS3TextDecoration) {\n          resolvedStyle.textDecoration = value;\n        } else {\n          resolvedStyle.textDecorationLine = value;\n        }\n      } else if (prop === 'writingDirection') {\n        resolvedStyle.direction = value;\n      } else {\n        var _value = (0, _normalizeValueWithProperty.default)(style[prop], prop);\n        var longFormProperties = STYLE_SHORT_FORM_EXPANSIONS[prop];\n        if (isInline && prop === 'inset') {\n          if (style.insetInline == null) {\n            resolvedStyle.left = _value;\n            resolvedStyle.right = _value;\n          }\n          if (style.insetBlock == null) {\n            resolvedStyle.top = _value;\n            resolvedStyle.bottom = _value;\n          }\n        } else if (isInline && prop === 'margin') {\n          if (style.marginInline == null) {\n            resolvedStyle.marginLeft = _value;\n            resolvedStyle.marginRight = _value;\n          }\n          if (style.marginBlock == null) {\n            resolvedStyle.marginTop = _value;\n            resolvedStyle.marginBottom = _value;\n          }\n        } else if (isInline && prop === 'padding') {\n          if (style.paddingInline == null) {\n            resolvedStyle.paddingLeft = _value;\n            resolvedStyle.paddingRight = _value;\n          }\n          if (style.paddingBlock == null) {\n            resolvedStyle.paddingTop = _value;\n            resolvedStyle.paddingBottom = _value;\n          }\n        } else if (longFormProperties) {\n          longFormProperties.forEach((longForm, i) => {\n            // The value of any longform property in the original styles takes\n            // precedence over the shortform's value.\n            if (style[longForm] == null) {\n              resolvedStyle[longForm] = _value;\n            }\n          });\n        } else {\n          resolvedStyle[prop] = _value;\n        }\n      }\n    };\n    for (var prop in style) {\n      var _ret = _loop();\n      if (_ret === \"continue\") continue;\n    }\n    return resolvedStyle;\n  };\n  var _default = exports.default = createReactDOMStyle;\n  module.exports = exports.default;\n});","lineCount":186,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"_interopRequireDefault"],[4,28,3,26],[4,31,3,29,"require"],[4,38,3,36],[4,39,3,36,"_dependencyMap"],[4,53,3,36],[4,104,3,83],[4,105,3,84],[4,106,3,85,"default"],[4,113,3,92],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"__esModule"],[5,20,4,18],[5,23,4,21],[5,27,4,25],[6,2,5,0,"exports"],[6,9,5,7],[6,10,5,8,"default"],[6,17,5,15],[6,20,5,18],[6,25,5,23],[6,26,5,24],[7,2,6,0],[7,6,6,4,"_normalizeValueWithProperty"],[7,33,6,31],[7,36,6,34,"_interopRequireDefault"],[7,58,6,56],[7,59,6,57,"require"],[7,66,6,64],[7,67,6,64,"_dependencyMap"],[7,81,6,64],[7,116,6,95],[7,117,6,96],[7,118,6,97],[8,2,7,0],[8,6,7,4,"_canUseDom"],[8,16,7,14],[8,19,7,17,"_interopRequireDefault"],[8,41,7,39],[8,42,7,40,"require"],[8,49,7,47],[8,50,7,47,"_dependencyMap"],[8,64,7,47],[8,97,7,76],[8,98,7,77],[8,99,7,78],[9,2,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[16,0,15,0],[18,2,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[29,2,28,0],[29,6,28,4,"emptyObject"],[29,17,28,15],[29,20,28,18],[29,21,28,19],[29,22,28,20],[30,2,29,0],[30,6,29,4,"supportsCSS3TextDecoration"],[30,32,29,30],[30,35,29,33],[30,36,29,34,"_canUseDom"],[30,46,29,44],[30,47,29,45,"default"],[30,54,29,52],[30,58,29,56,"window"],[30,64,29,62],[30,65,29,63,"CSS"],[30,68,29,66],[30,72,29,70],[30,76,29,74],[30,80,29,78,"window"],[30,86,29,84],[30,87,29,85,"CSS"],[30,90,29,88],[30,91,29,89,"supports"],[30,99,29,97],[30,103,29,101],[30,107,29,105],[30,112,29,110,"window"],[30,118,29,116],[30,119,29,117,"CSS"],[30,122,29,120],[30,123,29,121,"supports"],[30,131,29,129],[30,132,29,130],[30,154,29,152],[30,156,29,154],[30,162,29,160],[30,163,29,161],[30,167,29,165,"window"],[30,173,29,171],[30,174,29,172,"CSS"],[30,177,29,175],[30,178,29,176,"supports"],[30,186,29,184],[30,187,29,185],[30,217,29,215],[30,219,29,217],[30,225,29,223],[30,226,29,224],[30,227,29,225],[31,2,30,0],[31,6,30,4,"MONOSPACE_FONT_STACK"],[31,26,30,24],[31,29,30,27],[31,50,30,48],[32,2,31,0],[32,6,31,4,"SYSTEM_FONT_STACK"],[32,23,31,21],[32,26,31,24],[32,105,31,103],[33,2,32,0],[33,6,32,4,"STYLE_SHORT_FORM_EXPANSIONS"],[33,33,32,31],[33,36,32,34],[34,4,33,2,"borderColor"],[34,15,33,13],[34,17,33,15],[34,18,33,16],[34,34,33,32],[34,36,33,34],[34,54,33,52],[34,56,33,54],[34,75,33,73],[34,77,33,75],[34,94,33,92],[34,95,33,93],[35,4,34,2,"borderBlockColor"],[35,20,34,18],[35,22,34,20],[35,23,34,21],[35,39,34,37],[35,41,34,39],[35,60,34,58],[35,61,34,59],[36,4,35,2,"borderInlineColor"],[36,21,35,19],[36,23,35,21],[36,24,35,22],[36,42,35,40],[36,44,35,42],[36,61,35,59],[36,62,35,60],[37,4,36,2,"borderRadius"],[37,16,36,14],[37,18,36,16],[37,19,36,17],[37,40,36,38],[37,42,36,40],[37,64,36,62],[37,66,36,64],[37,91,36,89],[37,93,36,91],[37,117,36,115],[37,118,36,116],[38,4,37,2,"borderStyle"],[38,15,37,13],[38,17,37,15],[38,18,37,16],[38,34,37,32],[38,36,37,34],[38,54,37,52],[38,56,37,54],[38,75,37,73],[38,77,37,75],[38,94,37,92],[38,95,37,93],[39,4,38,2,"borderBlockStyle"],[39,20,38,18],[39,22,38,20],[39,23,38,21],[39,39,38,37],[39,41,38,39],[39,60,38,58],[39,61,38,59],[40,4,39,2,"borderInlineStyle"],[40,21,39,19],[40,23,39,21],[40,24,39,22],[40,42,39,40],[40,44,39,42],[40,61,39,59],[40,62,39,60],[41,4,40,2,"borderWidth"],[41,15,40,13],[41,17,40,15],[41,18,40,16],[41,34,40,32],[41,36,40,34],[41,54,40,52],[41,56,40,54],[41,75,40,73],[41,77,40,75],[41,94,40,92],[41,95,40,93],[42,4,41,2,"borderBlockWidth"],[42,20,41,18],[42,22,41,20],[42,23,41,21],[42,39,41,37],[42,41,41,39],[42,60,41,58],[42,61,41,59],[43,4,42,2,"borderInlineWidth"],[43,21,42,19],[43,23,42,21],[43,24,42,22],[43,42,42,40],[43,44,42,42],[43,61,42,59],[43,62,42,60],[44,4,43,2,"insetBlock"],[44,14,43,12],[44,16,43,14],[44,17,43,15],[44,22,43,20],[44,24,43,22],[44,32,43,30],[44,33,43,31],[45,4,44,2,"insetInline"],[45,15,44,13],[45,17,44,15],[45,18,44,16],[45,24,44,22],[45,26,44,24],[45,33,44,31],[45,34,44,32],[46,4,45,2,"marginBlock"],[46,15,45,13],[46,17,45,15],[46,18,45,16],[46,29,45,27],[46,31,45,29],[46,45,45,43],[46,46,45,44],[47,4,46,2,"marginInline"],[47,16,46,14],[47,18,46,16],[47,19,46,17],[47,32,46,30],[47,34,46,32],[47,46,46,44],[47,47,46,45],[48,4,47,2,"paddingBlock"],[48,16,47,14],[48,18,47,16],[48,19,47,17],[48,31,47,29],[48,33,47,31],[48,48,47,46],[48,49,47,47],[49,4,48,2,"paddingInline"],[49,17,48,15],[49,19,48,17],[49,20,48,18],[49,34,48,32],[49,36,48,34],[49,49,48,47],[49,50,48,48],[50,4,49,2,"overflow"],[50,12,49,10],[50,14,49,12],[50,15,49,13],[50,26,49,24],[50,28,49,26],[50,39,49,37],[50,40,49,38],[51,4,50,2,"overscrollBehavior"],[51,22,50,20],[51,24,50,22],[51,25,50,23],[51,46,50,44],[51,48,50,46],[51,69,50,67],[51,70,50,68],[52,4,51,2,"borderBlockStartColor"],[52,25,51,23],[52,27,51,25],[52,28,51,26],[52,44,51,42],[52,45,51,43],[53,4,52,2,"borderBlockStartStyle"],[53,25,52,23],[53,27,52,25],[53,28,52,26],[53,44,52,42],[53,45,52,43],[54,4,53,2,"borderBlockStartWidth"],[54,25,53,23],[54,27,53,25],[54,28,53,26],[54,44,53,42],[54,45,53,43],[55,4,54,2,"borderBlockEndColor"],[55,23,54,21],[55,25,54,23],[55,26,54,24],[55,45,54,43],[55,46,54,44],[56,4,55,2,"borderBlockEndStyle"],[56,23,55,21],[56,25,55,23],[56,26,55,24],[56,45,55,43],[56,46,55,44],[57,4,56,2,"borderBlockEndWidth"],[57,23,56,21],[57,25,56,23],[57,26,56,24],[57,45,56,43],[57,46,56,44],[58,4,57,2],[59,4,58,2],[60,4,59,2],[61,4,60,2],[62,4,61,2],[63,4,62,2],[64,4,63,2,"borderEndStartRadius"],[64,24,63,22],[64,26,63,24],[64,27,63,25],[64,51,63,49],[64,52,63,50],[65,4,64,2,"borderEndEndRadius"],[65,22,64,20],[65,24,64,22],[65,25,64,23],[65,50,64,48],[65,51,64,49],[66,4,65,2,"borderStartStartRadius"],[66,26,65,24],[66,28,65,26],[66,29,65,27],[66,50,65,48],[66,51,65,49],[67,4,66,2,"borderStartEndRadius"],[67,24,66,22],[67,26,66,24],[67,27,66,25],[67,49,66,47],[67,50,66,48],[68,4,67,2,"insetBlockEnd"],[68,17,67,15],[68,19,67,17],[68,20,67,18],[68,28,67,26],[68,29,67,27],[69,4,68,2,"insetBlockStart"],[69,19,68,17],[69,21,68,19],[69,22,68,20],[69,27,68,25],[69,28,68,26],[70,4,69,2],[71,4,70,2],[72,4,71,2,"marginBlockStart"],[72,20,71,18],[72,22,71,20],[72,23,71,21],[72,34,71,32],[72,35,71,33],[73,4,72,2,"marginBlockEnd"],[73,18,72,16],[73,20,72,18],[73,21,72,19],[73,35,72,33],[73,36,72,34],[74,4,73,2],[75,4,74,2],[76,4,75,2,"paddingBlockStart"],[76,21,75,19],[76,23,75,21],[76,24,75,22],[76,36,75,34],[76,37,75,35],[77,4,76,2,"paddingBlockEnd"],[77,19,76,17],[77,21,76,19],[77,22,76,20],[77,37,76,35],[78,4,77,2],[79,4,78,2],[80,2,79,0],[80,3,79,1],[82,2,81,0],[83,0,82,0],[84,0,83,0],[86,2,85,0],[86,6,85,4,"createReactDOMStyle"],[86,25,85,23],[86,28,85,26,"createReactDOMStyle"],[86,29,85,27,"style"],[86,34,85,32],[86,36,85,34,"isInline"],[86,44,85,42],[86,49,85,47],[87,4,86,2],[87,8,86,6],[87,9,86,7,"style"],[87,14,86,12],[87,16,86,14],[88,6,87,4],[88,13,87,11,"emptyObject"],[88,24,87,22],[89,4,88,2],[90,4,89,2],[90,8,89,6,"resolvedStyle"],[90,21,89,19],[90,24,89,22],[90,25,89,23],[90,26,89,24],[91,4,90,2],[91,8,90,6,"_loop"],[91,13,90,11],[91,16,90,14],[91,25,90,23,"_loop"],[91,30,90,28,"_loop"],[91,31,90,28],[91,33,90,31],[92,6,91,4],[92,10,91,8,"value"],[92,15,91,13],[92,18,91,16,"style"],[92,23,91,21],[92,24,91,22,"prop"],[92,28,91,26],[92,29,91,27],[93,6,92,4],[94,6,93,4],[95,6,94,4,"value"],[95,11,94,9],[95,15,94,13],[95,19,94,17],[95,21,94,19],[96,8,95,6],[96,15,95,13],[96,25,95,23],[97,6,96,4],[98,6,97,4],[98,10,97,8,"prop"],[98,14,97,12],[98,19,97,17],[98,35,97,33],[98,37,97,35],[99,8,98,6],[100,8,99,6],[101,8,100,6],[101,12,100,10,"value"],[101,17,100,15],[101,22,100,20],[101,28,100,26],[101,30,100,28],[102,10,101,8,"resolvedStyle"],[102,23,101,21],[102,24,101,22,"backgroundClip"],[102,38,101,36],[102,41,101,39,"value"],[102,46,101,44],[103,10,102,8,"resolvedStyle"],[103,23,102,21],[103,24,102,22,"WebkitBackgroundClip"],[103,44,102,42],[103,47,102,45,"value"],[103,52,102,50],[104,8,103,6],[105,6,104,4],[105,7,104,5],[105,13,104,11],[105,17,104,15,"prop"],[105,21,104,19],[105,26,104,24],[105,32,104,30],[105,34,104,32],[106,8,105,6],[106,12,105,10,"value"],[106,17,105,15],[106,22,105,20],[106,23,105,21],[106,24,105,22],[106,26,105,24],[107,10,106,8,"resolvedStyle"],[107,23,106,21],[107,24,106,22,"flexGrow"],[107,32,106,30],[107,35,106,33],[107,36,106,34],[108,10,107,8,"resolvedStyle"],[108,23,107,21],[108,24,107,22,"flexShrink"],[108,34,107,32],[108,37,107,35],[108,38,107,36],[109,10,108,8,"resolvedStyle"],[109,23,108,21],[109,24,108,22,"flexBasis"],[109,33,108,31],[109,36,108,34],[109,42,108,40],[110,8,109,6],[110,9,109,7],[110,15,109,13],[111,10,110,8,"resolvedStyle"],[111,23,110,21],[111,24,110,22,"flex"],[111,28,110,26],[111,31,110,29,"value"],[111,36,110,34],[112,8,111,6],[113,6,112,4],[113,7,112,5],[113,13,112,11],[113,17,112,15,"prop"],[113,21,112,19],[113,26,112,24],[113,32,112,30],[113,34,112,32],[114,8,113,6,"resolvedStyle"],[114,21,113,19],[114,22,113,20,"prop"],[114,26,113,24],[114,27,113,25],[114,30,113,28,"value"],[114,35,113,33],[114,36,113,34,"replace"],[114,43,113,41],[114,44,113,42],[114,52,113,50],[114,54,113,52,"SYSTEM_FONT_STACK"],[114,71,113,69],[114,72,113,70],[115,6,114,4],[115,7,114,5],[115,13,114,11],[115,17,114,15,"prop"],[115,21,114,19],[115,26,114,24],[115,38,114,36],[115,40,114,38],[116,8,115,6],[116,12,115,10,"value"],[116,17,115,15],[116,18,115,16,"indexOf"],[116,25,115,23],[116,26,115,24],[116,34,115,32],[116,35,115,33],[116,38,115,36],[116,39,115,37],[116,40,115,38],[116,42,115,40],[117,10,116,8],[117,14,116,12,"stack"],[117,19,116,17],[117,22,116,20,"value"],[117,27,116,25],[117,28,116,26,"split"],[117,33,116,31],[117,34,116,32],[117,40,116,38],[117,41,116,39],[118,10,117,8,"stack"],[118,15,117,13],[118,16,117,14,"stack"],[118,21,117,19],[118,22,117,20,"indexOf"],[118,29,117,27],[118,30,117,28],[118,38,117,36],[118,39,117,37],[118,40,117,38],[118,43,117,41,"SYSTEM_FONT_STACK"],[118,60,117,58],[119,10,118,8,"resolvedStyle"],[119,23,118,21],[119,24,118,22,"prop"],[119,28,118,26],[119,29,118,27],[119,32,118,30,"stack"],[119,37,118,35],[119,38,118,36,"join"],[119,42,118,40],[119,43,118,41],[119,46,118,44],[119,47,118,45],[120,8,119,6],[120,9,119,7],[120,15,119,13],[120,19,119,17,"value"],[120,24,119,22],[120,29,119,27],[120,40,119,38],[120,42,119,40],[121,10,120,8,"resolvedStyle"],[121,23,120,21],[121,24,120,22,"prop"],[121,28,120,26],[121,29,120,27],[121,32,120,30,"MONOSPACE_FONT_STACK"],[121,52,120,50],[122,8,121,6],[122,9,121,7],[122,15,121,13],[123,10,122,8,"resolvedStyle"],[123,23,122,21],[123,24,122,22,"prop"],[123,28,122,26],[123,29,122,27],[123,32,122,30,"value"],[123,37,122,35],[124,8,123,6],[125,6,124,4],[125,7,124,5],[125,13,124,11],[125,17,124,15,"prop"],[125,21,124,19],[125,26,124,24],[125,46,124,44],[125,48,124,46],[126,8,125,6],[127,8,126,6],[128,8,127,6],[128,12,127,10],[128,13,127,11,"supportsCSS3TextDecoration"],[128,39,127,37],[128,41,127,39],[129,10,128,8,"resolvedStyle"],[129,23,128,21],[129,24,128,22,"textDecoration"],[129,38,128,36],[129,41,128,39,"value"],[129,46,128,44],[130,8,129,6],[130,9,129,7],[130,15,129,13],[131,10,130,8,"resolvedStyle"],[131,23,130,21],[131,24,130,22,"textDecorationLine"],[131,42,130,40],[131,45,130,43,"value"],[131,50,130,48],[132,8,131,6],[133,6,132,4],[133,7,132,5],[133,13,132,11],[133,17,132,15,"prop"],[133,21,132,19],[133,26,132,24],[133,44,132,42],[133,46,132,44],[134,8,133,6,"resolvedStyle"],[134,21,133,19],[134,22,133,20,"direction"],[134,31,133,29],[134,34,133,32,"value"],[134,39,133,37],[135,6,134,4],[135,7,134,5],[135,13,134,11],[136,8,135,6],[136,12,135,10,"_value"],[136,18,135,16],[136,21,135,19],[136,22,135,20],[136,23,135,21],[136,25,135,23,"_normalizeValueWithProperty"],[136,52,135,50],[136,53,135,51,"default"],[136,60,135,58],[136,62,135,60,"style"],[136,67,135,65],[136,68,135,66,"prop"],[136,72,135,70],[136,73,135,71],[136,75,135,73,"prop"],[136,79,135,77],[136,80,135,78],[137,8,136,6],[137,12,136,10,"longFormProperties"],[137,30,136,28],[137,33,136,31,"STYLE_SHORT_FORM_EXPANSIONS"],[137,60,136,58],[137,61,136,59,"prop"],[137,65,136,63],[137,66,136,64],[138,8,137,6],[138,12,137,10,"isInline"],[138,20,137,18],[138,24,137,22,"prop"],[138,28,137,26],[138,33,137,31],[138,40,137,38],[138,42,137,40],[139,10,138,8],[139,14,138,12,"style"],[139,19,138,17],[139,20,138,18,"insetInline"],[139,31,138,29],[139,35,138,33],[139,39,138,37],[139,41,138,39],[140,12,139,10,"resolvedStyle"],[140,25,139,23],[140,26,139,24,"left"],[140,30,139,28],[140,33,139,31,"_value"],[140,39,139,37],[141,12,140,10,"resolvedStyle"],[141,25,140,23],[141,26,140,24,"right"],[141,31,140,29],[141,34,140,32,"_value"],[141,40,140,38],[142,10,141,8],[143,10,142,8],[143,14,142,12,"style"],[143,19,142,17],[143,20,142,18,"insetBlock"],[143,30,142,28],[143,34,142,32],[143,38,142,36],[143,40,142,38],[144,12,143,10,"resolvedStyle"],[144,25,143,23],[144,26,143,24,"top"],[144,29,143,27],[144,32,143,30,"_value"],[144,38,143,36],[145,12,144,10,"resolvedStyle"],[145,25,144,23],[145,26,144,24,"bottom"],[145,32,144,30],[145,35,144,33,"_value"],[145,41,144,39],[146,10,145,8],[147,8,146,6],[147,9,146,7],[147,15,146,13],[147,19,146,17,"isInline"],[147,27,146,25],[147,31,146,29,"prop"],[147,35,146,33],[147,40,146,38],[147,48,146,46],[147,50,146,48],[148,10,147,8],[148,14,147,12,"style"],[148,19,147,17],[148,20,147,18,"marginInline"],[148,32,147,30],[148,36,147,34],[148,40,147,38],[148,42,147,40],[149,12,148,10,"resolvedStyle"],[149,25,148,23],[149,26,148,24,"marginLeft"],[149,36,148,34],[149,39,148,37,"_value"],[149,45,148,43],[150,12,149,10,"resolvedStyle"],[150,25,149,23],[150,26,149,24,"marginRight"],[150,37,149,35],[150,40,149,38,"_value"],[150,46,149,44],[151,10,150,8],[152,10,151,8],[152,14,151,12,"style"],[152,19,151,17],[152,20,151,18,"marginBlock"],[152,31,151,29],[152,35,151,33],[152,39,151,37],[152,41,151,39],[153,12,152,10,"resolvedStyle"],[153,25,152,23],[153,26,152,24,"marginTop"],[153,35,152,33],[153,38,152,36,"_value"],[153,44,152,42],[154,12,153,10,"resolvedStyle"],[154,25,153,23],[154,26,153,24,"marginBottom"],[154,38,153,36],[154,41,153,39,"_value"],[154,47,153,45],[155,10,154,8],[156,8,155,6],[156,9,155,7],[156,15,155,13],[156,19,155,17,"isInline"],[156,27,155,25],[156,31,155,29,"prop"],[156,35,155,33],[156,40,155,38],[156,49,155,47],[156,51,155,49],[157,10,156,8],[157,14,156,12,"style"],[157,19,156,17],[157,20,156,18,"paddingInline"],[157,33,156,31],[157,37,156,35],[157,41,156,39],[157,43,156,41],[158,12,157,10,"resolvedStyle"],[158,25,157,23],[158,26,157,24,"paddingLeft"],[158,37,157,35],[158,40,157,38,"_value"],[158,46,157,44],[159,12,158,10,"resolvedStyle"],[159,25,158,23],[159,26,158,24,"paddingRight"],[159,38,158,36],[159,41,158,39,"_value"],[159,47,158,45],[160,10,159,8],[161,10,160,8],[161,14,160,12,"style"],[161,19,160,17],[161,20,160,18,"paddingBlock"],[161,32,160,30],[161,36,160,34],[161,40,160,38],[161,42,160,40],[162,12,161,10,"resolvedStyle"],[162,25,161,23],[162,26,161,24,"paddingTop"],[162,36,161,34],[162,39,161,37,"_value"],[162,45,161,43],[163,12,162,10,"resolvedStyle"],[163,25,162,23],[163,26,162,24,"paddingBottom"],[163,39,162,37],[163,42,162,40,"_value"],[163,48,162,46],[164,10,163,8],[165,8,164,6],[165,9,164,7],[165,15,164,13],[165,19,164,17,"longFormProperties"],[165,37,164,35],[165,39,164,37],[166,10,165,8,"longFormProperties"],[166,28,165,26],[166,29,165,27,"forEach"],[166,36,165,34],[166,37,165,35],[166,38,165,36,"longForm"],[166,46,165,44],[166,48,165,46,"i"],[166,49,165,47],[166,54,165,52],[167,12,166,10],[168,12,167,10],[169,12,168,10],[169,16,168,14,"style"],[169,21,168,19],[169,22,168,20,"longForm"],[169,30,168,28],[169,31,168,29],[169,35,168,33],[169,39,168,37],[169,41,168,39],[170,14,169,12,"resolvedStyle"],[170,27,169,25],[170,28,169,26,"longForm"],[170,36,169,34],[170,37,169,35],[170,40,169,38,"_value"],[170,46,169,44],[171,12,170,10],[172,10,171,8],[172,11,171,9],[172,12,171,10],[173,8,172,6],[173,9,172,7],[173,15,172,13],[174,10,173,8,"resolvedStyle"],[174,23,173,21],[174,24,173,22,"prop"],[174,28,173,26],[174,29,173,27],[174,32,173,30,"_value"],[174,38,173,36],[175,8,174,6],[176,6,175,4],[177,4,176,2],[177,5,176,3],[178,4,177,2],[178,9,177,7],[178,13,177,11,"prop"],[178,17,177,15],[178,21,177,19,"style"],[178,26,177,24],[178,28,177,26],[179,6,178,4],[179,10,178,8,"_ret"],[179,14,178,12],[179,17,178,15,"_loop"],[179,22,178,20],[179,23,178,21],[179,24,178,22],[180,6,179,4],[180,10,179,8,"_ret"],[180,14,179,12],[180,19,179,17],[180,29,179,27],[180,31,179,29],[181,4,180,2],[182,4,181,2],[182,11,181,9,"resolvedStyle"],[182,24,181,22],[183,2,182,0],[183,3,182,1],[184,2,183,0],[184,6,183,4,"_default"],[184,14,183,12],[184,17,183,15,"exports"],[184,24,183,22],[184,25,183,23,"default"],[184,32,183,30],[184,35,183,33,"createReactDOMStyle"],[184,54,183,52],[185,2,184,0,"module"],[185,8,184,6],[185,9,184,7,"exports"],[185,16,184,14],[185,19,184,17,"exports"],[185,26,184,24],[185,27,184,25,"default"],[185,34,184,32],[186,0,184,33],[186,3]],"functionMap":{"names":["<global>","createReactDOMStyle","_loop","longFormProperties.forEach$argument_0"],"mappings":"AAA;0BCoF;cCK;mCC2E;SDM;GDK;CDM"},"hasCjsExports":true},"type":"js/module"}]}