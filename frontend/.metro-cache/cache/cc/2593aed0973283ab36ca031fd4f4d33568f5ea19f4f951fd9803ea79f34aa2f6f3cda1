{"dependencies":[{"name":"@babel/runtime/helpers/objectWithoutPropertiesLoose","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"HFkXuFcBAqfzGtqyPj8g62MKT0M=","exportNames":["*"],"imports":1}},{"name":"./thenable.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":20},"end":{"line":2,"column":47,"index":67}}],"key":"kKA5IQ5mf6XoWFagMsmQasyMyhE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  const _excluded = [\"state\"],\n    _excluded2 = [\"fetchStatus\"]; // src/hydration.ts\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"defaultShouldDehydrateMutation\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateMutation;\n    }\n  });\n  Object.defineProperty(exports, \"defaultShouldDehydrateQuery\", {\n    enumerable: true,\n    get: function () {\n      return defaultShouldDehydrateQuery;\n    }\n  });\n  Object.defineProperty(exports, \"dehydrate\", {\n    enumerable: true,\n    get: function () {\n      return dehydrate;\n    }\n  });\n  Object.defineProperty(exports, \"hydrate\", {\n    enumerable: true,\n    get: function () {\n      return hydrate;\n    }\n  });\n  var _babelRuntimeHelpersObjectWithoutPropertiesLoose = require(_dependencyMap[0], \"@babel/runtime/helpers/objectWithoutPropertiesLoose\");\n  var _objectWithoutPropertiesLoose = _interopDefault(_babelRuntimeHelpersObjectWithoutPropertiesLoose);\n  var _thenableJs = require(_dependencyMap[1], \"./thenable.js\");\n  function defaultTransformerFn(data) {\n    return data;\n  }\n  function dehydrateMutation(mutation) {\n    return Object.assign({\n      mutationKey: mutation.options.mutationKey,\n      state: mutation.state\n    }, mutation.options.scope && {\n      scope: mutation.options.scope\n    }, mutation.meta && {\n      meta: mutation.meta\n    });\n  }\n  function dehydrateQuery(query, serializeData, shouldRedactErrors) {\n    return Object.assign({\n      dehydratedAt: Date.now(),\n      state: Object.assign({}, query.state, query.state.data !== void 0 && {\n        data: serializeData(query.state.data)\n      }),\n      queryKey: query.queryKey,\n      queryHash: query.queryHash\n    }, query.state.status === \"pending\" && {\n      promise: query.promise?.then(serializeData).catch(error => {\n        if (!shouldRedactErrors(error)) {\n          return Promise.reject(error);\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(`A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`);\n        }\n        return Promise.reject(new Error(\"redacted\"));\n      })\n    }, query.meta && {\n      meta: query.meta\n    });\n  }\n  function defaultShouldDehydrateMutation(mutation) {\n    return mutation.state.isPaused;\n  }\n  function defaultShouldDehydrateQuery(query) {\n    return query.state.status === \"success\";\n  }\n  function defaultShouldRedactErrors(_) {\n    return true;\n  }\n  function dehydrate(client, options = {}) {\n    const filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n    const mutations = client.getMutationCache().getAll().flatMap(mutation => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []);\n    const filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n    const shouldRedactErrors = options.shouldRedactErrors ?? client.getDefaultOptions().dehydrate?.shouldRedactErrors ?? defaultShouldRedactErrors;\n    const serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n    const queries = client.getQueryCache().getAll().flatMap(query => filterQuery(query) ? [dehydrateQuery(query, serializeData, shouldRedactErrors)] : []);\n    return {\n      mutations,\n      queries\n    };\n  }\n  function hydrate(client, dehydratedState, options) {\n    if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n      return;\n    }\n    const mutationCache = client.getMutationCache();\n    const queryCache = client.getQueryCache();\n    const deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n    const mutations = dehydratedState.mutations || [];\n    const queries = dehydratedState.queries || [];\n    mutations.forEach(_ref => {\n      let {\n          state\n        } = _ref,\n        mutationOptions = (0, _objectWithoutPropertiesLoose.default)(_ref, _excluded);\n      mutationCache.build(client, Object.assign({}, client.getDefaultOptions().hydrate?.mutations, options?.defaultOptions?.mutations, mutationOptions), state);\n    });\n    queries.forEach(({\n      queryKey,\n      state,\n      queryHash,\n      meta,\n      promise,\n      dehydratedAt\n    }) => {\n      const syncData = promise ? (0, _thenableJs.tryResolveSync)(promise) : void 0;\n      const rawData = state.data === void 0 ? syncData?.data : state.data;\n      const data = rawData === void 0 ? rawData : deserializeData(rawData);\n      let query = queryCache.get(queryHash);\n      const existingQueryIsPending = query?.state.status === \"pending\";\n      const existingQueryIsFetching = query?.state.fetchStatus === \"fetching\";\n      if (query) {\n        const hasNewerSyncData = syncData &&\n        // We only need this undefined check to handle older dehydration\n        // payloads that might not have dehydratedAt\n        dehydratedAt !== void 0 && dehydratedAt > query.state.dataUpdatedAt;\n        if (state.dataUpdatedAt > query.state.dataUpdatedAt || hasNewerSyncData) {\n          const serializedState = (0, _objectWithoutPropertiesLoose.default)(state, _excluded2);\n          query.setState(Object.assign({}, serializedState, {\n            data\n          }));\n        }\n      } else {\n        query = queryCache.build(client, Object.assign({}, client.getDefaultOptions().hydrate?.queries, options?.defaultOptions?.queries, {\n          queryKey,\n          queryHash,\n          meta\n        }), // Reset fetch status to idle to avoid\n        // query being stuck in fetching state upon hydration\n        Object.assign({}, state, {\n          data,\n          fetchStatus: \"idle\",\n          status: data !== void 0 ? \"success\" : state.status\n        }));\n      }\n      if (promise && !existingQueryIsPending && !existingQueryIsFetching && (\n      // Only hydrate if dehydration is newer than any existing data,\n      // this is always true for new queries\n      dehydratedAt === void 0 || dehydratedAt > query.state.dataUpdatedAt)) {\n        void query.fetch(void 0, {\n          // RSC transformed promises are not thenable\n          initialPromise: Promise.resolve(promise).then(deserializeData)\n        });\n      }\n    });\n  }\n});","lineCount":162,"map":[[5,34,1,0],[6,2,1,0,"Object"],[6,8,1,0],[6,9,1,0,"defineProperty"],[6,23,1,0],[6,24,1,0,"exports"],[6,31,1,0],[7,4,1,0,"value"],[7,9,1,0],[8,2,1,0],[9,2,1,0],[9,11,1,0,"_interopDefault"],[9,27,1,0,"e"],[9,28,1,0],[10,4,1,0],[10,11,1,0,"e"],[10,12,1,0],[10,16,1,0,"e"],[10,17,1,0],[10,18,1,0,"__esModule"],[10,28,1,0],[10,31,1,0,"e"],[10,32,1,0],[11,6,1,0,"default"],[11,13,1,0],[11,15,1,0,"e"],[12,4,1,0],[13,2,1,0],[14,2,133,0,"Object"],[14,8,133,0],[14,9,133,0,"defineProperty"],[14,23,133,0],[14,24,133,0,"exports"],[14,31,133,0],[15,4,133,0,"enumerable"],[15,14,133,0],[16,4,133,0,"get"],[16,7,133,0],[16,18,133,0,"get"],[16,19,133,0],[17,6,133,0],[17,13,134,2,"defaultShouldDehydrateMutation"],[17,43,134,32],[18,4,134,32],[19,2,134,32],[20,2,133,0,"Object"],[20,8,133,0],[20,9,133,0,"defineProperty"],[20,23,133,0],[20,24,133,0,"exports"],[20,31,133,0],[21,4,133,0,"enumerable"],[21,14,133,0],[22,4,133,0,"get"],[22,7,133,0],[22,18,133,0,"get"],[22,19,133,0],[23,6,133,0],[23,13,135,2,"defaultShouldDehydrateQuery"],[23,40,135,29],[24,4,135,29],[25,2,135,29],[26,2,133,0,"Object"],[26,8,133,0],[26,9,133,0,"defineProperty"],[26,23,133,0],[26,24,133,0,"exports"],[26,31,133,0],[27,4,133,0,"enumerable"],[27,14,133,0],[28,4,133,0,"get"],[28,7,133,0],[28,18,133,0,"get"],[28,19,133,0],[29,6,133,0],[29,13,136,2,"dehydrate"],[29,22,136,11],[30,4,136,11],[31,2,136,11],[32,2,133,0,"Object"],[32,8,133,0],[32,9,133,0,"defineProperty"],[32,23,133,0],[32,24,133,0,"exports"],[32,31,133,0],[33,4,133,0,"enumerable"],[33,14,133,0],[34,4,133,0,"get"],[34,7,133,0],[34,18,133,0,"get"],[34,19,133,0],[35,6,133,0],[35,13,137,2,"hydrate"],[35,20,137,9],[36,4,137,9],[37,2,137,9],[38,2,138,2],[38,6,138,2,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[38,54,138,2],[38,57,138,2,"require"],[38,64,138,2],[38,65,138,2,"_dependencyMap"],[38,79,138,2],[39,2,138,2],[39,6,138,2,"_objectWithoutPropertiesLoose"],[39,35,138,2],[39,38,138,2,"_interopDefault"],[39,53,138,2],[39,54,138,2,"_babelRuntimeHelpersObjectWithoutPropertiesLoose"],[39,102,138,2],[40,2,2,0],[40,6,2,0,"_thenableJs"],[40,17,2,0],[40,20,2,0,"require"],[40,27,2,0],[40,28,2,0,"_dependencyMap"],[40,42,2,0],[41,2,3,0],[41,11,3,9,"defaultTransformerFn"],[41,31,3,29,"defaultTransformerFn"],[41,32,3,30,"data"],[41,36,3,34],[41,38,3,36],[42,4,4,2],[42,11,4,9,"data"],[42,15,4,13],[43,2,5,0],[44,2,6,0],[44,11,6,9,"dehydrateMutation"],[44,28,6,26,"dehydrateMutation"],[44,29,6,27,"mutation"],[44,37,6,35],[44,39,6,37],[45,4,7,2],[45,11,7,2,"Object"],[45,17,7,2],[45,18,7,2,"assign"],[45,24,7,2],[46,6,8,4,"mutationKey"],[46,17,8,15],[46,19,8,17,"mutation"],[46,27,8,25],[46,28,8,26,"options"],[46,35,8,33],[46,36,8,34,"mutationKey"],[46,47,8,45],[47,6,9,4,"state"],[47,11,9,9],[47,13,9,11,"mutation"],[47,21,9,19],[47,22,9,20,"state"],[48,4,9,25],[48,7,10,7,"mutation"],[48,15,10,15],[48,16,10,16,"options"],[48,23,10,23],[48,24,10,24,"scope"],[48,29,10,29],[48,33,10,33],[49,6,10,35,"scope"],[49,11,10,40],[49,13,10,42,"mutation"],[49,21,10,50],[49,22,10,51,"options"],[49,29,10,58],[49,30,10,59,"scope"],[50,4,10,65],[50,5,10,66],[50,7,11,7,"mutation"],[50,15,11,15],[50,16,11,16,"meta"],[50,20,11,20],[50,24,11,24],[51,6,11,26,"meta"],[51,10,11,30],[51,12,11,32,"mutation"],[51,20,11,40],[51,21,11,41,"meta"],[52,4,11,46],[52,5,11,47],[53,2,13,0],[54,2,14,0],[54,11,14,9,"dehydrateQuery"],[54,25,14,23,"dehydrateQuery"],[54,26,14,24,"query"],[54,31,14,29],[54,33,14,31,"serializeData"],[54,46,14,44],[54,48,14,46,"shouldRedactErrors"],[54,66,14,64],[54,68,14,66],[55,4,15,2],[55,11,15,2,"Object"],[55,17,15,2],[55,18,15,2,"assign"],[55,24,15,2],[56,6,16,4,"dehydratedAt"],[56,18,16,16],[56,20,16,18,"Date"],[56,24,16,22],[56,25,16,23,"now"],[56,28,16,26],[56,29,16,27],[56,30,16,28],[57,6,17,4,"state"],[57,11,17,9],[57,13,17,9,"Object"],[57,19,17,9],[57,20,17,9,"assign"],[57,26,17,9],[57,31,18,9,"query"],[57,36,18,14],[57,37,18,15,"state"],[57,42,18,20],[57,44,19,9,"query"],[57,49,19,14],[57,50,19,15,"state"],[57,55,19,20],[57,56,19,21,"data"],[57,60,19,25],[57,65,19,30],[57,70,19,35],[57,71,19,36],[57,75,19,40],[58,8,20,8,"data"],[58,12,20,12],[58,14,20,14,"serializeData"],[58,27,20,27],[58,28,20,28,"query"],[58,33,20,33],[58,34,20,34,"state"],[58,39,20,39],[58,40,20,40,"data"],[58,44,20,44],[59,6,21,6],[59,7,21,7],[59,8,22,5],[60,6,23,4,"queryKey"],[60,14,23,12],[60,16,23,14,"query"],[60,21,23,19],[60,22,23,20,"queryKey"],[60,30,23,28],[61,6,24,4,"queryHash"],[61,15,24,13],[61,17,24,15,"query"],[61,22,24,20],[61,23,24,21,"queryHash"],[62,4,24,30],[62,7,25,7,"query"],[62,12,25,12],[62,13,25,13,"state"],[62,18,25,18],[62,19,25,19,"status"],[62,25,25,25],[62,30,25,30],[62,39,25,39],[62,43,25,43],[63,6,26,6,"promise"],[63,13,26,13],[63,15,26,15,"query"],[63,20,26,20],[63,21,26,21,"promise"],[63,28,26,28],[63,30,26,30,"then"],[63,34,26,34],[63,35,26,35,"serializeData"],[63,48,26,48],[63,49,26,49],[63,50,26,50,"catch"],[63,55,26,55],[63,56,26,57,"error"],[63,61,26,62],[63,65,26,67],[64,8,27,8],[64,12,27,12],[64,13,27,13,"shouldRedactErrors"],[64,31,27,31],[64,32,27,32,"error"],[64,37,27,37],[64,38,27,38],[64,40,27,40],[65,10,28,10],[65,17,28,17,"Promise"],[65,24,28,24],[65,25,28,25,"reject"],[65,31,28,31],[65,32,28,32,"error"],[65,37,28,37],[65,38,28,38],[66,8,29,8],[67,8,30,8],[67,12,30,12,"process"],[67,19,30,19],[67,20,30,20,"env"],[67,23,30,23],[67,24,30,24,"NODE_ENV"],[67,32,30,32],[67,37,30,37],[67,49,30,49],[67,51,30,51],[68,10,31,10,"console"],[68,17,31,17],[68,18,31,18,"error"],[68,23,31,23],[68,24,32,12],[68,87,32,75,"query"],[68,92,32,80],[68,93,32,81,"queryHash"],[68,102,32,90],[68,108,32,96,"error"],[68,113,32,101],[68,164,33,10],[68,165,33,11],[69,8,34,8],[70,8,35,8],[70,15,35,15,"Promise"],[70,22,35,22],[70,23,35,23,"reject"],[70,29,35,29],[70,30,35,30],[70,34,35,34,"Error"],[70,39,35,39],[70,40,35,40],[70,50,35,50],[70,51,35,51],[70,52,35,52],[71,6,36,6],[71,7,36,7],[72,4,37,4],[72,5,37,5],[72,7,38,7,"query"],[72,12,38,12],[72,13,38,13,"meta"],[72,17,38,17],[72,21,38,21],[73,6,38,23,"meta"],[73,10,38,27],[73,12,38,29,"query"],[73,17,38,34],[73,18,38,35,"meta"],[74,4,38,40],[74,5,38,41],[75,2,40,0],[76,2,41,0],[76,11,41,9,"defaultShouldDehydrateMutation"],[76,41,41,39,"defaultShouldDehydrateMutation"],[76,42,41,40,"mutation"],[76,50,41,48],[76,52,41,50],[77,4,42,2],[77,11,42,9,"mutation"],[77,19,42,17],[77,20,42,18,"state"],[77,25,42,23],[77,26,42,24,"isPaused"],[77,34,42,32],[78,2,43,0],[79,2,44,0],[79,11,44,9,"defaultShouldDehydrateQuery"],[79,38,44,36,"defaultShouldDehydrateQuery"],[79,39,44,37,"query"],[79,44,44,42],[79,46,44,44],[80,4,45,2],[80,11,45,9,"query"],[80,16,45,14],[80,17,45,15,"state"],[80,22,45,20],[80,23,45,21,"status"],[80,29,45,27],[80,34,45,32],[80,43,45,41],[81,2,46,0],[82,2,47,0],[82,11,47,9,"defaultShouldRedactErrors"],[82,36,47,34,"defaultShouldRedactErrors"],[82,37,47,35,"_"],[82,38,47,36],[82,40,47,38],[83,4,48,2],[83,11,48,9],[83,15,48,13],[84,2,49,0],[85,2,50,0],[85,11,50,9,"dehydrate"],[85,20,50,18,"dehydrate"],[85,21,50,19,"client"],[85,27,50,25],[85,29,50,27,"options"],[85,36,50,34],[85,39,50,37],[85,40,50,38],[85,41,50,39],[85,43,50,41],[86,4,51,2],[86,10,51,8,"filterMutation"],[86,24,51,22],[86,27,51,25,"options"],[86,34,51,32],[86,35,51,33,"shouldDehydrateMutation"],[86,58,51,56],[86,62,51,60,"client"],[86,68,51,66],[86,69,51,67,"getDefaultOptions"],[86,86,51,84],[86,87,51,85],[86,88,51,86],[86,89,51,87,"dehydrate"],[86,98,51,96],[86,100,51,98,"shouldDehydrateMutation"],[86,123,51,121],[86,127,51,125,"defaultShouldDehydrateMutation"],[86,157,51,155],[87,4,52,2],[87,10,52,8,"mutations"],[87,19,52,17],[87,22,52,20,"client"],[87,28,52,26],[87,29,52,27,"getMutationCache"],[87,45,52,43],[87,46,52,44],[87,47,52,45],[87,48,52,46,"getAll"],[87,54,52,52],[87,55,52,53],[87,56,52,54],[87,57,52,55,"flatMap"],[87,64,52,62],[87,65,53,5,"mutation"],[87,73,53,13],[87,77,53,18,"filterMutation"],[87,91,53,32],[87,92,53,33,"mutation"],[87,100,53,41],[87,101,53,42],[87,104,53,45],[87,105,53,46,"dehydrateMutation"],[87,122,53,63],[87,123,53,64,"mutation"],[87,131,53,72],[87,132,53,73],[87,133,53,74],[87,136,53,77],[87,138,54,2],[87,139,54,3],[88,4,55,2],[88,10,55,8,"filterQuery"],[88,21,55,19],[88,24,55,22,"options"],[88,31,55,29],[88,32,55,30,"shouldDehydrateQuery"],[88,52,55,50],[88,56,55,54,"client"],[88,62,55,60],[88,63,55,61,"getDefaultOptions"],[88,80,55,78],[88,81,55,79],[88,82,55,80],[88,83,55,81,"dehydrate"],[88,92,55,90],[88,94,55,92,"shouldDehydrateQuery"],[88,114,55,112],[88,118,55,116,"defaultShouldDehydrateQuery"],[88,145,55,143],[89,4,56,2],[89,10,56,8,"shouldRedactErrors"],[89,28,56,26],[89,31,56,29,"options"],[89,38,56,36],[89,39,56,37,"shouldRedactErrors"],[89,57,56,55],[89,61,56,59,"client"],[89,67,56,65],[89,68,56,66,"getDefaultOptions"],[89,85,56,83],[89,86,56,84],[89,87,56,85],[89,88,56,86,"dehydrate"],[89,97,56,95],[89,99,56,97,"shouldRedactErrors"],[89,117,56,115],[89,121,56,119,"defaultShouldRedactErrors"],[89,146,56,144],[90,4,57,2],[90,10,57,8,"serializeData"],[90,23,57,21],[90,26,57,24,"options"],[90,33,57,31],[90,34,57,32,"serializeData"],[90,47,57,45],[90,51,57,49,"client"],[90,57,57,55],[90,58,57,56,"getDefaultOptions"],[90,75,57,73],[90,76,57,74],[90,77,57,75],[90,78,57,76,"dehydrate"],[90,87,57,85],[90,89,57,87,"serializeData"],[90,102,57,100],[90,106,57,104,"defaultTransformerFn"],[90,126,57,124],[91,4,58,2],[91,10,58,8,"queries"],[91,17,58,15],[91,20,58,18,"client"],[91,26,58,24],[91,27,58,25,"getQueryCache"],[91,40,58,38],[91,41,58,39],[91,42,58,40],[91,43,58,41,"getAll"],[91,49,58,47],[91,50,58,48],[91,51,58,49],[91,52,58,50,"flatMap"],[91,59,58,57],[91,60,59,5,"query"],[91,65,59,10],[91,69,59,15,"filterQuery"],[91,80,59,26],[91,81,59,27,"query"],[91,86,59,32],[91,87,59,33],[91,90,59,36],[91,91,59,37,"dehydrateQuery"],[91,105,59,51],[91,106,59,52,"query"],[91,111,59,57],[91,113,59,59,"serializeData"],[91,126,59,72],[91,128,59,74,"shouldRedactErrors"],[91,146,59,92],[91,147,59,93],[91,148,59,94],[91,151,59,97],[91,153,60,2],[91,154,60,3],[92,4,61,2],[92,11,61,9],[93,6,61,11,"mutations"],[93,15,61,20],[94,6,61,22,"queries"],[95,4,61,30],[95,5,61,31],[96,2,62,0],[97,2,63,0],[97,11,63,9,"hydrate"],[97,18,63,16,"hydrate"],[97,19,63,17,"client"],[97,25,63,23],[97,27,63,25,"dehydratedState"],[97,42,63,40],[97,44,63,42,"options"],[97,51,63,49],[97,53,63,51],[98,4,64,2],[98,8,64,6],[98,15,64,13,"dehydratedState"],[98,30,64,28],[98,35,64,33],[98,43,64,41],[98,47,64,45,"dehydratedState"],[98,62,64,60],[98,67,64,65],[98,71,64,69],[98,73,64,71],[99,6,65,4],[100,4,66,2],[101,4,67,2],[101,10,67,8,"mutationCache"],[101,23,67,21],[101,26,67,24,"client"],[101,32,67,30],[101,33,67,31,"getMutationCache"],[101,49,67,47],[101,50,67,48],[101,51,67,49],[102,4,68,2],[102,10,68,8,"queryCache"],[102,20,68,18],[102,23,68,21,"client"],[102,29,68,27],[102,30,68,28,"getQueryCache"],[102,43,68,41],[102,44,68,42],[102,45,68,43],[103,4,69,2],[103,10,69,8,"deserializeData"],[103,25,69,23],[103,28,69,26,"options"],[103,35,69,33],[103,37,69,35,"defaultOptions"],[103,51,69,49],[103,53,69,51,"deserializeData"],[103,68,69,66],[103,72,69,70,"client"],[103,78,69,76],[103,79,69,77,"getDefaultOptions"],[103,96,69,94],[103,97,69,95],[103,98,69,96],[103,99,69,97,"hydrate"],[103,106,69,104],[103,108,69,106,"deserializeData"],[103,123,69,121],[103,127,69,125,"defaultTransformerFn"],[103,147,69,145],[104,4,70,2],[104,10,70,8,"mutations"],[104,19,70,17],[104,22,70,20,"dehydratedState"],[104,37,70,35],[104,38,70,36,"mutations"],[104,47,70,45],[104,51,70,49],[104,53,70,51],[105,4,71,2],[105,10,71,8,"queries"],[105,17,71,15],[105,20,71,18,"dehydratedState"],[105,35,71,33],[105,36,71,34,"queries"],[105,43,71,41],[105,47,71,45],[105,49,71,47],[106,4,72,2,"mutations"],[106,13,72,11],[106,14,72,12,"forEach"],[106,21,72,19],[106,22,72,20,"_ref"],[106,26,72,20],[106,30,72,55],[107,6,72,55],[107,10,72,21],[108,10,72,23,"state"],[109,8,72,49],[109,9,72,50],[109,12,72,50,"_ref"],[109,16,72,50],[110,8,72,33,"mutationOptions"],[110,23,72,48],[110,30,72,48,"_objectWithoutPropertiesLoose"],[110,59,72,48],[110,60,72,48,"default"],[110,67,72,48],[110,69,72,48,"_ref"],[110,73,72,48],[110,75,72,48,"_excluded"],[110,84,72,48],[111,6,73,4,"mutationCache"],[111,19,73,17],[111,20,73,18,"build"],[111,25,73,23],[111,26,74,6,"client"],[111,32,74,12],[111,34,74,12,"Object"],[111,40,74,12],[111,41,74,12,"assign"],[111,47,74,12],[111,52,76,11,"client"],[111,58,76,17],[111,59,76,18,"getDefaultOptions"],[111,76,76,35],[111,77,76,36],[111,78,76,37],[111,79,76,38,"hydrate"],[111,86,76,45],[111,88,76,47,"mutations"],[111,97,76,56],[111,99,77,11,"options"],[111,106,77,18],[111,108,77,20,"defaultOptions"],[111,122,77,34],[111,124,77,36,"mutations"],[111,133,77,45],[111,135,78,11,"mutationOptions"],[111,150,78,26],[111,153,80,6,"state"],[111,158,81,4],[111,159,81,5],[112,4,82,2],[112,5,82,3],[112,6,82,4],[113,4,83,2,"queries"],[113,11,83,9],[113,12,83,10,"forEach"],[113,19,83,17],[113,20,84,4],[113,21,84,5],[114,6,84,7,"queryKey"],[114,14,84,15],[115,6,84,17,"state"],[115,11,84,22],[116,6,84,24,"queryHash"],[116,15,84,33],[117,6,84,35,"meta"],[117,10,84,39],[118,6,84,41,"promise"],[118,13,84,48],[119,6,84,50,"dehydratedAt"],[120,4,84,63],[120,5,84,64],[120,10,84,69],[121,6,85,6],[121,12,85,12,"syncData"],[121,20,85,20],[121,23,85,23,"promise"],[121,30,85,30],[121,33,85,33],[121,37,85,33,"tryResolveSync"],[121,48,85,47],[121,49,85,47,"tryResolveSync"],[121,63,85,47],[121,65,85,48,"promise"],[121,72,85,55],[121,73,85,56],[121,76,85,59],[121,81,85,64],[121,82,85,65],[122,6,86,6],[122,12,86,12,"rawData"],[122,19,86,19],[122,22,86,22,"state"],[122,27,86,27],[122,28,86,28,"data"],[122,32,86,32],[122,37,86,37],[122,42,86,42],[122,43,86,43],[122,46,86,46,"syncData"],[122,54,86,54],[122,56,86,56,"data"],[122,60,86,60],[122,63,86,63,"state"],[122,68,86,68],[122,69,86,69,"data"],[122,73,86,73],[123,6,87,6],[123,12,87,12,"data"],[123,16,87,16],[123,19,87,19,"rawData"],[123,26,87,26],[123,31,87,31],[123,36,87,36],[123,37,87,37],[123,40,87,40,"rawData"],[123,47,87,47],[123,50,87,50,"deserializeData"],[123,65,87,65],[123,66,87,66,"rawData"],[123,73,87,73],[123,74,87,74],[124,6,88,6],[124,10,88,10,"query"],[124,15,88,15],[124,18,88,18,"queryCache"],[124,28,88,28],[124,29,88,29,"get"],[124,32,88,32],[124,33,88,33,"queryHash"],[124,42,88,42],[124,43,88,43],[125,6,89,6],[125,12,89,12,"existingQueryIsPending"],[125,34,89,34],[125,37,89,37,"query"],[125,42,89,42],[125,44,89,44,"state"],[125,49,89,49],[125,50,89,50,"status"],[125,56,89,56],[125,61,89,61],[125,70,89,70],[126,6,90,6],[126,12,90,12,"existingQueryIsFetching"],[126,35,90,35],[126,38,90,38,"query"],[126,43,90,43],[126,45,90,45,"state"],[126,50,90,50],[126,51,90,51,"fetchStatus"],[126,62,90,62],[126,67,90,67],[126,77,90,77],[127,6,91,6],[127,10,91,10,"query"],[127,15,91,15],[127,17,91,17],[128,8,92,8],[128,14,92,14,"hasNewerSyncData"],[128,30,92,30],[128,33,92,33,"syncData"],[128,41,92,41],[129,8,92,45],[130,8,93,8],[131,8,94,8,"dehydratedAt"],[131,20,94,20],[131,25,94,25],[131,30,94,30],[131,31,94,31],[131,35,94,35,"dehydratedAt"],[131,47,94,47],[131,50,94,50,"query"],[131,55,94,55],[131,56,94,56,"state"],[131,61,94,61],[131,62,94,62,"dataUpdatedAt"],[131,75,94,75],[132,8,95,8],[132,12,95,12,"state"],[132,17,95,17],[132,18,95,18,"dataUpdatedAt"],[132,31,95,31],[132,34,95,34,"query"],[132,39,95,39],[132,40,95,40,"state"],[132,45,95,45],[132,46,95,46,"dataUpdatedAt"],[132,59,95,59],[132,63,95,63,"hasNewerSyncData"],[132,79,95,79],[132,81,95,81],[133,10,96,10],[133,16,96,44,"serializedState"],[133,31,96,59],[133,38,96,59,"_objectWithoutPropertiesLoose"],[133,67,96,59],[133,68,96,59,"default"],[133,75,96,59],[133,77,96,64,"state"],[133,82,96,69],[133,84,96,69,"_excluded2"],[133,94,96,69],[134,10,97,10,"query"],[134,15,97,15],[134,16,97,16,"setState"],[134,24,97,24],[134,25,97,24,"Object"],[134,31,97,24],[134,32,97,24,"assign"],[134,38,97,24],[134,43,98,15,"serializedState"],[134,58,98,30],[135,12,99,12,"data"],[136,10,99,16],[136,12,100,11],[136,13,100,12],[137,8,101,8],[138,6,102,6],[138,7,102,7],[138,13,102,13],[139,8,103,8,"query"],[139,13,103,13],[139,16,103,16,"queryCache"],[139,26,103,26],[139,27,103,27,"build"],[139,32,103,32],[139,33,104,10,"client"],[139,39,104,16],[139,41,104,16,"Object"],[139,47,104,16],[139,48,104,16,"assign"],[139,54,104,16],[139,59,106,15,"client"],[139,65,106,21],[139,66,106,22,"getDefaultOptions"],[139,83,106,39],[139,84,106,40],[139,85,106,41],[139,86,106,42,"hydrate"],[139,93,106,49],[139,95,106,51,"queries"],[139,102,106,58],[139,104,107,15,"options"],[139,111,107,22],[139,113,107,24,"defaultOptions"],[139,127,107,38],[139,129,107,40,"queries"],[139,136,107,47],[140,10,108,12,"queryKey"],[140,18,108,20],[141,10,109,12,"queryHash"],[141,19,109,21],[142,10,110,12,"meta"],[143,8,110,16],[143,12,112,10],[144,8,113,10],[145,8,113,10,"Object"],[145,14,113,10],[145,15,113,10,"assign"],[145,21,113,10],[145,26,115,15,"state"],[145,31,115,20],[146,10,116,12,"data"],[146,14,116,16],[147,10,117,12,"fetchStatus"],[147,21,117,23],[147,23,117,25],[147,29,117,31],[148,10,118,12,"status"],[148,16,118,18],[148,18,118,20,"data"],[148,22,118,24],[148,27,118,29],[148,32,118,34],[148,33,118,35],[148,36,118,38],[148,45,118,47],[148,48,118,50,"state"],[148,53,118,55],[148,54,118,56,"status"],[149,8,118,62],[149,10,120,8],[149,11,120,9],[150,6,121,6],[151,6,122,6],[151,10,122,10,"promise"],[151,17,122,17],[151,21,122,21],[151,22,122,22,"existingQueryIsPending"],[151,44,122,44],[151,48,122,48],[151,49,122,49,"existingQueryIsFetching"],[151,72,122,72],[152,6,122,76],[153,6,123,6],[154,6,124,7,"dehydratedAt"],[154,18,124,19],[154,23,124,24],[154,28,124,29],[154,29,124,30],[154,33,124,34,"dehydratedAt"],[154,45,124,46],[154,48,124,49,"query"],[154,53,124,54],[154,54,124,55,"state"],[154,59,124,60],[154,60,124,61,"dataUpdatedAt"],[154,73,124,74],[154,74,124,75],[154,76,124,77],[155,8,125,8],[155,13,125,13,"query"],[155,18,125,18],[155,19,125,19,"fetch"],[155,24,125,24],[155,25,125,25],[155,30,125,30],[155,31,125,31],[155,33,125,33],[156,10,126,10],[157,10,127,10,"initialPromise"],[157,24,127,24],[157,26,127,26,"Promise"],[157,33,127,33],[157,34,127,34,"resolve"],[157,41,127,41],[157,42,127,42,"promise"],[157,49,127,49],[157,50,127,50],[157,51,127,51,"then"],[157,55,127,55],[157,56,127,56,"deserializeData"],[157,71,127,71],[158,8,128,8],[158,9,128,9],[158,10,128,10],[159,6,129,6],[160,4,130,4],[160,5,131,2],[160,6,131,3],[161,2,132,0],[162,0,132,1],[162,3]],"functionMap":{"names":["<global>","defaultTransformerFn","dehydrateMutation","dehydrateQuery","query.promise.then._catch$argument_0","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","defaultShouldRedactErrors","dehydrate","client.getMutationCache.getAll.flatMap$argument_0","client.getQueryCache.getAll.flatMap$argument_0","hydrate","mutations.forEach$argument_0","queries.forEach$argument_0"],"mappings":"AAA;ACE;CDE;AEC;CFO;AGC;wDCY;ODU;CHI;AKC;CLE;AMC;CNE;AOC;CPE;AQC;ICG,2ED;IEM,+FF;CRG;AWC;oBCS;GDU;IEE;KF8C;CXE"},"hasCjsExports":false},"type":"js/module"}]}