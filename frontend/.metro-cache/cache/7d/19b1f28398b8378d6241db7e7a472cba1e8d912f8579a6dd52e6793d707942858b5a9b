{"dependencies":[{"name":"react","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":13,"index":87},"end":{"line":5,"column":29,"index":103}}],"key":"XN65eZP/QkNMzaBAXbG/zPyidpY=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  exports.__esModule = true;\n  exports.default = useRefEffect;\n  var _react = require(_dependencyMap[0], \"react\");\n  /**\n   * Copyright (c) Meta Platforms, Inc. and affiliates.\n   *\n   * This source code is licensed under the MIT license found in the\n   * LICENSE file in the root directory of this source tree.\n   *\n   * \n   * @format\n   */\n\n  /**\n   * Constructs a callback ref that provides similar semantics as `useEffect`. The\n   * supplied `effect` callback will be called with non-null component instances.\n   * The `effect` callback can also optionally return a cleanup function.\n   *\n   * When a component is updated or unmounted, the cleanup function is called. The\n   * `effect` callback will then be called again, if applicable.\n   *\n   * When a new `effect` callback is supplied, the previously returned cleanup\n   * function will be called before the new `effect` callback is called with the\n   * same instance.\n   *\n   * WARNING: The `effect` callback should be stable (e.g. using `useCallback`).\n   */\n  function useRefEffect(effect) {\n    var cleanupRef = (0, _react.useRef)(undefined);\n    return (0, _react.useCallback)(instance => {\n      if (cleanupRef.current) {\n        cleanupRef.current();\n        cleanupRef.current = undefined;\n      }\n      if (instance != null) {\n        cleanupRef.current = effect(instance);\n      }\n    }, [effect]);\n  }\n  module.exports = exports.default;\n});","lineCount":44,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0,"exports"],[4,9,3,7],[4,10,3,8,"__esModule"],[4,20,3,18],[4,23,3,21],[4,27,3,25],[5,2,4,0,"exports"],[5,9,4,7],[5,10,4,8,"default"],[5,17,4,15],[5,20,4,18,"useRefEffect"],[5,32,4,30],[6,2,5,0],[6,6,5,4,"_react"],[6,12,5,10],[6,15,5,13,"require"],[6,22,5,20],[6,23,5,20,"_dependencyMap"],[6,37,5,20],[6,49,5,28],[6,50,5,29],[7,2,6,0],[8,0,7,0],[9,0,8,0],[10,0,9,0],[11,0,10,0],[12,0,11,0],[13,0,12,0],[14,0,13,0],[15,0,14,0],[17,2,16,0],[18,0,17,0],[19,0,18,0],[20,0,19,0],[21,0,20,0],[22,0,21,0],[23,0,22,0],[24,0,23,0],[25,0,24,0],[26,0,25,0],[27,0,26,0],[28,0,27,0],[29,0,28,0],[30,0,29,0],[31,2,30,0],[31,11,30,9,"useRefEffect"],[31,23,30,21,"useRefEffect"],[31,24,30,22,"effect"],[31,30,30,28],[31,32,30,30],[32,4,31,2],[32,8,31,6,"cleanupRef"],[32,18,31,16],[32,21,31,19],[32,22,31,20],[32,23,31,21],[32,25,31,23,"_react"],[32,31,31,29],[32,32,31,30,"useRef"],[32,38,31,36],[32,40,31,38,"undefined"],[32,49,31,47],[32,50,31,48],[33,4,32,2],[33,11,32,9],[33,12,32,10],[33,13,32,11],[33,15,32,13,"_react"],[33,21,32,19],[33,22,32,20,"useCallback"],[33,33,32,31],[33,35,32,33,"instance"],[33,43,32,41],[33,47,32,45],[34,6,33,4],[34,10,33,8,"cleanupRef"],[34,20,33,18],[34,21,33,19,"current"],[34,28,33,26],[34,30,33,28],[35,8,34,6,"cleanupRef"],[35,18,34,16],[35,19,34,17,"current"],[35,26,34,24],[35,27,34,25],[35,28,34,26],[36,8,35,6,"cleanupRef"],[36,18,35,16],[36,19,35,17,"current"],[36,26,35,24],[36,29,35,27,"undefined"],[36,38,35,36],[37,6,36,4],[38,6,37,4],[38,10,37,8,"instance"],[38,18,37,16],[38,22,37,20],[38,26,37,24],[38,28,37,26],[39,8,38,6,"cleanupRef"],[39,18,38,16],[39,19,38,17,"current"],[39,26,38,24],[39,29,38,27,"effect"],[39,35,38,33],[39,36,38,34,"instance"],[39,44,38,42],[39,45,38,43],[40,6,39,4],[41,4,40,2],[41,5,40,3],[41,7,40,5],[41,8,40,6,"effect"],[41,14,40,12],[41,15,40,13],[41,16,40,14],[42,2,41,0],[43,2,42,0,"module"],[43,8,42,6],[43,9,42,7,"exports"],[43,16,42,14],[43,19,42,17,"exports"],[43,26,42,24],[43,27,42,25,"default"],[43,34,42,32],[44,0,42,33],[44,3]],"functionMap":{"names":["<global>","useRefEffect","<anonymous>"],"mappings":"AAA;AC6B;iCCE;GDQ;CDC"},"hasCjsExports":true},"type":"js/module"}]}