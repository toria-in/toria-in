{"dependencies":[{"name":"../../global-state/router-store","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":23,"index":287},"end":{"line":6,"column":65,"index":329}}],"key":"34G8cf9eMVuL1UIt4w1T43KGPlk=","exportNames":["*"],"imports":1}},{"name":"../../global-state/routing","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":18,"index":349},"end":{"line":7,"column":55,"index":386}}],"key":"/KYD16J3C+S2+TKpFA4/GL5ghgM=","exportNames":["*"],"imports":1}},{"name":"../href","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":8,"column":15,"index":403},"end":{"line":8,"column":33,"index":421}}],"key":"JFYDN89CjCE9uy6rzcI/l/zLru8=","exportNames":["*"],"imports":1}},{"name":"../../navigationParams","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":9,"column":27,"index":450},"end":{"line":9,"column":60,"index":483}}],"key":"XAh+4Y1ikoKrpGxORep8MZ3uXwI=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getTabPathFromRootStateByHref = getTabPathFromRootStateByHref;\n  exports.getPreloadedRouteFromRootStateByHref = getPreloadedRouteFromRootStateByHref;\n  exports.deepEqual = deepEqual;\n  const router_store_1 = require(_dependencyMap[0], \"../../global-state/router-store\");\n  const routing_1 = require(_dependencyMap[1], \"../../global-state/routing\");\n  const href_1 = require(_dependencyMap[2], \"../href\");\n  const navigationParams_1 = require(_dependencyMap[3], \"../../navigationParams\");\n  function getTabPathFromRootStateByHref(href, rootState) {\n    const hrefState = router_store_1.store.getStateForHref((0, href_1.resolveHref)(href));\n    const state = rootState;\n    if (!hrefState || !state) {\n      return [];\n    }\n    // Replicating the logic from `linkTo`\n    const {\n      navigationRoutes\n    } = (0, routing_1.findDivergentState)(hrefState, state, true);\n    if (!navigationRoutes.length) {\n      return [];\n    }\n    const tabPath = [];\n    navigationRoutes.forEach((route, i, arr) => {\n      if (route.state?.type === 'tab') {\n        const tabState = route.state;\n        const oldTabKey = tabState.routes[tabState.index].key;\n        // The next route will be either stack inside a tab or a new tab key\n        if (!arr[i + 1]) {\n          throw new Error(`New tab route is missing for ${route.key}. This is likely an internal Expo Router bug.`);\n        }\n        const newTabKey = arr[i + 1].key;\n        tabPath.push({\n          oldTabKey,\n          newTabKey\n        });\n      }\n    });\n    return tabPath;\n  }\n  function getPreloadedRouteFromRootStateByHref(href, rootState) {\n    const hrefState = router_store_1.store.getStateForHref((0, href_1.resolveHref)(href));\n    const state = rootState;\n    if (!hrefState || !state) {\n      return undefined;\n    }\n    // Replicating the logic from `linkTo`\n    const {\n      navigationState,\n      actionStateRoute\n    } = (0, routing_1.findDivergentState)(hrefState, state, true);\n    if (!navigationState || !actionStateRoute) {\n      return undefined;\n    }\n    if (navigationState.type === 'stack') {\n      const stackState = navigationState;\n      const payload = (0, routing_1.getPayloadFromStateRoute)(actionStateRoute);\n      const preloadedRoute = stackState.preloadedRoutes.find(route => route.name === actionStateRoute.name && deepEqual((0, navigationParams_1.removeInternalExpoRouterParams)(route.params), (0, navigationParams_1.removeInternalExpoRouterParams)(payload.params)));\n      const activeRoute = stackState.routes[stackState.index];\n      // When the active route is the same as the preloaded route,\n      // then we should not navigate. It aligns with base link behavior.\n      if (activeRoute.name === preloadedRoute?.name && deepEqual(\n      // using ?? {}, because from our perspective undefined === {}, as both mean no params\n      (0, navigationParams_1.removeInternalExpoRouterParams)(activeRoute.params ?? {}), (0, navigationParams_1.removeInternalExpoRouterParams)(payload.params ?? {}))) {\n        return undefined;\n      }\n      return preloadedRoute;\n    }\n    return undefined;\n  }\n  function deepEqual(a, b) {\n    if (a === b) {\n      return true;\n    }\n    if (a == null || b == null) {\n      return false;\n    }\n    if (typeof a !== 'object' || typeof b !== 'object') {\n      return false;\n    }\n    const keys = Object.keys(a);\n    return keys.length === Object.keys(b).length && keys.every(key => deepEqual(a[key], b[key]));\n  }\n});","lineCount":88,"map":[[2,2,1,0],[2,14,1,12],[4,2,2,0,"Object"],[4,8,2,6],[4,9,2,7,"defineProperty"],[4,23,2,21],[4,24,2,22,"exports"],[4,31,2,29],[4,33,2,31],[4,45,2,43],[4,47,2,45],[5,4,2,47,"value"],[5,9,2,52],[5,11,2,54],[6,2,2,59],[6,3,2,60],[6,4,2,61],[7,2,3,0,"exports"],[7,9,3,7],[7,10,3,8,"getTabPathFromRootStateByHref"],[7,39,3,37],[7,42,3,40,"getTabPathFromRootStateByHref"],[7,71,3,69],[8,2,4,0,"exports"],[8,9,4,7],[8,10,4,8,"getPreloadedRouteFromRootStateByHref"],[8,46,4,44],[8,49,4,47,"getPreloadedRouteFromRootStateByHref"],[8,85,4,83],[9,2,5,0,"exports"],[9,9,5,7],[9,10,5,8,"deepEqual"],[9,19,5,17],[9,22,5,20,"deepEqual"],[9,31,5,29],[10,2,6,0],[10,8,6,6,"router_store_1"],[10,22,6,20],[10,25,6,23,"require"],[10,32,6,30],[10,33,6,30,"_dependencyMap"],[10,47,6,30],[10,85,6,64],[10,86,6,65],[11,2,7,0],[11,8,7,6,"routing_1"],[11,17,7,15],[11,20,7,18,"require"],[11,27,7,25],[11,28,7,25,"_dependencyMap"],[11,42,7,25],[11,75,7,54],[11,76,7,55],[12,2,8,0],[12,8,8,6,"href_1"],[12,14,8,12],[12,17,8,15,"require"],[12,24,8,22],[12,25,8,22,"_dependencyMap"],[12,39,8,22],[12,53,8,32],[12,54,8,33],[13,2,9,0],[13,8,9,6,"navigationParams_1"],[13,26,9,24],[13,29,9,27,"require"],[13,36,9,34],[13,37,9,34,"_dependencyMap"],[13,51,9,34],[13,80,9,59],[13,81,9,60],[14,2,10,0],[14,11,10,9,"getTabPathFromRootStateByHref"],[14,40,10,38,"getTabPathFromRootStateByHref"],[14,41,10,39,"href"],[14,45,10,43],[14,47,10,45,"rootState"],[14,56,10,54],[14,58,10,56],[15,4,11,4],[15,10,11,10,"hrefState"],[15,19,11,19],[15,22,11,22,"router_store_1"],[15,36,11,36],[15,37,11,37,"store"],[15,42,11,42],[15,43,11,43,"getStateForHref"],[15,58,11,58],[15,59,11,59],[15,60,11,60],[15,61,11,61],[15,63,11,63,"href_1"],[15,69,11,69],[15,70,11,70,"resolveHref"],[15,81,11,81],[15,83,11,83,"href"],[15,87,11,87],[15,88,11,88],[15,89,11,89],[16,4,12,4],[16,10,12,10,"state"],[16,15,12,15],[16,18,12,18,"rootState"],[16,27,12,27],[17,4,13,4],[17,8,13,8],[17,9,13,9,"hrefState"],[17,18,13,18],[17,22,13,22],[17,23,13,23,"state"],[17,28,13,28],[17,30,13,30],[18,6,14,8],[18,13,14,15],[18,15,14,17],[19,4,15,4],[20,4,16,4],[21,4,17,4],[21,10,17,10],[22,6,17,12,"navigationRoutes"],[23,4,17,29],[23,5,17,30],[23,8,17,33],[23,9,17,34],[23,10,17,35],[23,12,17,37,"routing_1"],[23,21,17,46],[23,22,17,47,"findDivergentState"],[23,40,17,65],[23,42,17,67,"hrefState"],[23,51,17,76],[23,53,17,78,"state"],[23,58,17,83],[23,60,17,85],[23,64,17,89],[23,65,17,90],[24,4,18,4],[24,8,18,8],[24,9,18,9,"navigationRoutes"],[24,25,18,25],[24,26,18,26,"length"],[24,32,18,32],[24,34,18,34],[25,6,19,8],[25,13,19,15],[25,15,19,17],[26,4,20,4],[27,4,21,4],[27,10,21,10,"tabPath"],[27,17,21,17],[27,20,21,20],[27,22,21,22],[28,4,22,4,"navigationRoutes"],[28,20,22,20],[28,21,22,21,"forEach"],[28,28,22,28],[28,29,22,29],[28,30,22,30,"route"],[28,35,22,35],[28,37,22,37,"i"],[28,38,22,38],[28,40,22,40,"arr"],[28,43,22,43],[28,48,22,48],[29,6,23,8],[29,10,23,12,"route"],[29,15,23,17],[29,16,23,18,"state"],[29,21,23,23],[29,23,23,25,"type"],[29,27,23,29],[29,32,23,34],[29,37,23,39],[29,39,23,41],[30,8,24,12],[30,14,24,18,"tabState"],[30,22,24,26],[30,25,24,29,"route"],[30,30,24,34],[30,31,24,35,"state"],[30,36,24,40],[31,8,25,12],[31,14,25,18,"oldTabKey"],[31,23,25,27],[31,26,25,30,"tabState"],[31,34,25,38],[31,35,25,39,"routes"],[31,41,25,45],[31,42,25,46,"tabState"],[31,50,25,54],[31,51,25,55,"index"],[31,56,25,60],[31,57,25,61],[31,58,25,62,"key"],[31,61,25,65],[32,8,26,12],[33,8,27,12],[33,12,27,16],[33,13,27,17,"arr"],[33,16,27,20],[33,17,27,21,"i"],[33,18,27,22],[33,21,27,25],[33,22,27,26],[33,23,27,27],[33,25,27,29],[34,10,28,16],[34,16,28,22],[34,20,28,26,"Error"],[34,25,28,31],[34,26,28,32],[34,58,28,64,"route"],[34,63,28,69],[34,64,28,70,"key"],[34,67,28,73],[34,114,28,120],[34,115,28,121],[35,8,29,12],[36,8,30,12],[36,14,30,18,"newTabKey"],[36,23,30,27],[36,26,30,30,"arr"],[36,29,30,33],[36,30,30,34,"i"],[36,31,30,35],[36,34,30,38],[36,35,30,39],[36,36,30,40],[36,37,30,41,"key"],[36,40,30,44],[37,8,31,12,"tabPath"],[37,15,31,19],[37,16,31,20,"push"],[37,20,31,24],[37,21,31,25],[38,10,31,27,"oldTabKey"],[38,19,31,36],[39,10,31,38,"newTabKey"],[40,8,31,48],[40,9,31,49],[40,10,31,50],[41,6,32,8],[42,4,33,4],[42,5,33,5],[42,6,33,6],[43,4,34,4],[43,11,34,11,"tabPath"],[43,18,34,18],[44,2,35,0],[45,2,36,0],[45,11,36,9,"getPreloadedRouteFromRootStateByHref"],[45,47,36,45,"getPreloadedRouteFromRootStateByHref"],[45,48,36,46,"href"],[45,52,36,50],[45,54,36,52,"rootState"],[45,63,36,61],[45,65,36,63],[46,4,37,4],[46,10,37,10,"hrefState"],[46,19,37,19],[46,22,37,22,"router_store_1"],[46,36,37,36],[46,37,37,37,"store"],[46,42,37,42],[46,43,37,43,"getStateForHref"],[46,58,37,58],[46,59,37,59],[46,60,37,60],[46,61,37,61],[46,63,37,63,"href_1"],[46,69,37,69],[46,70,37,70,"resolveHref"],[46,81,37,81],[46,83,37,83,"href"],[46,87,37,87],[46,88,37,88],[46,89,37,89],[47,4,38,4],[47,10,38,10,"state"],[47,15,38,15],[47,18,38,18,"rootState"],[47,27,38,27],[48,4,39,4],[48,8,39,8],[48,9,39,9,"hrefState"],[48,18,39,18],[48,22,39,22],[48,23,39,23,"state"],[48,28,39,28],[48,30,39,30],[49,6,40,8],[49,13,40,15,"undefined"],[49,22,40,24],[50,4,41,4],[51,4,42,4],[52,4,43,4],[52,10,43,10],[53,6,43,12,"navigationState"],[53,21,43,27],[54,6,43,29,"actionStateRoute"],[55,4,43,46],[55,5,43,47],[55,8,43,50],[55,9,43,51],[55,10,43,52],[55,12,43,54,"routing_1"],[55,21,43,63],[55,22,43,64,"findDivergentState"],[55,40,43,82],[55,42,43,84,"hrefState"],[55,51,43,93],[55,53,43,95,"state"],[55,58,43,100],[55,60,43,102],[55,64,43,106],[55,65,43,107],[56,4,44,4],[56,8,44,8],[56,9,44,9,"navigationState"],[56,24,44,24],[56,28,44,28],[56,29,44,29,"actionStateRoute"],[56,45,44,45],[56,47,44,47],[57,6,45,8],[57,13,45,15,"undefined"],[57,22,45,24],[58,4,46,4],[59,4,47,4],[59,8,47,8,"navigationState"],[59,23,47,23],[59,24,47,24,"type"],[59,28,47,28],[59,33,47,33],[59,40,47,40],[59,42,47,42],[60,6,48,8],[60,12,48,14,"stackState"],[60,22,48,24],[60,25,48,27,"navigationState"],[60,40,48,42],[61,6,49,8],[61,12,49,14,"payload"],[61,19,49,21],[61,22,49,24],[61,23,49,25],[61,24,49,26],[61,26,49,28,"routing_1"],[61,35,49,37],[61,36,49,38,"getPayloadFromStateRoute"],[61,60,49,62],[61,62,49,64,"actionStateRoute"],[61,78,49,80],[61,79,49,81],[62,6,50,8],[62,12,50,14,"preloadedRoute"],[62,26,50,28],[62,29,50,31,"stackState"],[62,39,50,41],[62,40,50,42,"preloadedRoutes"],[62,55,50,57],[62,56,50,58,"find"],[62,60,50,62],[62,61,50,64,"route"],[62,66,50,69],[62,70,50,74,"route"],[62,75,50,79],[62,76,50,80,"name"],[62,80,50,84],[62,85,50,89,"actionStateRoute"],[62,101,50,105],[62,102,50,106,"name"],[62,106,50,110],[62,110,51,12,"deepEqual"],[62,119,51,21],[62,120,51,22],[62,121,51,23],[62,122,51,24],[62,124,51,26,"navigationParams_1"],[62,142,51,44],[62,143,51,45,"removeInternalExpoRouterParams"],[62,173,51,75],[62,175,51,77,"route"],[62,180,51,82],[62,181,51,83,"params"],[62,187,51,89],[62,188,51,90],[62,190,51,92],[62,191,51,93],[62,192,51,94],[62,194,51,96,"navigationParams_1"],[62,212,51,114],[62,213,51,115,"removeInternalExpoRouterParams"],[62,243,51,145],[62,245,51,147,"payload"],[62,252,51,154],[62,253,51,155,"params"],[62,259,51,161],[62,260,51,162],[62,261,51,163],[62,262,51,164],[63,6,52,8],[63,12,52,14,"activeRoute"],[63,23,52,25],[63,26,52,28,"stackState"],[63,36,52,38],[63,37,52,39,"routes"],[63,43,52,45],[63,44,52,46,"stackState"],[63,54,52,56],[63,55,52,57,"index"],[63,60,52,62],[63,61,52,63],[64,6,53,8],[65,6,54,8],[66,6,55,8],[66,10,55,12,"activeRoute"],[66,21,55,23],[66,22,55,24,"name"],[66,26,55,28],[66,31,55,33,"preloadedRoute"],[66,45,55,47],[66,47,55,49,"name"],[66,51,55,53],[66,55,56,12,"deepEqual"],[66,64,56,21],[67,6,57,12],[68,6,58,12],[68,7,58,13],[68,8,58,14],[68,10,58,16,"navigationParams_1"],[68,28,58,34],[68,29,58,35,"removeInternalExpoRouterParams"],[68,59,58,65],[68,61,58,67,"activeRoute"],[68,72,58,78],[68,73,58,79,"params"],[68,79,58,85],[68,83,58,89],[68,84,58,90],[68,85,58,91],[68,86,58,92],[68,88,58,94],[68,89,58,95],[68,90,58,96],[68,92,58,98,"navigationParams_1"],[68,110,58,116],[68,111,58,117,"removeInternalExpoRouterParams"],[68,141,58,147],[68,143,58,149,"payload"],[68,150,58,156],[68,151,58,157,"params"],[68,157,58,163],[68,161,58,167],[68,162,58,168],[68,163,58,169],[68,164,58,170],[68,165,58,171],[68,167,58,173],[69,8,59,12],[69,15,59,19,"undefined"],[69,24,59,28],[70,6,60,8],[71,6,61,8],[71,13,61,15,"preloadedRoute"],[71,27,61,29],[72,4,62,4],[73,4,63,4],[73,11,63,11,"undefined"],[73,20,63,20],[74,2,64,0],[75,2,65,0],[75,11,65,9,"deepEqual"],[75,20,65,18,"deepEqual"],[75,21,65,19,"a"],[75,22,65,20],[75,24,65,22,"b"],[75,25,65,23],[75,27,65,25],[76,4,66,4],[76,8,66,8,"a"],[76,9,66,9],[76,14,66,14,"b"],[76,15,66,15],[76,17,66,17],[77,6,67,8],[77,13,67,15],[77,17,67,19],[78,4,68,4],[79,4,69,4],[79,8,69,8,"a"],[79,9,69,9],[79,13,69,13],[79,17,69,17],[79,21,69,21,"b"],[79,22,69,22],[79,26,69,26],[79,30,69,30],[79,32,69,32],[80,6,70,8],[80,13,70,15],[80,18,70,20],[81,4,71,4],[82,4,72,4],[82,8,72,8],[82,15,72,15,"a"],[82,16,72,16],[82,21,72,21],[82,29,72,29],[82,33,72,33],[82,40,72,40,"b"],[82,41,72,41],[82,46,72,46],[82,54,72,54],[82,56,72,56],[83,6,73,8],[83,13,73,15],[83,18,73,20],[84,4,74,4],[85,4,75,4],[85,10,75,10,"keys"],[85,14,75,14],[85,17,75,17,"Object"],[85,23,75,23],[85,24,75,24,"keys"],[85,28,75,28],[85,29,75,29,"a"],[85,30,75,30],[85,31,75,31],[86,4,76,4],[86,11,76,11,"keys"],[86,15,76,15],[86,16,76,16,"length"],[86,22,76,22],[86,27,76,27,"Object"],[86,33,76,33],[86,34,76,34,"keys"],[86,38,76,38],[86,39,76,39,"b"],[86,40,76,40],[86,41,76,41],[86,42,76,42,"length"],[86,48,76,48],[86,52,76,52,"keys"],[86,56,76,56],[86,57,76,57,"every"],[86,62,76,62],[86,63,76,64,"key"],[86,66,76,67],[86,70,76,72,"deepEqual"],[86,79,76,81],[86,80,76,82,"a"],[86,81,76,83],[86,82,76,84,"key"],[86,85,76,87],[86,86,76,88],[86,88,76,90,"b"],[86,89,76,91],[86,90,76,92,"key"],[86,93,76,95],[86,94,76,96],[86,95,76,97],[86,96,76,98],[87,2,77,0],[88,0,77,1],[88,3]],"functionMap":{"names":["<global>","getTabPathFromRootStateByHref","navigationRoutes.forEach$argument_0","getPreloadedRouteFromRootStateByHref","stackState.preloadedRoutes.find$argument_0","deepEqual","keys.every$argument_0"],"mappings":"AAA;ACS;6BCY;KDW;CDE;AGC;+DCc;mKDC;CHa;AKC;+DCW,kCD;CLC"},"hasCjsExports":true},"type":"js/module"}]}